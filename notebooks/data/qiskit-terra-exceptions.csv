file,exception
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/execute_function.py,"QiskitError(""Must supply QuantumCircuit to schedule circuit."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/execute_function.py,"QiskitError(""Invalid backend type %s"" % type(backend))"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/execute_function.py,"QiskitError(
    ""The parameters pass_manager conflicts with the following ""
    ""parameter(s): {}."".format("", "".join(conflicting_args))
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/user_config.py,"exceptions.QiskitUserConfigError(
    ""%s is not a valid circuit drawer backend. Must be ""
    ""either 'text', 'mpl', 'latex', 'latex_source', or ""
    ""'auto'."" % circuit_drawer
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/user_config.py,"exceptions.QiskitUserConfigError(
    f""'{state_drawer}' is not a valid state drawer backend. ""
    f""Choose from: '{valid_choices_string}'""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/user_config.py,"exceptions.QiskitUserConfigError(
    f""Value assigned to circuit_reverse_bits is not valid. {str(err)}""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/user_config.py,"exceptions.QiskitUserConfigError(
    ""%s is not a valid optimization level. Must be 0, 1, 2, or 3.""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/user_config.py,"exceptions.QiskitUserConfigError(
    ""%s is not a valid number of processes. Must be greater than 0""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/user_config.py,"exceptions.QiskitUserConfigError(""Key must be string type"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/user_config.py,"exceptions.QiskitUserConfigError(f""{key} is not a valid user config."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/user_config.py,"exceptions.QiskitUserConfigError(
    f""Unable to load the config file {filename}. Error: '{str(ex)}'""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/__init__.py,"MissingOptionalLibraryError(
    ""qiskit-aer"", ""Aer provider"", ""pip install qiskit-aer""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/__init__.py,"MissingOptionalLibraryError(
    ""qiskit-ibmq-provider"", ""IBMQ provider"", ""pip install qiskit-ibmq-provider""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/version.py,"OSError(f""Command {cmd} exited with code {proc.returncode}: {error_message}"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/dagcircuit/dagcircuit.py,"DAGCircuitError(""not a Qubit instance."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/dagcircuit/dagcircuit.py,"DAGCircuitError(""duplicate qubits %s"" % duplicate_qubits)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/dagcircuit/dagcircuit.py,"DAGCircuitError(""not a Clbit instance."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/dagcircuit/dagcircuit.py,"DAGCircuitError(""duplicate clbits %s"" % duplicate_clbits)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/dagcircuit/dagcircuit.py,"DAGCircuitError(""not a QuantumRegister instance."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/dagcircuit/dagcircuit.py,"DAGCircuitError(""duplicate register %s"" % qreg.name)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/dagcircuit/dagcircuit.py,"DAGCircuitError(""not a ClassicalRegister instance."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/dagcircuit/dagcircuit.py,"DAGCircuitError(""duplicate register %s"" % creg.name)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/dagcircuit/dagcircuit.py,"DAGCircuitError(f""duplicate wire {wire}"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/dagcircuit/dagcircuit.py,"DAGCircuitError(
    ""clbits not of type Clbit: %s"" % [b for b in clbits if not isinstance(b, Clbit)]
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/dagcircuit/dagcircuit.py,"DAGCircuitError(""clbits not in circuit: %s"" % unknown_clbits)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/dagcircuit/dagcircuit.py,"DAGCircuitError(""clbits not idle: %s"" % busy_clbits)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/dagcircuit/dagcircuit.py,"DAGCircuitError(
    ""cregs not of type ClassicalRegister: %s""
    % [r for r in cregs if not isinstance(r, ClassicalRegister)]
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/dagcircuit/dagcircuit.py,"DAGCircuitError(""cregs not in circuit: %s"" % unknown_cregs)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/dagcircuit/dagcircuit.py,"DAGCircuitError(
    ""qubits not of type Qubit: %s"" % [b for b in qubits if not isinstance(b, Qubit)]
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/dagcircuit/dagcircuit.py,"DAGCircuitError(""qubits not in circuit: %s"" % unknown_qubits)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/dagcircuit/dagcircuit.py,"DAGCircuitError(""qubits not idle: %s"" % busy_qubits)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/dagcircuit/dagcircuit.py,"DAGCircuitError(
    ""qregs not of type QuantumRegister: %s""
    % [r for r in qregs if not isinstance(r, QuantumRegister)]
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/dagcircuit/dagcircuit.py,"DAGCircuitError(""qregs not in circuit: %s"" % unknown_qregs)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/dagcircuit/dagcircuit.py,"DAGCircuitError(""wire %s not in circuit"" % wire)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/dagcircuit/dagcircuit.py,"DAGCircuitError(
    ""Invalid dagcircuit input node %s has no output"" % self.input_map[wire]
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/dagcircuit/dagcircuit.py,"DAGCircuitError(""invalid creg in condition for %s"" % name)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/dagcircuit/dagcircuit.py,"DAGCircuitError(f""(qu)bit {wire} not found in {amap}"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/dagcircuit/dagcircuit.py,"CircuitError(""Condition must be used with ClassicalRegister or Clbit."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/dagcircuit/dagcircuit.py,"DAGCircuitError(
    ""Did not find creg containing mapped clbit in conditional.""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/dagcircuit/dagcircuit.py,"DAGCircuitError(
    ""wire_map maps conditional register onto more than one creg.""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/dagcircuit/dagcircuit.py,"DAGCircuitError(""Condition registers not found in wire_map."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/dagcircuit/dagcircuit.py,"DAGCircuitError(""Front composition not supported yet."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/dagcircuit/dagcircuit.py,"DAGCircuitError(
    ""Trying to compose with another DAGCircuit which has more 'in' edges.""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/dagcircuit/dagcircuit.py,"DAGCircuitError(
    ""Number of items in qubits parameter does not""
    "" match number of qubits in the circuit.""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/dagcircuit/dagcircuit.py,"DAGCircuitError(
    ""Number of items in clbits parameter does not""
    "" match number of clbits in the circuit.""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/dagcircuit/dagcircuit.py,"DAGCircuitError(""duplicates in wire_map"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/dagcircuit/dagcircuit.py,"DAGCircuitError(
    ""wire %s[%d] not in self"" % (m_wire.register.name, m_wire.index)
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/dagcircuit/dagcircuit.py,"DAGCircuitError(
    ""inconsistent wire type for %s[%d] in other""
    % (nd.register.name, nd.wire.index)
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/dagcircuit/dagcircuit.py,"DAGCircuitError(""Cannot add a condition on a generic Operation."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/dagcircuit/dagcircuit.py,"DAGCircuitError(""bad node type %s"" % type(nd))"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/dagcircuit/dagcircuit.py,"DAGCircuitError(
    ""Size with control flow is ambiguous.""
    "" You may use `recurse=True` to get a result,""
    "" but see this method's documentation for the meaning of this.""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/dagcircuit/dagcircuit.py,"DAGCircuitError(f""unknown control-flow type: '{node.op.name}'"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/dagcircuit/dagcircuit.py,"DAGCircuitError(
    ""Depth with control flow is ambiguous.""
    "" You may use `recurse=True` to get a result,""
    "" but see this method's documentation for the meaning of this.""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/dagcircuit/dagcircuit.py,"DAGCircuitError(""not a DAG"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/dagcircuit/dagcircuit.py,"DAGCircuitError(""Can't replace an empty node_block"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/dagcircuit/dagcircuit.py,"DAGCircuitError(
    ""Replacing the specified node block would introduce a cycle""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/dagcircuit/dagcircuit.py,"DAGCircuitError(f""expected node DAGOpNode, got {type(node)}"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/dagcircuit/dagcircuit.py,"DAGCircuitError(
    f""bit mapping invalid: expected {len(node_wire_order)}, got {len(wires)}""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/dagcircuit/dagcircuit.py,"DAGCircuitError(""bit mapping invalid: some bits have duplicate entries"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/dagcircuit/dagcircuit.py,"DAGCircuitError(f""bit mapping invalid: {our_wire} is not in this DAG"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/dagcircuit/dagcircuit.py,"DAGCircuitError(
    f""bit mapping invalid: {input_dag_wire} and {our_wire} are different bit types""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/dagcircuit/dagcircuit.py,"DAGCircuitError(
    ""cannot propagate a condition to an element that already has one""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/dagcircuit/dagcircuit.py,"DAGCircuitError(
    ""cannot propagate a condition to an element that acts on those bits""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/dagcircuit/dagcircuit.py,"DAGCircuitError(""Only DAGOpNodes can be replaced."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/dagcircuit/dagcircuit.py,"DAGCircuitError(
    ""Cannot replace node of width ({} qubits, {} clbits) with ""
    ""operation of mismatched width ({} qubits, {} clbits)."".format(
        node.op.num_qubits, node.op.num_clbits, op.num_qubits, op.num_clbits
    )
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/dagcircuit/dagcircuit.py,"DAGCircuitError(""Cannot add a condition on a generic Operation."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/dagcircuit/dagcircuit.py,"DAGCircuitError(""Cannot add a condition on a generic Operation."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/dagcircuit/dagcircuit.py,"DAGCircuitError(""nodes to swap are not both DAGOpNodes"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/dagcircuit/dagcircuit.py,"DAGCircuitError(""attempt to swap unconnected nodes"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/dagcircuit/dagcircuit.py,"DAGCircuitError(
    'The method remove_op_node only works on DAGOpNodes. A ""%s"" '
    ""node type was wrongly provided."" % type(node)
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/dagcircuit/dagcircuit.py,"DAGCircuitError(""The given wire %s is not present in the circuit"" % str(wire))"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/dagcircuit/collect_blocks.py,"DAGCircuitError(""not a DAG."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/dagcircuit/dagdepnode.py,"QiskitError(""The node %s is not an op node"" % (str(self)))"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/dagcircuit/dagdependency.py,"DAGDependencyError(""not a Qubit instance."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/dagcircuit/dagdependency.py,"DAGDependencyError(""duplicate qubits %s"" % duplicate_qubits)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/dagcircuit/dagdependency.py,"DAGDependencyError(""not a Clbit instance."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/dagcircuit/dagdependency.py,"DAGDependencyError(""duplicate clbits %s"" % duplicate_clbits)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/dagcircuit/dagdependency.py,"DAGDependencyError(""not a QuantumRegister instance."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/dagcircuit/dagdependency.py,"DAGDependencyError(""duplicate register %s"" % qreg.name)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/dagcircuit/dagdependency.py,"DAGDependencyError(""not a ClassicalRegister instance."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/dagcircuit/dagdependency.py,"DAGDependencyError(""duplicate register %s"" % creg.name)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/dagcircuit/dagdependency.py,"DAGDependencyError(""Can't replace an empty node_block"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/dagcircuit/dagdependency.py,"DAGDependencyError(
    ""Replacing the specified node block would introduce a cycle""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/qobj/pulse_qobj.py,"TypeError(f""{value} is not in a valid complex number format."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/qobj/converters/lo_config.py,"QiskitError(
    ""Invalid experiment level qubit LO's. Must either pass values ""
    ""for all drive channels or pass 'default_qubit_los'.""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/qobj/converters/lo_config.py,"QiskitError(
    ""Invalid experiment level measurement LO's. Must either pass ""
    ""values for all measurement channels or pass 'default_meas_los'.""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/qobj/converters/pulse_instruction.py,"QiskitError(f""'{instance}' is not valid pulse type."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/qobj/converters/pulse_instruction.py,"QiskitError(""Bundle of instruction is not supported except for Acquire."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/qobj/converters/pulse_instruction.py,"QiskitError(
    f""Pulse Qobj doesn't support {instruction.__class__.__name__}. ""
    ""This instruction cannot be submitted with Qobj.""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/qobj/converters/pulse_instruction.py,"QiskitError(
    ""The supplied acquire instructions have different starting times. ""
    ""Something has gone wrong calling this code. Please report this ""
    ""issue.""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/qobj/converters/pulse_instruction.py,"QiskitError(
    ""Acquire instructions beginning at the same time must have same duration.""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/qobj/converters/pulse_instruction.py,"QiskitError(
    ""A discriminator must be supplied for every acquisition or a single ""
    ""discriminator for all acquisitions.""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/qobj/converters/pulse_instruction.py,"QiskitError(
    ""A kernel must be supplied for every acquisition or a single ""
    ""kernel for all acquisitions.""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/qobj/converters/pulse_instruction.py,"QiskitError(""Channel %s is not valid"" % channel)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/qobj/converters/pulse_instruction.py,"QiskitError(
    f""Instruction {instruction.name} on qubit {instruction.qubits} is not found  ""
    ""in Qiskit namespace. This instruction cannot be deserialized.""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/quantum_info/operators/measures.py,"QiskitError(
    ""Input quantum channel and target unitary must have the same ""
    ""dimensions ({} != {})."".format(channel.dim, target.dim)
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/quantum_info/operators/measures.py,"QiskitError(
    ""Target channel is not a unitary channel. To compare ""
    ""two non-unitary channels use the ""
    ""`qiskit.quantum_info.process_fidelity` function instead.""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/quantum_info/operators/measures.py,"MissingOptionalLibraryError(
    ""CVXPY >= 1.0"",
    ""diamond_norm"",
    msg=f""Incompatible CVXPY version {version} found."",
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/quantum_info/operators/op_shape.py,"QiskitError(f""Input shape is not 1 or 2-dimensional (shape = {shape})"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/quantum_info/operators/op_shape.py,"QiskitError(
    ""Output dimensions do not match matrix shape ""
    ""({} != {})"".format(reduce(mul, self._dims_l), shape[0])
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/quantum_info/operators/op_shape.py,"QiskitError(""Number of left qubits does not match matrix shape"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/quantum_info/operators/op_shape.py,"QiskitError(
    ""Input dimensions do not match matrix shape ""
    ""({} != {})"".format(reduce(mul, self._dims_r), shape[1])
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/quantum_info/operators/op_shape.py,"QiskitError(""Number of right qubits does not match matrix shape"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/quantum_info/operators/op_shape.py,"QiskitError(""Input dimension should be empty for vector shape."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/quantum_info/operators/op_shape.py,"QiskitError(""`dims` kwarg cannot be used with `dims_l` or `dims_r`"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/quantum_info/operators/op_shape.py,"QiskitError(
    ""`num_qubits` kwarg cannot be used with `num_qubits_l` or `num_qubits_r`""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/quantum_info/operators/op_shape.py,"QiskitError(""qargs cannot be specified with qargs_l or qargs_r"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/quantum_info/operators/op_shape.py,"QiskitError(""Max qargs_l is larger than number of left qargs"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/quantum_info/operators/op_shape.py,"QiskitError(""Max qargs_r is larger than number of right qargs"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/quantum_info/operators/op_shape.py,"QiskitError(""qargs cannot be specified with qargs_l or qargs_r"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/quantum_info/operators/op_shape.py,"QiskitError(""Max qargs_l is larger than number of left qargs"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/quantum_info/operators/op_shape.py,"QiskitError(""Max qargs_r is larger than number of right qargs"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/quantum_info/operators/op_shape.py,"QiskitError(
    ""Left and right compose dimensions don't match ""
    ""({} != {})"".format(self.dims_r(), other.dims_l())
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/quantum_info/operators/op_shape.py,"QiskitError(
    ""Left and right compose dimensions don't match ""
    ""({} != {})"".format(self.dims_l(), other.dims_r())
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/quantum_info/operators/op_shape.py,"QiskitError(
    ""Number of qargs does not match ({} != {})"".format(
        len(qargs), other._num_qargs_l
    )
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/quantum_info/operators/op_shape.py,"QiskitError(
    ""Subsystem dimension do not match on specified qargs ""
    ""{} != {}"".format(self.dims_r(qargs), other.dims_l())
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/quantum_info/operators/op_shape.py,"QiskitError(
    ""Number of qargs does not match ({} != {})"".format(
        len(qargs), other._num_qargs_r
    )
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/quantum_info/operators/op_shape.py,"QiskitError(
    ""Subsystem dimension do not match on specified qargs ""
    ""{} != {}"".format(self.dims_l(qargs), other.dims_r())
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/quantum_info/operators/op_shape.py,"QiskitError(
    ""Cannot add using qargs if number of left and right qargs are not equal.""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/quantum_info/operators/op_shape.py,"QiskitError(
    ""Cannot add shapes width different left ""
    ""dimension on specified qargs {} != {}"".format(
        self.dims_l(qargs), other.dims_l()
    )
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/quantum_info/operators/op_shape.py,"QiskitError(
    ""Cannot add shapes width different total right ""
    ""dimension on specified qargs{} != {}"".format(
        self.dims_r(qargs), other.dims_r()
    )
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/quantum_info/operators/op_shape.py,"QiskitError(
    ""Cannot add shapes width different total left ""
    ""dimension {} != {}"".format(self._dim_l, other._dim_l)
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/quantum_info/operators/op_shape.py,"QiskitError(
    ""Cannot add shapes width different total right ""
    ""dimension {} != {}"".format(self._dim_r, other._dim_r)
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/quantum_info/operators/pauli.py,"AttributeError(f""module '{__name__}' has no attribute '{name}'"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/quantum_info/operators/custom_iterator.py,StopIteration
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/quantum_info/operators/random.py,"QiskitError(
    ""No dimensions specified: input_dims and output_dims cannot both be None.""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/quantum_info/operators/random.py,"QiskitError(f""Rank {rank} must be greater than 0."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/quantum_info/operators/scalar_op.py,"QiskitError(f""other ({other}) is not a number"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/quantum_info/operators/operator.py,"QiskitError(""Invalid input data format for Operator"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/quantum_info/operators/operator.py,"QiskitError(""Label contains invalid characters."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/quantum_info/operators/operator.py,"QiskitError(
    ""The size of the permutation pattern does not match dimensions of the operator.""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/quantum_info/operators/operator.py,"QiskitError(
    ""The size of the permutation pattern does not match dimensions of the operator.""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/quantum_info/operators/operator.py,"QiskitError(""Can only power with input_dims = output_dims."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/quantum_info/operators/operator.py,"QiskitError(""other is not a number"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/quantum_info/operators/operator.py,"QiskitError(""Contracted matrix must have an even number of indices."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/quantum_info/operators/operator.py,"QiskitError(""Input is neither an Instruction nor Clifford."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/quantum_info/operators/operator.py,"QiskitError(f""Cannot apply Operation: {obj.name}"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/quantum_info/operators/operator.py,"QiskitError(
    'Operation ""{}"" '
    ""definition is {} but expected QuantumCircuit."".format(
        obj.name, type(obj.definition)
    )
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/quantum_info/operators/operator.py,"QiskitError(
    ""Cannot apply operation with classical bits:""
    f"" {instruction.operation.name}""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/quantum_info/operators/base_operator.py,"QiskitError(
    ""qargs does not match the number of operator qargs ""
    f""({n_qargs} not in {self._op_shape.num_qargs})""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/quantum_info/operators/mixins/group.py,"QiskitError(""Can only power with positive integer powers."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/quantum_info/operators/mixins/tolerances.py,"QiskitError(f""Invalid {value_name} ({value}) must be non-negative."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/quantum_info/operators/mixins/tolerances.py,"QiskitError(f""Invalid {value_name} ({value}) must be less than {cls._MAX_TOL}."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/quantum_info/operators/symplectic/pauli_list.py,"QiskitError(""Input Pauli list is empty."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/quantum_info/operators/symplectic/pauli_list.py,"ValueError(
    f""The {i}th Pauli is defined over {pauli.num_qubits} qubits, ""
    f""but num_qubits == {num_qubits} was expected.""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/quantum_info/operators/symplectic/pauli_list.py,"IndexError(f""Invalid PauliList index {index}"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/quantum_info/operators/symplectic/pauli_list.py,"IndexError(f""Invalid PauliList index {index}"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/quantum_info/operators/symplectic/pauli_list.py,"QiskitError(
    ""Indices {} are not all less than the size""
    "" of the PauliList ({})"".format(ind, len(self))
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/quantum_info/operators/symplectic/pauli_list.py,"QiskitError(
    ""Indices {} are not all less than the number of""
    "" qubits in the PauliList ({})"".format(ind, self.num_qubits)
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/quantum_info/operators/symplectic/pauli_list.py,"QiskitError(""Insert index must be an integer."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/quantum_info/operators/symplectic/pauli_list.py,"QiskitError(
    ""Index {} is larger than the number of rows in the""
    "" PauliList ({})."".format(ind, size)
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/quantum_info/operators/symplectic/pauli_list.py,"QiskitError(
    ""Index {} is greater than number of qubits""
    "" in the PauliList ({})"".format(ind, self.num_qubits)
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/quantum_info/operators/symplectic/pauli_list.py,"QiskitError(
    ""Input PauliList must have a single row, or""
    "" the same number of rows as the Pauli Table""
    "" ({})."".format(size)
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/quantum_info/operators/symplectic/pauli_list.py,"QiskitError(
    ""Incompatible PauliLists. Other list must ""
    ""have either 1 or the same number of Paulis.""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/quantum_info/operators/symplectic/pauli_list.py,"QiskitError(
    ""Incompatible PauliLists. Other list must ""
    ""have either 1 or the same number of Paulis.""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/quantum_info/operators/symplectic/base_pauli.py,"QiskitError(f""other {type(self).__name__} must be on the same number of qubits."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/quantum_info/operators/symplectic/base_pauli.py,"QiskitError(
    f""Number of qubits of the other {type(self).__name__} does not match qargs.""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/quantum_info/operators/symplectic/base_pauli.py,"QiskitError(
    ""Incompatible BasePaulis. Second list must ""
    ""either have 1 or the same number of Paulis.""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/quantum_info/operators/symplectic/base_pauli.py,"QiskitError(
    ""Number of qubits of other Pauli does not match number of ""
    ""qargs ({} != {})."".format(other.num_qubits, len(qargs))
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/quantum_info/operators/symplectic/base_pauli.py,"QiskitError(
    ""Number of qubits of other Pauli does not match the current ""
    ""Pauli ({} != {})."".format(other.num_qubits, self.num_qubits)
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/quantum_info/operators/symplectic/base_pauli.py,"QiskitError(
    ""Incorrect number of qubits for Clifford circuit ({} != {})."".format(
        other.num_qubits, len(qargs)
    )
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/quantum_info/operators/symplectic/base_pauli.py,"QiskitError(
    ""Incorrect number of qubits for Clifford circuit ({} != {})."".format(
        other.num_qubits, self.num_qubits
    )
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/quantum_info/operators/symplectic/base_pauli.py,"QiskitError(""Pauli can only be multiplied by 1, -1j, -1, 1j."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/quantum_info/operators/symplectic/base_pauli.py,"QiskitError(""Invalid Pauli z vector shape."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/quantum_info/operators/symplectic/base_pauli.py,"QiskitError(""Invalid Pauli x vector shape."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/quantum_info/operators/symplectic/base_pauli.py,"QiskitError(""z and x vectors are different size."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/quantum_info/operators/symplectic/base_pauli.py,"QiskitError(f""Invalid Clifford gate name string {gate}"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/quantum_info/operators/symplectic/base_pauli.py,"QiskitError(f""Cannot update Pauli with non-Clifford gate {name}"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/quantum_info/operators/symplectic/base_pauli.py,"QiskitError(""Invalid qubits for 1-qubit gate."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/quantum_info/operators/symplectic/base_pauli.py,"QiskitError(""Invalid qubits for 2-qubit gate."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/quantum_info/operators/symplectic/base_pauli.py,"QiskitError(f""Cannot apply Instruction: {gate.name}"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/quantum_info/operators/symplectic/base_pauli.py,"QiskitError(
    ""{} instruction definition is {}; expected QuantumCircuit"".format(
        gate.name, type(gate.definition)
    )
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/quantum_info/operators/symplectic/base_pauli.py,"QiskitError(
    f""Cannot apply Instruction with classical bits: {instruction.operation.name}""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/quantum_info/operators/symplectic/sparse_pauli_op.py,"QiskitError(""ignore_pauli_list=True is only valid with PauliList data"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/quantum_info/operators/symplectic/sparse_pauli_op.py,"QiskitError(
    ""coeff vector is incorrect shape for number""
    "" of Paulis {} != {}"".format(self._coeffs.shape, self._pauli_list.size)
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/quantum_info/operators/symplectic/sparse_pauli_op.py,"QiskitError(""other is not a number"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/quantum_info/operators/symplectic/sparse_pauli_op.py,"QiskitError(""Input list is empty"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/quantum_info/operators/symplectic/sparse_pauli_op.py,"QiskitError(""Input list includes an object that is not SparsePauliOp"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/quantum_info/operators/symplectic/sparse_pauli_op.py,"QiskitError(""Input Operator is not an N-qubit operator."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/quantum_info/operators/symplectic/sparse_pauli_op.py,"QiskitError(""Input Pauli list is empty."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/quantum_info/operators/symplectic/sparse_pauli_op.py,"QiskitError(""Input Pauli list is empty."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/quantum_info/operators/symplectic/sparse_pauli_op.py,"QiskitError(""Input indices are duplicated."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/quantum_info/operators/symplectic/sparse_pauli_op.py,"QiskitError(
    f""The number of qubits ({num_qubits}) is smaller than a required index {index}.""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/quantum_info/operators/symplectic/sparse_pauli_op.py,"ValueError(
    f""Mismatching number of values ({len(parameters)}) and parameters ""
    f""({len(free_parameters)}). For partial binding please pass a dictionary of ""
    ""{parameter: value} pairs.""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/quantum_info/operators/symplectic/stabilizer_table.py,"QiskitError(""Phase vector is incorrect shape."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/quantum_info/operators/symplectic/stabilizer_table.py,"QiskitError(
    ""Indices {} are not all less than the size of the StabilizerTable ({})"".format(
        ind, self.size
    )
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/quantum_info/operators/symplectic/stabilizer_table.py,"QiskitError(""Insert index must be an integer."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/quantum_info/operators/symplectic/stabilizer_table.py,"QiskitError(""other StabilizerTable must be on the same number of qubits."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/quantum_info/operators/symplectic/stabilizer_table.py,"QiskitError(""Number of qubits in the other StabilizerTable does not match qargs."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/quantum_info/operators/symplectic/stabilizer_table.py,"QiskitError(""Can only multiply a Stabilizer value by +1 or -1 phase."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/quantum_info/operators/symplectic/stabilizer_table.py,"QiskitError(""Input Pauli list is empty."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/quantum_info/operators/symplectic/clifford_circuits.py,"QiskitError(
    f""Cannot apply Instruction with classical bits: {instruction.operation.name}""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/quantum_info/operators/symplectic/clifford_circuits.py,"QiskitError(f""Invalid Clifford gate name string {gate}"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/quantum_info/operators/symplectic/clifford_circuits.py,"QiskitError(""Conditional gate is not a valid Clifford operation."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/quantum_info/operators/symplectic/clifford_circuits.py,"QiskitError(f""Cannot update Clifford with non-Clifford gate {name}"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/quantum_info/operators/symplectic/clifford_circuits.py,"QiskitError(""Invalid qubits for 1-qubit gate."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/quantum_info/operators/symplectic/clifford_circuits.py,"QiskitError(""Invalid qubits for 2-qubit gate."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/quantum_info/operators/symplectic/clifford_circuits.py,"QiskitError(""U gate angles must be multiples of pi/2 to be a Clifford"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/quantum_info/operators/symplectic/clifford_circuits.py,"QiskitError(f""Cannot apply {gate.name} gate with unbounded parameters"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/quantum_info/operators/symplectic/clifford_circuits.py,"QiskitError(f""Cannot apply {gate.name} gate without to_matrix defined"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/quantum_info/operators/symplectic/clifford_circuits.py,"QiskitError(f""Cannot apply non-Clifford gate: {gate.name}"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/quantum_info/operators/symplectic/clifford_circuits.py,"QiskitError(f""Cannot apply {gate}"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/quantum_info/operators/symplectic/clifford_circuits.py,"ValueError(f""{param} is not to a multiple of pi/2"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/quantum_info/operators/symplectic/clifford_circuits.py,"ValueError(f""{param} is not bounded"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/quantum_info/operators/symplectic/pauli_table.py,"QiskitError(f""{data} is not an N-qubit identity"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/quantum_info/operators/symplectic/pauli_table.py,"QiskitError(""Invalid input data for PauliTable."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/quantum_info/operators/symplectic/pauli_table.py,"QiskitError(""Invalid shape for PauliTable."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/quantum_info/operators/symplectic/pauli_table.py,"QiskitError(
    ""Indices {} are not all less than the size""
    "" of the PauliTable ({})"".format(ind, self.size)
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/quantum_info/operators/symplectic/pauli_table.py,"QiskitError(
    ""Indices {} are not all less than the number of""
    "" qubits in the PauliTable ({})"".format(ind, self.num_qubits)
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/quantum_info/operators/symplectic/pauli_table.py,"QiskitError(""Insert index must be an integer."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/quantum_info/operators/symplectic/pauli_table.py,"QiskitError(
    ""Index {} is larger than the number of rows in the""
    "" PauliTable ({})."".format(ind, self.num_qubits)
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/quantum_info/operators/symplectic/pauli_table.py,"QiskitError(
    ""Index {} is greater than number of qubits""
    "" in the PauliTable ({})"".format(ind, self.num_qubits)
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/quantum_info/operators/symplectic/pauli_table.py,"QiskitError(
    ""Input PauliTable must have a single row, or""
    "" the same number of rows as the Pauli Table""
    "" ({})."".format(self.size)
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/quantum_info/operators/symplectic/pauli_table.py,"QiskitError(""other PauliTable must be on the same number of qubits."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/quantum_info/operators/symplectic/pauli_table.py,"QiskitError(""Number of qubits in the other PauliTable does not match qargs."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/quantum_info/operators/symplectic/pauli_table.py,"NotImplementedError(f""{type(self)} does not support conjugatge"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/quantum_info/operators/symplectic/pauli_table.py,"NotImplementedError(f""{type(self)} does not support transpose"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/quantum_info/operators/symplectic/pauli_table.py,"QiskitError(""Input is not a single Pauli."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/quantum_info/operators/symplectic/pauli_table.py,"QiskitError(""Input Pauli list is empty."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/quantum_info/operators/symplectic/pauli_table.py,"QiskitError(
    ""Pauli string contains invalid character:""
    "" {} not in ['I', 'X', 'Y', 'Z']."".format(char)
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/quantum_info/operators/symplectic/pauli.py,"QiskitError(
    ""Invalid input tuple for Pauli, input tuple must be `(z, x, phase)` or `(z, x)`""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/quantum_info/operators/symplectic/pauli.py,"QiskitError(""Invalid input data for Pauli."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/quantum_info/operators/symplectic/pauli.py,"QiskitError(""Input is not a single Pauli"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/quantum_info/operators/symplectic/pauli.py,"QiskitError(
    ""Qubit index is larger than the number of qubits ""
    ""({}>{})."".format(max(qubits), self.num_qubits - 1)
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/quantum_info/operators/symplectic/pauli.py,"QiskitError(""Cannot delete all qubits of Pauli"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/quantum_info/operators/symplectic/pauli.py,"QiskitError(
    ""Number of indices does not match number of qubits for ""
    ""the inserted Pauli ({}!={})"".format(len(qubits), value.num_qubits)
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/quantum_info/operators/symplectic/pauli.py,"QiskitError(
    ""Index is too larger for combined Pauli number of qubits ""
    ""({}>{})."".format(max(qubits), ret.num_qubits - 1)
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/quantum_info/operators/symplectic/pauli.py,"QiskitError(f'Pauli string label ""{label}"" is not valid.')"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/quantum_info/operators/symplectic/pauli.py,"QiskitError(f""{op} is not an N-qubit identity"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/quantum_info/operators/symplectic/pauli.py,"QiskitError(""Invalid Pauli instruction."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/quantum_info/operators/symplectic/pauli.py,"QiskitError(f""Cannot apply Instruction: {instr.name}"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/quantum_info/operators/symplectic/pauli.py,"QiskitError(
    f""Cannot apply instruction with classical bits: {inner.operation.name}""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/quantum_info/operators/symplectic/clifford.py,"QiskitError(""Can only initialize from N-qubit identity ScalarOp."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/quantum_info/operators/symplectic/clifford.py,"QiskitError("""")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/quantum_info/operators/symplectic/clifford.py,"QiskitError(
    ""Invalid Clifford. Input StabilizerTable is not a valid symplectic matrix.""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/quantum_info/operators/symplectic/clifford.py,"QiskitError(""Non-Clifford matrix is not convertible"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/quantum_info/operators/symplectic/clifford.py,"QiskitError(""Non-Clifford operator is not convertible"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/quantum_info/operators/symplectic/clifford.py,"QiskitError(""Input must be a QuantumCircuit or Instruction"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/quantum_info/operators/symplectic/clifford.py,"QiskitError(""Label contains invalid characters."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/quantum_info/operators/symplectic/clifford.py,"QiskitError(""mode must be B, S, or D."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/quantum_info/operators/symplectic/clifford.py,"QiskitError(
    f""Pauli string contains invalid character: {char} not in ['I', 'X', 'Y', 'Z'].""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/quantum_info/operators/channel/quantum_channel.py,"QiskitError(""Can only take power with input_dim = output_dim."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/quantum_info/operators/channel/quantum_channel.py,"QiskitError(""other is not a number"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/quantum_info/operators/channel/quantum_channel.py,"QiskitError(
    ""Cannot convert QuantumChannel to Instruction: channel is not an N-qubit channel.""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/quantum_info/operators/channel/quantum_channel.py,"QiskitError(""Cannot convert QuantumChannel to Instruction: channel is not CPTP."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/quantum_info/operators/channel/quantum_channel.py,"QiskitError(""Input state is not a vector or matrix."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/quantum_info/operators/channel/quantum_channel.py,"QiskitError(""Input state is not a vector or matrix."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/quantum_info/operators/channel/transformations.py,"QiskitError(f""Invalid QuantumChannel {output_rep}"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/quantum_info/operators/channel/transformations.py,"QiskitError(f""Invalid QuantumChannel {rep}"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/quantum_info/operators/channel/transformations.py,"QiskitError(f""Invalid QuantumChannel {rep}"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/quantum_info/operators/channel/transformations.py,"QiskitError(f""Invalid QuantumChannel {rep}"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/quantum_info/operators/channel/transformations.py,"QiskitError(""Channel cannot be converted to Operator representation"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/quantum_info/operators/channel/transformations.py,"QiskitError(""Channel cannot be converted to Operator representation"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/quantum_info/operators/channel/transformations.py,"QiskitError(""Invalid shape_a"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/quantum_info/operators/channel/transformations.py,"QiskitError(""Invalid shape_b"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/quantum_info/operators/channel/transformations.py,"QiskitError(
    f""Not an n-qubit channel: input_dim ({input_dim}) != output_dim ({output_dim})""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/quantum_info/operators/channel/transformations.py,"QiskitError(""Not an n-qubit channel: input_dim != 2 ** n"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/quantum_info/operators/channel/chi.py,"QiskitError(""Invalid Chi-matrix input."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/quantum_info/operators/channel/chi.py,"QiskitError(""Invalid shape for Chi-matrix input."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/quantum_info/operators/channel/chi.py,"QiskitError(""Input is not an n-qubit Chi matrix."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/quantum_info/operators/channel/superop.py,"QiskitError(""Invalid shape for SuperOp matrix."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/quantum_info/operators/channel/superop.py,"QiskitError(
    ""Operator input dimension is not equal to density matrix dimension.""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/quantum_info/operators/channel/superop.py,"QiskitError(
    ""Operator input dimensions are not equal to statevector subsystem dimensions.""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/quantum_info/operators/channel/superop.py,"QiskitError(""Input is not an instruction."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/quantum_info/operators/channel/superop.py,"QiskitError(f""Cannot apply Instruction: {obj.name}"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/quantum_info/operators/channel/superop.py,"QiskitError(
    ""{} instruction definition is {}; ""
    ""expected QuantumCircuit"".format(obj.name, type(obj.definition))
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/quantum_info/operators/channel/superop.py,"QiskitError(
    ""Cannot apply instruction with classical bits:""
    f"" {instruction.operation.name}""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/quantum_info/operators/channel/choi.py,"QiskitError(""Invalid Choi-matrix input."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/quantum_info/operators/channel/choi.py,"QiskitError(""Invalid shape for input Choi-matrix."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/quantum_info/operators/channel/stinespring.py,"QiskitError(""Invalid Stinespring input."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/quantum_info/operators/channel/stinespring.py,"QiskitError(""Invalid output_dim"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/quantum_info/operators/channel/stinespring.py,"QiskitError(""other is not a number"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/quantum_info/operators/channel/ptm.py,"QiskitError(""Invalid shape for PTM matrix."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/quantum_info/operators/channel/ptm.py,"QiskitError(""Input is not an n-qubit Pauli transfer matrix."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/quantum_info/operators/channel/kraus.py,"QiskitError(""Kraus operators are different dimensions."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/quantum_info/operators/channel/kraus.py,"QiskitError(""Kraus operators are different dimensions."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/quantum_info/operators/channel/kraus.py,"QiskitError(""Kraus operators are different dimensions."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/quantum_info/operators/channel/kraus.py,"QiskitError(""Invalid input for Kraus channel."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/quantum_info/operators/channel/kraus.py,"QiskitError(""other is not a number"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/quantum_info/operators/dihedral/dihedral.py,"QiskitError(""Can only initialize from N-qubit identity ScalarOp."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/quantum_info/operators/dihedral/dihedral.py,"QiskitError(""Invalid input type for CNOTDihedral class."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/quantum_info/operators/dihedral/dihedral.py,"QiskitError(""Invalid CNOTDihedral element."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/quantum_info/operators/dihedral/dihedral.py,"QiskitError(""Multiplication on different number of qubits."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/quantum_info/operators/dihedral/dihedral.py,"QiskitError(""Multiplication on different number of qubits."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/quantum_info/operators/dihedral/dihedral.py,"QiskitError(""CX qubits are out of bounds."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/quantum_info/operators/dihedral/dihedral.py,"QiskitError(""phase qubit out of bounds."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/quantum_info/operators/dihedral/dihedral.py,"QiskitError(""X qubit out of bounds."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/quantum_info/operators/dihedral/dihedral.py,"QiskitError(""Input must be a QuantumCircuit or Instruction"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/quantum_info/operators/dihedral/dihedral.py,"NotImplementedError(""compose method does not support qargs."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/quantum_info/operators/dihedral/dihedral.py,"QiskitError(""Incompatible dimension for composition"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/quantum_info/operators/dihedral/dihedral.py,"QiskitError(""Tensored element is not a CNOTDihderal object."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/quantum_info/operators/dihedral/dihedral_circuits.py,"QiskitError(""Invalid qubits for 2-qubit gate cx."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/quantum_info/operators/dihedral/dihedral_circuits.py,"QiskitError(""Invalid qubits for 2-qubit gate cz."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/quantum_info/operators/dihedral/dihedral_circuits.py,"QiskitError(""Invalid qubits for 2-qubit gate cx."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/quantum_info/operators/dihedral/dihedral_circuits.py,"QiskitError(""Invalid qubits for 1-qubit gate id."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/quantum_info/operators/dihedral/dihedral_circuits.py,"QiskitError(f""Cannot apply Instruction: {gate.name}"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/quantum_info/operators/dihedral/dihedral_circuits.py,"QiskitError(
    ""{} instruction definition is {}; expected QuantumCircuit"".format(
        gate.name, type(gate.definition)
    )
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/quantum_info/operators/dihedral/dihedral_circuits.py,"QiskitError(""Invalid qubits for 1-qubit gate x."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/quantum_info/operators/dihedral/dihedral_circuits.py,"QiskitError(""Invalid qubits for 1-qubit gate z."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/quantum_info/operators/dihedral/dihedral_circuits.py,"QiskitError(""Invalid qubits for 1-qubit gate y."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/quantum_info/operators/dihedral/dihedral_circuits.py,"QiskitError(""Invalid qubits or params for 1-qubit gate p."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/quantum_info/operators/dihedral/dihedral_circuits.py,"QiskitError(""Invalid qubits for 1-qubit gate t."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/quantum_info/operators/dihedral/dihedral_circuits.py,"QiskitError(""Invalid qubits for 1-qubit gate tdg."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/quantum_info/operators/dihedral/dihedral_circuits.py,"QiskitError(""Invalid qubits for 1-qubit gate s."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/quantum_info/operators/dihedral/dihedral_circuits.py,"QiskitError(""Invalid qubits for 1-qubit gate sdg."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/quantum_info/operators/dihedral/dihedral_circuits.py,"QiskitError(""Invalid qubits for 2-qubit gate cx."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/quantum_info/operators/dihedral/dihedral_circuits.py,"QiskitError(""Invalid qubits for 2-qubit gate cz."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/quantum_info/operators/dihedral/dihedral_circuits.py,"QiskitError(""Invalid qubits for 2-qubit gate cs."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/quantum_info/operators/dihedral/dihedral_circuits.py,"QiskitError(""Invalid qubits for 2-qubit gate csdg."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/quantum_info/operators/dihedral/dihedral_circuits.py,"QiskitError(""Invalid qubits for 2-qubit gate swap."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/quantum_info/operators/dihedral/dihedral_circuits.py,"QiskitError(""Invalid qubits for 3-qubit gate ccz."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/quantum_info/operators/dihedral/dihedral_circuits.py,"QiskitError(f""Not a CNOT-Dihedral gate: {instruction.operation.name}"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/quantum_info/operators/dihedral/polynomial.py,"QiskitError(""n_vars for SpecialPolynomial is too small."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/quantum_info/operators/dihedral/polynomial.py,"QiskitError(""There is no term with on more than 3 indices."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/quantum_info/operators/dihedral/polynomial.py,"QiskitError(""Indices are out of bounds."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/quantum_info/operators/dihedral/polynomial.py,"QiskitError(""Indices are non-increasing!"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/quantum_info/operators/dihedral/polynomial.py,"QiskitError(""Multiplication on different n_vars."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/quantum_info/operators/dihedral/polynomial.py,"QiskitError(""Element to add is not a SpecialPolynomial."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/quantum_info/operators/dihedral/polynomial.py,"QiskitError(""Addition on different n_vars."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/quantum_info/operators/dihedral/polynomial.py,"QiskitError(""Evaluate on wrong number of variables."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/quantum_info/operators/dihedral/polynomial.py,"QiskitError(""Evaluate on a wrong type."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/quantum_info/operators/dihedral/polynomial.py,"QiskitError(""Evaluate on incompatible polynomials."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/quantum_info/operators/dihedral/polynomial.py,"QiskitError(""Indices are out of bounds."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/quantum_info/operators/dihedral/polynomial.py,"QiskitError(""Indices are out of bounds."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/quantum_info/operators/dihedral/polynomial.py,"QiskitError(""Indices are non-increasing."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/quantum_info/operators/dihedral/polynomial.py,"QiskitError(""Indices are out of bounds."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/quantum_info/operators/dihedral/polynomial.py,"QiskitError(""Indices are non-increasing."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/quantum_info/states/measures.py,"QiskitError(""Input must be a bipartite quantum state."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/quantum_info/states/measures.py,"QiskitError(""Input is not a bipartite quantum state."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/quantum_info/states/measures.py,"QiskitError(""Input density matrix must be a 2-qubit state."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/quantum_info/states/measures.py,"QiskitError(""Input is not a bipartite quantum state."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/quantum_info/states/measures.py,"QiskitError(""Input density matrix must be a 2-qubit state."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/quantum_info/states/densitymatrix.py,"QiskitError(""Invalid input data format for DensityMatrix"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/quantum_info/states/densitymatrix.py,"QiskitError(""Invalid DensityMatrix input: not a square matrix."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/quantum_info/states/densitymatrix.py,"QiskitError(""other is not a number"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/quantum_info/states/densitymatrix.py,"QiskitError(f""Cannot apply Instruction: {other.name}"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/quantum_info/states/densitymatrix.py,"QiskitError(
    ""{} instruction definition is {}; expected QuantumCircuit"".format(
        other.name, type(other.definition)
    )
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/quantum_info/states/densitymatrix.py,"QiskitError(
    f""Cannot apply instruction with classical bits: {instruction.operation.name}""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/quantum_info/states/densitymatrix.py,"QiskitError(""Not a valid density matrix (non-hermitian)."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/quantum_info/states/densitymatrix.py,"QiskitError(""Density matrix is not a pure state"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/quantum_info/states/quantum_state.py,"NotImplementedError(f""{type(self)} does not support addition"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/quantum_info/states/quantum_state.py,"NotImplementedError(f""{type(self)} does not support scalar multiplication"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/quantum_info/states/random.py,"QiskitError(f""Error: unrecognized method {method}"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/quantum_info/states/stabilizerstate.py,"NotImplementedError(f""{type(self)} does not support addition"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/quantum_info/states/stabilizerstate.py,"NotImplementedError(f""{type(self)} does not support scalar multiplication"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/quantum_info/states/stabilizerstate.py,"QiskitError(""StabilizerState is not a valid quantum state."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/quantum_info/states/stabilizerstate.py,"QiskitError(""StabilizerState is not a valid quantum state."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/quantum_info/states/stabilizerstate.py,"QiskitError(""Operator for expectation value is not a Pauli operator."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/quantum_info/states/stabilizerstate.py,"QiskitError(""Invalid rowsum phase exponent in measurement calculation."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/quantum_info/states/stabilizerstate.py,"QiskitError(""Invalid rowsum in measurement calculation."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/quantum_info/states/statevector.py,"QiskitError(""Input Operator is not a column-vector."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/quantum_info/states/statevector.py,"QiskitError(""Invalid input data format for Statevector"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/quantum_info/states/statevector.py,"QiskitError(""Invalid input: not a vector or column-vector."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/quantum_info/states/statevector.py,"QiskitError(f""Key '{key}' is not a valid binary string."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/quantum_info/states/statevector.py,"QiskitError(f""Key {key} is greater than Statevector dimension {self.dim}."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/quantum_info/states/statevector.py,"QiskitError(f""Key {key} is not a valid positive value."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/quantum_info/states/statevector.py,"QiskitError(""Key must be int or a valid binary string."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/quantum_info/states/statevector.py,"QiskitError(
    f""Statevector dimensions do not match: {self.dims()} and {other.dims()}.""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/quantum_info/states/statevector.py,"QiskitError(""other is not a number"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/quantum_info/states/statevector.py,"QiskitError(""Cannot apply QuantumCircuit to non-qubit Statevector."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/quantum_info/states/statevector.py,"QiskitError(
    ""Operator input dimensions are not equal to statevector subsystem dimensions.""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/quantum_info/states/statevector.py,"QiskitError(""Label contains invalid characters."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/quantum_info/states/statevector.py,"QiskitError(f""Cannot apply Instruction: {obj.name}"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/quantum_info/states/statevector.py,"QiskitError(
    ""{} instruction definition is {}; expected QuantumCircuit"".format(
        obj.name, type(obj.definition)
    )
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/quantum_info/states/statevector.py,"QiskitError(
    f""Cannot apply instruction with classical bits: {instruction.operation.name}""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/quantum_info/states/utils.py,"QiskitError(""Input is not a quantum state"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/quantum_info/states/utils.py,"QiskitError(""Input quantum state is not a valid"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/quantum_info/synthesis/quaternion.py,"Exception(""Multiplication by other not supported."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/quantum_info/synthesis/quaternion.py,"ValueError(""Invalid axis input."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/quantum_info/synthesis/one_qubit_decompose.py,"QiskitError(""OneQubitEulerDecomposer: expected 2x2 input matrix"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/quantum_info/synthesis/one_qubit_decompose.py,"QiskitError(""OneQubitEulerDecomposer: input matrix is not unitary."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/quantum_info/synthesis/one_qubit_decompose.py,"QiskitError(f""OneQubitEulerDecomposer: unsupported basis {basis}"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/quantum_info/synthesis/local_invariance.py,"ValueError(""Unitary must correspond to a two-qubit gate."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/quantum_info/synthesis/two_qubit_decompose.py,"QiskitError(""decompose_two_qubit_product_gate: unable to decompose: detR < 0.1"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/quantum_info/synthesis/two_qubit_decompose.py,"QiskitError(""decompose_two_qubit_product_gate: unable to decompose: detL < 0.9"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/quantum_info/synthesis/two_qubit_decompose.py,"QiskitError(
    ""decompose_two_qubit_product_gate: decomposition failed: ""
    ""deviation too large: {}"".format(deviation)
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/quantum_info/synthesis/two_qubit_decompose.py,"QiskitError(
    ""TwoQubitWeylDecomposition: failed to diagonalize M2.""
    "" Please report this at https://github.com/Qiskit/qiskit-terra/issues/4159.""
    f"" Input: {U.tolist()}""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/quantum_info/synthesis/two_qubit_decompose.py,"QiskitError(
    f""{self.__class__.__name__}: ""
    f""calculated fidelity: {self.calculated_fidelity} ""
    f""is worse than requested fidelity: {self.requested_fidelity}.""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/quantum_info/synthesis/two_qubit_decompose.py,NotImplementedError
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/quantum_info/synthesis/two_qubit_decompose.py,"QiskitError(""Equivalent gate needs to take exactly 1 angle parameter."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/quantum_info/synthesis/two_qubit_decompose.py,"QiskitError(
    f""{rxx_equivalent_gate.__name__} is not equivalent to an RXXGate.""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/quantum_info/synthesis/two_qubit_decompose.py,"QiskitError(
    f""Cannot initialize {self.__class__.__name__}: with gate {rxx_equivalent_gate}. ""
    ""Inconsistent scaling parameters in checks.""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/quantum_info/synthesis/two_qubit_decompose.py,
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/quantum_info/synthesis/two_qubit_decompose.py,"QiskitError(
    f""Unexpected number of entangling gates ({best_nbasis}) in decomposition.""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/quantum_info/synthesis/two_qubit_decompose.py,"QiskitError(""pulse_optimizer currently only works with CNOT entangling gate"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/quantum_info/synthesis/two_qubit_decompose.py,"QiskitError(
    '""pulse_optimize"" currently only works with ZSX basis '
    f""({self._decomposer1q.basis} used)""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/quantum_info/synthesis/two_qubit_decompose.py,"QiskitError(""possible non-pulse-optimal decomposition encountered"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/quantum_info/synthesis/two_qubit_decompose.py,"QiskitError(""possible non-pulse-optimal decomposition encountered"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/quantum_info/synthesis/two_qubit_decompose.py,"QiskitError(""possible non-pulse-optimal decomposition encountered"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/quantum_info/synthesis/xx_decompose/circuits.py,"QiskitError(
    ""Error during RZX decomposition: Could not find a suitable Weyl ""
    f""reflection to match {source} to {target} along {strength}.""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/quantum_info/synthesis/xx_decompose/decomposer.py,"QiskitError(
    f""RXX embodiment provided for angle {angle} disagrees with RXXGate({angle})""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/quantum_info/synthesis/xx_decompose/decomposer.py,"QiskitError(
    ""Attempting to synthesize entangling gate with no controlled gates in basis set.""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/quantum_info/synthesis/xx_decompose/decomposer.py,"QiskitError(""Unable to synthesize a 2q unitary with the supplied basis set."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/quantum_info/synthesis/xx_decompose/decomposer.py,"TypeError(""Unknown basis_fidelity payload."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/quantum_info/synthesis/xx_decompose/polytopes.py,"TypeError(f""{type(polytope)} is not polytope-like."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/quantum_info/synthesis/xx_decompose/polytopes.py,"QiskitError(f""Polytope has no feasible solutions:\n{polytope}"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/quantum_info/synthesis/xx_decompose/polytopes.py,"TypeError(f""Can't handle type of point: {point} ({type(point)})"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/quantum_info/synthesis/xx_decompose/paths.py,"ValueError(""Couldn't find a coordinate to fix."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/quantum_info/synthesis/xx_decompose/paths.py,"ValueError(""Failed to match a constrained_polytope summand."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/quantum_info/analysis/z2_symmetries.py,"QiskitError(
    f""The number of Z2 symmetries, {len(symmetries)}, has to match the number \
                of single-qubit pauli operators, {len(sq_paulis)}.""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/quantum_info/analysis/z2_symmetries.py,"QiskitError(
    f""The number of single-qubit pauli operators, {len(sq_paulis)}, has to match the length \
                of the of single-qubit list, {len(sq_list)}.""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/quantum_info/analysis/z2_symmetries.py,"QiskitError(
    f""The length of the single-qubit list, {len(sq_list)}, must match the length of the \
                    tapering values, {len(tapering_values)} .""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/tools/parallel.py,"QiskitError(""Keyboard interrupt in parallel_map."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/tools/parallel.py,error
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/tools/monitor/overview.py,"MissingOptionalLibraryError(
    libname=""qiskit-ibmq-provider"",
    name=""get_unique_backends"",
    pip_install=""pip install qiskit-ibmq-provider"",
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/tools/monitor/overview.py,"QiskitError(""No backends available."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/tools/monitor/overview.py,"MissingOptionalLibraryError(
    libname=""qiskit-ibmq-provider"",
    name=""backend_monitor"",
    pip_install=""pip install qiskit-ibmq-provider"",
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/tools/monitor/overview.py,"QiskitError(""Input variable is not of type IBMQBackend."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/tools/jupyter/job_watcher.py,"Exception(""job_id not found"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/tools/jupyter/backend_monitor.py,"QiskitError(""Input variable is not of type IBMQBackend."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/tools/jupyter/library.py,"MissingOptionalLibraryError(
    libname=""pygments>2.4"",
    name=""qasm_widget"",
    pip_install=""pip install pygments"",
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/tools/jupyter/jupyter_magics.py,"Exception(""Cell must contain at least one variable of BaseJob type."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/tools/jupyter/jupyter_magics.py,"qiskit.QiskitError(""Invalid progress bar type."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/tools/events/pubsub.py,"QiskitError(""Callback is not a callable!"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/assembler/assemble_schedules.py,"QiskitError(""qubit_lo_freq must be supplied."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/assembler/assemble_schedules.py,"QiskitError(""meas_lo_freq must be supplied."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/assembler/assemble_schedules.py,"QiskitError(
    ""Invalid 'schedule_los' setting specified. If specified, it should be ""
    ""either have a single entry to apply the same LOs for each schedule or ""
    ""have length equal to the number of schedules.""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/assembler/assemble_schedules.py,"QiskitError(
    ""Qubits {} and {} are in the same measurement grouping: {}. ""
    ""They must either be acquired at the same time, or disjointly""
    "". Instead, they were acquired at times: {}-{} and ""
    ""{}-{}"".format(
        common_instr_qubits,
        common_next,
        meas_map,
        inst[0][0],
        inst_end_time,
        next_inst_time,
        next_inst_time + next_inst[0][1],
    )
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/assembler/assemble_circuits.py,"QiskitError(
    f""Unable to assemble circuit with unit '{circuit.unit}', which must be 'dt'.""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/assembler/assemble_circuits.py,"QiskitError(
    ""Invalid 'schedule_los' setting specified. If specified, it should be ""
    ""either have a single entry to apply the same LOs for each experiment or ""
    ""have length equal to the number of experiments.""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/primitives/primitive_job.py,"JobError(""Primitive job has already been submitted."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/primitives/primitive_job.py,"JobError(""Job not submitted yet!. You have to .submit() first!"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/primitives/sampler.py,"QiskitError(
    f""The number of values ({len(value)}) does not match ""
    f""the number of parameters ({len(self._parameters[i])}).""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/primitives/sampler.py,"QiskitError(
    ""Some classical bits are not used for measurements.""
    f"" the number of classical bits ({circuit.num_clbits}),""
    f"" the used classical bits ({set(q_c_mapping.values())}).""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/primitives/estimator.py,"QiskitError(
    f""The number of values ({len(value)}) does not match ""
    f""the number of parameters ({len(self._parameters[i])}).""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/primitives/estimator.py,"QiskitError(
    f""The number of qubits of a circuit ({circ.num_qubits}) does not match ""
    f""the number of qubits of a observable ({obs.num_qubits}).""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/primitives/utils.py,"TypeError(
    f""Observable must have numerical coefficient, not {type(observable.coeff)}.""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/primitives/base/base_primitive.py,"TypeError(""Invalid circuits, expected Sequence[QuantumCircuit]."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/primitives/base/base_primitive.py,"ValueError(""No circuits were provided."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/primitives/base/base_primitive.py,"ValueError(""No default `parameter_values`, optional input disallowed."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/primitives/base/base_primitive.py,"TypeError(""Invalid parameter values, expected Sequence[Sequence[float]]."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/primitives/base/base_primitive.py,"ValueError(
    f""The number of circuits ({len(circuits)}) does not match ""
    f""the number of parameter value sets ({len(parameter_values)}).""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/primitives/base/base_primitive.py,"ValueError(
    f""The number of values ({len(vector)}) does not match ""
    f""the number of parameters ({circuit.num_parameters}) for the {i}-th circuit.""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/primitives/base/base_result.py,"TypeError(
    f""Expected sequence or `numpy.ndarray`, provided {type(value)} instead.""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/primitives/base/base_result.py,"ValueError(""Inconsistent number of experiments across data fields."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/primitives/base/base_estimator.py,"NotImplementedError(""The subclass of BaseEstimator must implment `_run` method."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/primitives/base/base_estimator.py,"ValueError(""No observables were provided."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/primitives/base/base_estimator.py,"ValueError(
    f""The number of circuits ({len(circuits)}) does not match ""
    f""the number of observables ({len(observables)}).""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/primitives/base/base_estimator.py,"ValueError(
    f""The number of qubits of the {i}-th circuit ({circuit.num_qubits}) does ""
    f""not match the number of qubits of the {i}-th observable ""
    f""({observable.num_qubits}).""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/primitives/base/base_sampler.py,"NotImplementedError(""The subclass of BaseSampler must implment `_run` method."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/primitives/base/base_sampler.py,"ValueError(
    f""The {i}-th circuit does not have any classical bit. ""
    ""Sampler requires classical bits, plus measurements ""
    ""on the desired qubits.""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/result/sampled_expval.py,"QiskitError(""Invalid input distribution type"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/result/sampled_expval.py,"QiskitError(""Invalid operator type"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/result/sampled_expval.py,"QiskitError(
    f""One or more operators not same length ({bitstring_len}) as input bitstrings""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/result/sampled_expval.py,"QiskitError(f""Input operator {op} is not diagonal"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/result/counts.py,"exceptions.QiskitError(
    ""Counts objects with dit strings do not ""
    ""currently support dit string formatting parameters ""
    ""creg_sizes or memory_slots""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/result/counts.py,"TypeError(
    ""Invalid input key type %s, must be either an int ""
    ""key or string key with hexademical value or bit string""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/result/counts.py,"exceptions.QiskitError(""Can not return a most frequent count on an empty object"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/result/counts.py,"exceptions.QiskitError(
    ""Multiple values have the same maximum counts: %s"" % "","".join(max_values_counts)
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/result/counts.py,"exceptions.QiskitError(
    ""Counts objects with dit strings do not ""
    ""currently support conversion to hexadecimal""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/result/counts.py,"exceptions.QiskitError(
    ""Counts objects with dit strings do not ""
    ""currently support conversion to integer""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/result/models.py,"QiskitError(""%s not a valid meas_return value"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/result/models.py,"AttributeError(f""Attribute {name} is not defined"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/result/postprocess.py,"QiskitError(""Inner most nested list is not of length 2."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/result/postprocess.py,"QiskitError(""Level zero memory is not of correct shape."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/result/postprocess.py,"QiskitError(""Level one memory is not of correct shape."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/result/utils.py,"ValueError(""Either int_return or hex_return can be specified but not both"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/result/utils.py,"ValueError(""int_return option only works with memory list input"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/result/utils.py,"ValueError(""hex_return option only works with memory list input"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/result/utils.py,"ValueError(""Invalid input memory array"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/result/utils.py,"QiskitError(f""indices must be in range [0, {num_clbits - 1}]."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/result/utils.py,"QiskitError(""Values of counts must be an int or float"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/result/utils.py,"QiskitError(f""indices must be in range [0, {num_clbits - 1}]."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/result/result.py,"AttributeError(f""Attribute {name} is not defined"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/result/result.py,"QiskitError(f'No data for experiment ""{repr(experiment)}""')"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/result/result.py,"QiskitError(f""Measurement level {meas_level} is not supported"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/result/result.py,"QiskitError(
    'No memory for experiment ""{}"". '
    ""Please verify that you either ran a measurement level 2 job ""
    'with the memory flag set, eg., ""memory=True"", '
    ""or a measurement level 0/1 job."".format(repr(experiment))
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/result/result.py,"QiskitError(f'No counts for experiment ""{repr(key)}""')"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/result/result.py,"QiskitError(f'No statevector for experiment ""{repr(experiment)}""')"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/result/result.py,"QiskitError(f'No unitary for experiment ""{repr(experiment)}""')"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/result/result.py,"QiskitError(
    ""You have to select a circuit or schedule when there is more than one available""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/result/result.py,"QiskitError(f'Result for experiment ""{key}"" could not be found.')"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/result/result.py,"QiskitError('Data for experiment ""%s"" could not be found.' % key)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/result/result.py,"QiskitError(result_status, "", "", exp_status)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/result/distributions/probability.py,"ValueError(
    ""The input keys are not a valid string format, must either ""
    ""be a hex string prefixed by '0x' or a binary string ""
    ""optionally prefixed with 0b""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/result/distributions/probability.py,"TypeError(""Input data's keys are of invalid type, must be str or int"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/result/distributions/quasi.py,"ValueError(
    ""The input keys are not a valid string format, must either ""
    ""be a hex string prefixed by '0x' or a binary string ""
    ""optionally prefixed with 0b""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/result/distributions/quasi.py,"TypeError(""Input data's keys are of invalid type, must be str or int"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/result/mitigation/correlated_readout_mitigator.py,"QiskitError(""Assignment matrix columns must be valid probability distributions"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/result/mitigation/correlated_readout_mitigator.py,"QiskitError(
    ""The number of given qubits ({}) is different than the number of ""
    ""qubits inferred from the matrices ({})"".format(len(qubits), matrix_qubits_num)
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/result/mitigation/local_readout_mitigator.py,"QiskitError(
    ""Assignment matrix columns must be valid probability distributions""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/result/mitigation/local_readout_mitigator.py,"QiskitError(
    ""The number of given qubits ({}) is different than the number of qubits ""
    ""inferred from the matrices ({})"".format(len(qubits), len(assignment_matrices))
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/result/mitigation/local_readout_mitigator.py,"QiskitError(""The chosen backend does not contain the specified qubits."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/result/mitigation/utils.py,"QiskitError(f""Invalid diagonal string character {i}"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/result/mitigation/utils.py,"QiskitError(""Num qubits does not match vector length."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/result/mitigation/utils.py,"QiskitError(
    ""Num qubits ({}) does not match number of clbits ({})."".format(
        qubits_len, clbits_len
    )
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/converters/ast_to_dag.py,"QiskitError(
    ""expected qreg or creg name:"", ""line=%s"" % node.line, ""file=%s"" % node.file
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/converters/ast_to_dag.py,"QiskitError(
    ""expected local bit name:"", ""line=%s"" % node.line, ""file=%s"" % node.file
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/converters/ast_to_dag.py,"QiskitError(
    ""internal error undefined gate:"", ""line=%s"" % node.line, ""file=%s"" % node.file
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/converters/ast_to_dag.py,"QiskitError(
    ""internal error: qreg size mismatch"", ""line=%s"" % node.line, ""file=%s"" % node.file
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/converters/ast_to_dag.py,"QiskitError(
    ""internal error: reg size mismatch"", ""line=%s"" % node.line, ""file=%s"" % node.file
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/converters/ast_to_dag.py,"QiskitError(""internal error: _process_node on id"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/converters/ast_to_dag.py,"QiskitError(""internal error: _process_node on int"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/converters/ast_to_dag.py,"QiskitError(""internal error: _process_node on real"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/converters/ast_to_dag.py,"QiskitError(""internal error: _process_node on indexed_id"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/converters/ast_to_dag.py,"QiskitError(""internal error: _process_node on binop"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/converters/ast_to_dag.py,"QiskitError(""internal error: _process_node on prefix"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/converters/ast_to_dag.py,"QiskitError(""internal error: _process_node on external"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/converters/ast_to_dag.py,"QiskitError(
    ""internal error: undefined node type"",
    node.type,
    ""line=%s"" % node.line,
    ""file=%s"" % node.file,
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/converters/ast_to_dag.py,"QiskitError(""unknown operation for ast node name %s"" % name)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/converters/circuit_to_instruction.py,"QiskitError(
    (
        ""parameter_map should map all circuit parameters. ""
        ""Circuit parameters: {}, parameter_map: {}""
    ).format(circuit.parameters, parameter_dict)
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/converters/circuit_to_instruction.py,"QiskitError(
    ""Cannot convert condition in circuit with ""
    ""multiple classical registers to instruction""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/converters/circuit_to_gate.py,"QiskitError(""Circuit with classical bits cannot be converted to gate."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/converters/circuit_to_gate.py,"QiskitError(
    (
        ""One or more instructions cannot be converted to""
        ' a gate. ""{}"" is not a gate instruction'
    ).format(instruction.operation.name)
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/converters/circuit_to_gate.py,"QiskitError(
    (
        ""parameter_map should map all circuit parameters. ""
        ""Circuit parameters: {}, parameter_map: {}""
    ).format(circuit.parameters, parameter_dict)
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/providers/job.py,"QiskitError(""The job does not have any backend."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/providers/job.py,"JobTimeoutError(f""Timeout while waiting for job {self.job_id()}."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/providers/job.py,NotImplementedError
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/providers/backend.py,"AttributeError(""Options field %s is not valid for this backend"" % field)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/providers/backend.py,"AttributeError(""Options field %s is not valid for this backend"" % field)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/providers/backend.py,"AttributeError(""Options field %s is not valid for this backend"" % field)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/providers/backend.py,NotImplementedError
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/providers/backend.py,NotImplementedError
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/providers/backend.py,NotImplementedError
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/providers/backend.py,NotImplementedError
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/providers/backend.py,NotImplementedError
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/providers/backend.py,NotImplementedError
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/providers/backend.py,NotImplementedError
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/providers/backend.py,"AttributeError(""Options field %s is not valid for this backend"" % field)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/providers/provider.py,"QiskitBackendNotFoundError(""More than one backend matches the criteria"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/providers/provider.py,"QiskitBackendNotFoundError(""No backend matches the criteria"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/providers/providerutils.py,"LookupError(f""backend '{name}' not found."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/providers/options.py,"AttributeError(f""Option {name} is not defined"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/providers/options.py,"KeyError(""Field '%s' is not present in this options object"" % field)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/providers/options.py,"ValueError(
    ""A tuple validator must be of the form '(lower, upper)' ""
    ""where lower and upper are the lower and upper bounds ""
    ""inclusive of the numeric value""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/providers/options.py,"ValueError(""A list validator must have at least one entry"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/providers/options.py,"TypeError(
    f""{type(validator_value)} is not a valid validator type, it ""
    ""must be a tuple, list, or class/type""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/providers/options.py,"ValueError(
    f""Specified value for '{field}' is not a valid value, ""
    f""must be >={field_validator[0]} or <={field_validator[1]}""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/providers/options.py,"ValueError(
    f""Specified value for {field} is not a valid choice, ""
    f""must be one of {field_validator}""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/providers/options.py,"TypeError(
    f""Specified value for {field} is not of required type {field_validator}""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/providers/backend_compat.py,"QiskitError(
    f""Operation name {name} does not have a known mapping. Use ""
    ""custom_name_mapping to map this name to an Operation object""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/providers/backend_compat.py,"QiskitError(
    f""Operation name {name} does not have a known mapping. ""
    ""Use custom_name_mapping to map this name to an Operation object""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/providers/backend_compat.py,"QiskitError(
    f""Operation name '{op}' does not have a known mapping. Use ""
    ""custom_name_mapping to map this name to an Operation object""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/providers/fake_provider/fake_backend.py,"QiskitError(
    ""Invalid input object %s, must be either a ""
    ""QuantumCircuit, Schedule, or a list of either"" % circuits
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/providers/fake_provider/fake_backend.py,"QiskitError(""Pulse simulation is currently not supported for V2 fake backends."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/providers/fake_provider/fake_backend.py,"QiskitError(
    ""Invalid input object %s, must be either a ""
    ""QuantumCircuit, Schedule, or a list of either"" % circuits
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/providers/fake_provider/fake_backend.py,"QiskitError(""Unable to run pulse schedules without qiskit-aer installed"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/providers/fake_provider/fake_provider.py,QiskitBackendNotFoundError()
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/providers/fake_provider/fake_provider.py,QiskitBackendNotFoundError()
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/providers/fake_provider/fake_qasm_backend.py,"QiskitError(""No configuration file has been defined"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/providers/fake_provider/fake_qasm_backend.py,"QiskitError(""No properties file has been defined"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/providers/fake_provider/fake_backend_v2.py,NotImplementedError
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/providers/fake_provider/fake_backend_v2.py,NotImplementedError
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/providers/fake_provider/fake_pulse_backend.py,"QiskitError(""No properties file has been defined"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/providers/fake_provider/fake_mumbai_v2.py,NotImplementedError
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/providers/fake_provider/fake_job.py,"Exception(f""Unexpected state of {self.__class__.__name__}"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/providers/fake_provider/utils/json_decoder.py,"TypeError(f""{value} is not in a valid complex number format."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/providers/fake_provider/utils/configurable_backend.py,"QiskitError(f""{gate} is not supported by fake backend builder."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/providers/models/backendstatus.py,"QiskitError(""Pending jobs must be >=0"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/providers/models/pulsedefaults.py,"AttributeError(f""Attribute {name} is not defined"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/providers/models/pulsedefaults.py,"AttributeError(f""Attribute {name} is not defined"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/providers/models/jobstatus.py,"AttributeError(f""Attribute {name} is not defined"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/providers/models/backendproperties.py,"AttributeError(f""Attribute {name} is not defined"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/providers/models/backendproperties.py,"AttributeError(f""Attribute {name} is not defined"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/providers/models/backendproperties.py,"BackendPropertyError(f""Provide qubits to get {name} of {gate}"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/providers/models/backendproperties.py,"BackendPropertyError(f""Could not find the desired property for {gate}"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/providers/models/backendproperties.py,"BackendPropertyError(
    ""Couldn't find the propert{name} for qubit ""
    ""{qubit}."".format(name=""y '"" + name + ""'"" if name else ""ies"", qubit=qubit)
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/providers/models/backendproperties.py,"BackendPropertyError(f""Could not understand units: {unit}"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/providers/models/backendconfiguration.py,"QiskitError(""q must be >=0"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/providers/models/backendconfiguration.py,"AttributeError(f""Attribute {name} is not defined"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/providers/models/backendconfiguration.py,"BackendConfigurationError(f""Invalid index for {qubit}-qubit system."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/providers/models/backendconfiguration.py,"BackendConfigurationError(f""Invalid index for {qubit}-qubit system."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/providers/models/backendconfiguration.py,"BackendConfigurationError(f""Invalid index for {qubit}-qubit systems."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/providers/models/backendconfiguration.py,"BackendConfigurationError(
    f""Couldn't find the ControlChannel operating on qubits {qubits} on ""
    f""{self.n_qubits}-qubit system. The ControlChannel information is retrieved ""
    ""from the backend.""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/providers/models/backendconfiguration.py,"BackendConfigurationError(
    f""This backend - '{self.backend_name}' does not provide channel information.""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/providers/models/backendconfiguration.py,"BackendConfigurationError(f""Couldn't find the Channel - {channel}"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/providers/models/backendconfiguration.py,"BackendConfigurationError(
    f""This backend - '{self.backend_name}' does not provide channel information.""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/providers/models/backendconfiguration.py,KeyError
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/providers/models/backendconfiguration.py,"BackendConfigurationError(f""Couldn't find the qubit - {qubit}"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/providers/models/backendconfiguration.py,"BackendConfigurationError(
    f""This backend - '{self.backend_name}' does not provide channel information.""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/providers/models/backendconfiguration.py,"BackendConfigurationError(""Can only describe ControlChannels."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/providers/models/backendconfiguration.py,"BackendConfigurationError(f""Invalid channel name - '{channel}' found."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/providers/basicaer/statevector_simulator.py,"BasicAerError(
    f""Number of qubits {num_qubits} is greater than maximum ({max_qubits}) ""
    f'for ""{self.name()}"".'
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/providers/basicaer/basicaertools.py,"QiskitError(""Gate is not a valid basis gate for this simulator: %s"" % gate)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/providers/basicaer/basicaertools.py,"QiskitError(""Total number of free indexes limited to 26"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/providers/basicaer/basicaerprovider.py,"QiskitBackendNotFoundError(
    f""The '{name}' backend is not installed in your system.""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/providers/basicaer/basicaerprovider.py,"QiskitError(f""Backend {backend_cls} could not be instantiated: {err}"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/providers/basicaer/unitary_simulator.py,"BasicAerError(
    f""initial unitary is incorrect shape: {shape} != 2 ** {required_shape}""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/providers/basicaer/unitary_simulator.py,"BasicAerError(""initial unitary is not a square matrix"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/providers/basicaer/unitary_simulator.py,"BasicAerError(""initial unitary is not unitary"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/providers/basicaer/unitary_simulator.py,"BasicAerError(err_msg.format(backend, operation.name))"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/providers/basicaer/unitary_simulator.py,"BasicAerError(
    f""Number of qubits {n_qubits} is greater than maximum ({max_qubits}) ""
    f'for ""{self.name()}"".'
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/providers/basicaer/unitary_simulator.py,"BasicAerError(
    f'Unsupported ""{self.name()}"" instruction ""{operation.name}""'
    f' in circuit ""{name}"".'
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/providers/basicaer/qasm_simulator.py,"BasicAerError(
    f""initial statevector is incorrect length: {length} != {required_dim}""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/providers/basicaer/qasm_simulator.py,"BasicAerError(f""initial statevector is not normalized: norm {norm} != 1"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/providers/basicaer/qasm_simulator.py,"BasicAerError(""Invalid boolean function relation."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/providers/basicaer/qasm_simulator.py,"BasicAerError(err_msg.format(backend, operation.name))"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/providers/basicaer/qasm_simulator.py,"BasicAerError(
    f""Number of qubits {n_qubits} is greater than maximum ({max_qubits}) ""
    f'for ""{self.name()}"".'
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/synthesis/evolution/product_formula.py,"NotImplementedError(
    ""Cannot serialize a product formula with a custom atomic evolution.""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/synthesis/evolution/lie_trotter.py,"NotImplementedError(
    ""Cannot serialize a product formula with a custom atomic evolution.""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/synthesis/evolution/evolution_synthesis.py,NotImplementedError
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/synthesis/evolution/evolution_synthesis.py,"NotImplementedError(
    ""The settings property is not implemented for the base interface.""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/synthesis/linear/cnot_synth.py,"QiskitError(
    ""state should be of type list or numpy.ndarray, ""
    ""but was of the type {}"".format(type(state))
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/synthesis/linear/linear_depth_lnn.py,"QiskitError(""The input matrix is not invertible."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/synthesis/linear/linear_matrix_utils.py,"QiskitError(""Matrix to invert is a non-square matrix."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/synthesis/linear/linear_matrix_utils.py,"QiskitError(""The matrix is not invertible."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/synthesis/linear/linear_circuits_utils.py,"CircuitError(""The circuit contains non-CX gates."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/synthesis/linear/linear_circuits_utils.py,"QiskitError(""The matrix is not invertible."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/synthesis/linear/linear_circuits_utils.py,"CircuitError(""The circuit has two-qubits gates different than CX."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/synthesis/discrete_basis/commutator_decompose.py,"ValueError(f""Axis must be a 1d array of length 3, but has shape {axis.shape}."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/synthesis/discrete_basis/commutator_decompose.py,"ValueError(f""Axis must have a norm of 1, but has {np.linalg.norm(axis)}."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/synthesis/discrete_basis/commutator_decompose.py,"ValueError(""Input matrix is not orthogonal."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/synthesis/discrete_basis/gate_sequence.py,"ValueError(f""Matrix must have shape (3, 3) or (2, 2) but has {matrix.shape}."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/synthesis/discrete_basis/gate_sequence.py,"ValueError(f""Matrix must have shape (2, 2) but has {matrix.shape}."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/synthesis/discrete_basis/gate_sequence.py,"ValueError(f""Determinant of matrix must be 1, but is {np.linalg.det(matrix)}."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/synthesis/discrete_basis/gate_sequence.py,"ValueError(f""Matrix must have shape (3, 3) but has {matrix.shape}."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/synthesis/discrete_basis/gate_sequence.py,"ValueError(f""Determinant of matrix must be 1, but is {np.linalg.det(matrix)}."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/synthesis/discrete_basis/solovay_kitaev.py,"ValueError(""Shape of U must be (3, 3) but is"", sequence.shape)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/synthesis/discrete_basis/generate_basis_approximations.py,"ValueError(f""Invalid gate identifier: {gate}"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/synthesis/clifford/clifford_decompose_greedy.py,"QiskitError(""Symplectic Gaussian elimination fails."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/synthesis/clifford/clifford_decompose_greedy.py,"QiskitError(""Symplectic Gaussian elimination fails."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/synthesis/clifford/clifford_decompose_layers.py,"QiskitError(""The matrix Cmat after Gauss elimination has wrong rank."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/synthesis/clifford/clifford_decompose_layers.py,"QiskitError(""The matrix after Gauss elimination has wrong rank."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/synthesis/clifford/clifford_decompose_layers.py,"QiskitError(
    ""After Gauss elimination, the final num_qubits - rank rows""
    ""contain non-zero elements""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/synthesis/clifford/clifford_decompose_layers.py,"QiskitError(""The state is not a graph state."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/synthesis/clifford/clifford_decompose_layers.py,"QiskitError(""The stabilizer state is not a graph state."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/synthesis/clifford/clifford_decompose_layers.py,"QiskitError(
    ""The multiplication of stabx_inv and stab_z is not a symmetric matrix.""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/synthesis/clifford/clifford_decompose_layers.py,"QiskitError(""The given Clifford is not Hadamard-free."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/synthesis/clifford/clifford_decompose_layers.py,"QiskitError(
    ""The multiplication of the inverse of destabx and""
    ""destabz is not a symmetric matrix.""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/synthesis/clifford/clifford_decompose_layers.py,"QiskitError(""num_qubits is not the same for the original clifford and the target."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/synthesis/clifford/clifford_decompose_bm.py,"QiskitError(""Can only decompose up to 3-qubit Clifford circuits."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/synthesis/clifford/clifford_decompose_bm.py,"QiskitError(""Failed to reduce Clifford CX cost."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/synthesis/clifford/clifford_decompose_bm.py,"Exception(""No Clifford CX cost function for num_qubits > 3."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/synthesis/linear_phase/cnot_phase_synth.py,"QiskitError('Size of ""cnots"" and ""angles"" do not match.')"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/synthesis/stabilizer/stabilizer_decompose.py,"QiskitError(""The input is not a StabilizerState."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/synthesis/stabilizer/stabilizer_decompose.py,"QiskitError(""num_qubits is not the same for the original clifford and the target."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/synthesis/cnotdihedral/cnotdihedral_decompose_two_qubits.py,"QiskitError(
    ""Cannot decompose a CNOT-Dihedral element with more than 2 qubits. ""
    ""use synth_cnotdihedral_full function instead.""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/synthesis/cnotdihedral/cnotdihedral_decompose_two_qubits.py,"QiskitError(""1-qubit element in not CNOT-Dihedral ."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/synthesis/cnotdihedral/cnotdihedral_decompose_two_qubits.py,"QiskitError(""2-qubit element in not CNOT-Dihedral ."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/synthesis/cnotdihedral/cnotdihedral_decompose_general.py,"QiskitError(""Linear part is not invertible."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/synthesis/cnotdihedral/cnotdihedral_decompose_general.py,"QiskitError(""Cannot do Gauss elimination on linear part."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/synthesis/cnotdihedral/cnotdihedral_decompose_general.py,"QiskitError(""Could not recover phase polynomial."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/utils/validation.py,"ValueError(f""{name} must be one of '{values}', was '{value}'."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/utils/validation.py,"ValueError(f""{name} must have value >= {minimum}, was {value}"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/utils/validation.py,"ValueError(f""{name} must have value > {minimum}, was {value}"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/utils/validation.py,"ValueError(f""{name} must have value <= {maximum}, was {value}"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/utils/validation.py,"ValueError(f""{name} must have value < {maximum}, was {value}"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/utils/validation.py,"ValueError(f""{name} must have value >= {minimum} and <= {maximum}, was {value}"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/utils/validation.py,"ValueError(f""{name} must have value > {minimum} and < {maximum}, was {value}"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/utils/validation.py,"ValueError(f""{name} must have value > {minimum} and <= {maximum}, was {value}"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/utils/validation.py,"ValueError(f""{name} must have value >= {minimum} and < {maximum}, was {value}"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/utils/units.py,"ValueError(f""Could not understand unit: {unit}"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/utils/units.py,"ValueError(f""Input should be real number. Cannot convert {value}."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/utils/units.py,"ValueError(f""Value is out of range: {value}"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/utils/lazy_tester.py,"MissingOptionalLibraryError(
    libname=self._name, name=feature, pip_install=self._install, msg=self._msg
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/utils/lazy_tester.py,"ValueError(""no modules supplied"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/utils/lazy_tester.py,"ValueError(""no command supplied"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/utils/measurement_error_mitigation.py,"QiskitError(
    ""The used qubit index are different. ({}) vs ({}).\nCurrently, ""
    ""we only support all circuits using the same set of qubits ""
    ""regardless qubit order."".format(qubit_index, measured_qubits)
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/utils/measurement_error_mitigation.py,"QiskitError(
    ""The used qubit index are different. ({}) vs ({}).\nCurrently, ""
    ""we only support all circuits using the same set of qubits ""
    ""regardless qubit order."".format(qubit_index, measured_qubits)
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/utils/measurement_error_mitigation.py,"QiskitError(""The measured qubit list can not be []."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/utils/measurement_error_mitigation.py,"QiskitError(f""Unknown fitter {fitter_cls}"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/utils/measurement_error_mitigation.py,"QiskitError(f""Unknown fitter {fitter_cls}"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/utils/measurement_error_mitigation.py,"QiskitError(""The measured qubit list can not be []."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/utils/measurement_error_mitigation.py,"QiskitError(f""Unknown fitter {fitter_cls}"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/utils/name_unnamed_args.py,"ValueError(f""Name collapse on {default_name}"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/utils/name_unnamed_args.py,"ValueError(f""Name collapse on {default_name}"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/utils/algorithm_globals.py,"QiskitError(f""Invalid Number of Processes {num_processes}."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/utils/algorithm_globals.py,"QiskitError(
    ""Number of Processes {} cannot be greater than cpu count {}."".format(
        num_processes, QiskitAlgorithmGlobals.CPU_COUNT
    )
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/utils/quantum_instance.py,"QiskitError(f""Unknown fitter {meas_class}"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/utils/quantum_instance.py,"QiskitError(f""Unknown fitter {meas_instance}"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/utils/quantum_instance.py,"QiskitError(
    ""The noise model is not supported ""
    ""on the selected backend {} ({}) ""
    ""only certain backends, such as Aer qasm simulator ""
    ""support noise."".format(self.backend_name, _get_backend_provider(self._backend))
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/utils/quantum_instance.py,"QiskitError(
    ""backend_options can not used with the backends in IBMQ provider.""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/utils/quantum_instance.py,"QiskitError(
    ""Measurement error mitigation does not work with the statevector simulation.""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/utils/quantum_instance.py,"QiskitError(
    ""{} doesn't support subset_fitter."".format(
        meas_error_mitigation_fitter.__class__.__name__
    )
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/utils/quantum_instance.py,"QiskitError(
    ""backend_options can not be used with this backend ""
    ""{} ({})."".format(self.backend_name, _get_backend_provider(self._backend))
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/utils/quantum_instance.py,"QiskitError(
    ""'{}' is only applicable for qasm simulator but ""
    ""statevector simulator is used as the backend.""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/utils/quantum_instance.py,"QiskitError(
    ""The noise model is not supported on the selected backend {} ({}) ""
    ""only certain backends, such as Aer qasm support ""
    ""noise."".format(self.backend_name, _get_backend_provider(self._backend))
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/utils/quantum_instance.py,"ValueError(f""unknown setting for the key ({k})."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/utils/quantum_instance.py,"TypeError(""max_job_retries parameter must be an integer"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/utils/quantum_instance.py,"ValueError(
    ""max_job_retries must either be a positive integer or -1(for infinite trials)""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/utils/entangler_map.py,"ValueError(""map_type only supports 'full', 'linear' or 'sca' type."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/utils/entangler_map.py,"TypeError(""The type of entangler map is changed to list of list."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/utils/entangler_map.py,"TypeError(""Entangler map type 'list' expected"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/utils/entangler_map.py,"TypeError(f""Entangle index list expected but got {type(src_to_targ)}"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/utils/entangler_map.py,"ValueError(f""Qubit entangle source value {src} invalid for {num_qubits} qubits"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/utils/entangler_map.py,"ValueError(f""Qubit entangle target value {targ} invalid for {num_qubits} qubits"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/utils/entangler_map.py,"ValueError(f""Qubit {src} and {targ} cross-entangled."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/utils/run_circuits.py,"QiskitError(
    f""job id: {job_id}, status: 'FAIL_TO_GET_STATUS' Unknown error: ({ex})""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/utils/run_circuits.py,"QiskitError(f""Max retry limit reached. Failed to get status for job with id {job_id}"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/utils/run_circuits.py,"QiskitError(
    f""Max retry limit reached. Failed to get result for job id {job_id}""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/utils/run_circuits.py,"QiskitError(
    f""Max retry limit reached. Failed to get result for job with id {job_id} ""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/utils/run_circuits.py,"QiskitError(f""Circuit execution failed: {msg}"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/utils/run_circuits.py,"MissingOptionalLibraryError(
    libname=""qiskit-ibmq-provider"",
    name=""_safe_submit_circuits"",
    pip_install=""pip install qiskit-ibmq-provider"",
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/utils/run_circuits.py,"QiskitError(""Max retry limit reached. Failed to submit the qobj correctly"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/utils/deprecation.py,"ValueError(
    ""@deprecate_arg cannot be used with functions that take variable *args. Use ""
    ""warnings.warn() directly instead.""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/utils/deprecation.py,"ValueError(
    ""@deprecate_arg cannot be used with functions that take variable *args. Use ""
    ""warnings.warn() directly instead.""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/utils/deprecation.py,"TypeError(f""{func_name} received both {new_alias} and {old_arg_name} (deprecated)."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/utils/deprecation.py,"ValueError(
    ""Deprecation messages cannot contain new lines (`\\n`), but the deprecation for ""
    f'{func.__qualname__} had them. Usually this happens when using `""""""` multiline '
    f""strings; instead, use string concatenation.\n\n""
    ""This is a simplification to facilitate deprecation messages being added to the ""
    ""documentation. If you have a compelling reason to need ""
    ""new lines, feel free to improve this function or open a request at ""
    ""https://github.com/Qiskit/qiskit-terra/issues.""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/utils/deprecation.py,"ValueError(
    ""add_deprecation_to_docstring cannot currently handle when a Napoleon ""
    ""metadata line like 'Args' is the very first line of docstring, ""
    f'e.g. `""""""Args:`. So, it cannot process {func.__qualname__}. Instead, '
    f'move the metadata line to the second line, e.g.:\n\n""""""\nArgs:'
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/utils/mitigation/circuits.py,"QiskitError(""Must give one of a qubit_list or a qr"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/utils/mitigation/circuits.py,"QiskitError(""Must give one of mit_pattern or qr"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/utils/mitigation/circuits.py,"QiskitError(
    ""mit_pattern cannot contain multiple instances of the same qubit""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/utils/mitigation/fitters.py,"QiskitError(""Calibration matrix is not initialized"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/utils/mitigation/fitters.py,"QiskitError(""Qubit sublist must be specified"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/utils/mitigation/fitters.py,"QiskitError(""Qubit not in the original set of qubits"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/utils/mitigation/fitters.py,"ValueError(""mit_pattern does not match substate_labels_list"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/utils/mitigation/fitters.py,"QiskitError(""Cal matrix has not been set"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/utils/mitigation/fitters.py,"QiskitError(""Calibration matrices are not initialized."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/utils/mitigation/fitters.py,"QiskitError(""Qubit sublist must be specified."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/utils/mitigation/fitters.py,"QiskitError(
    f""Each element in the mit pattern should have length 1. Found {self._mit_pattern}.""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/utils/mitigation/fitters.py,"QiskitError(f""Qubit {qubit} is not in the mit pattern {self._mit_pattern}."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/utils/mitigation/_filters.py,"QiskitError(
    f""Unexpected state label '{data_label}'.""
    "" Verify the fitter's state labels correspond to the input data.""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/utils/mitigation/_filters.py,"QiskitError(
    ""Data list is not an integer multiple of the number of calibrated states""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/utils/mitigation/_filters.py,"QiskitError(""Unrecognized type for raw_data."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/utils/mitigation/_filters.py,"QiskitError(""Unrecognized method."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/utils/mitigation/_filters.py,"QiskitError(""Unrecognized type for raw_data."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/utils/mitigation/_filters.py,"QiskitError(""Unrecognized method."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/qasm/qasmlexer.py,"QasmError(""Invalid include: must be a quoted string."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/qasm/qasmlexer.py,"QasmError('Invalid syntax, missing "";"" at line', str(lineno))"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/qasm/qasmlexer.py,"QasmError(
    ""Include file %s cannot be found, line %s, file %s""
    % (incfile, str(next_token.lineno), self.filename)
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/qasm/qasmlexer.py,"QasmError(
    ""Unable to match any token rule, got -->%s<-- ""
    ""Check your OPENQASM source and any include statements."" % t.value[0]
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/qasm/qasm.py,"QasmError(""Missing input file and/or data"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/qasm/qasm.py,"QasmError(""File and data must not both be specified initializing qasm"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/qasm/qasmparser.py,"QasmError(
    ""Duplicate declaration for"",
    obj.type + "" '"" + obj.name + ""' at line"",
    str(obj.line) + "", file"",
    obj.file + "".\nPrevious occurrence at line"",
    str(prev.line) + "", file"",
    prev.file,
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/qasm/qasmparser.py,"QasmError(
    ""Cannot find symbol '"" + obj.name + ""' in argument list for gate, line"",
    str(obj.line),
    ""file"",
    obj.file,
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/qasm/qasmparser.py,"QasmError(""Bit"", obj.name, ""is not declared as a bit in the gate."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/qasm/qasmparser.py,"QasmError(
    ""Argument '""
    + children.name
    + ""' in expression cannot be ""
    + ""found, line"",
    str(children.line),
    ""file"",
    children.file,
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/qasm/qasmparser.py,"QasmError(
    ""Cannot find gate definition for '"" + obj.name + ""', line"",
    str(obj.line),
    ""file"",
    obj.file,
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/qasm/qasmparser.py,"QasmError(
    ""'""
    + obj.name
    + ""' is used as a gate ""
    + ""or opaque call but the symbol is neither;""
    + "" it is a '""
    + g_sym.type
    + ""' line"",
    str(obj.line),
    ""file"",
    obj.file,
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/qasm/qasmparser.py,"QasmError(
    ""Gate or opaque call to '"" + obj.name + ""' uses"",
    str(bitlist.size()),
    ""qubits but is declared for"",
    str(g_sym.n_bits()),
    ""qubits"",
    ""line"",
    str(obj.line),
    ""file"",
    obj.file,
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/qasm/qasmparser.py,"QasmError(
    ""Gate or opaque call to '"" + obj.name + ""' uses"",
    str(arglist.size()),
    ""qubits but is declared for"",
    str(g_sym.n_args()),
    ""qubits"",
    ""line"",
    str(obj.line),
    ""file"",
    obj.file,
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/qasm/qasmparser.py,"QasmError(
    ""Gate or opaque call to '""
    + obj.name
    + ""' has no arguments but is declared for"",
    str(g_sym.n_args()),
    ""qubits"",
    ""line"",
    str(obj.line),
    ""file"",
    obj.file,
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/qasm/qasmparser.py,"QasmError(
    ""Cannot find definition for"",
    object_type,
    ""'"" + obj.name + ""'"",
    ""at line"",
    str(obj.line),
    ""file"",
    obj.file,
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/qasm/qasmparser.py,"QasmError(
    ""Type for '""
    + g_sym.name
    + ""' should be '""
    + object_type
    + ""' but was found to be '""
    + g_sym.type
    + ""'"",
    ""line"",
    str(obj.line),
    ""file"",
    obj.file,
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/qasm/qasmparser.py,"QasmError(
    ""Register index for '"" + g_sym.name + ""' out of bounds. Index is"",
    str(ndx),
    ""bound is 0 <= index <"",
    str(bound),
    ""at line"",
    str(obj.line),
    ""file"",
    obj.file,
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/qasm/qasmparser.py,"QasmError(""internal error, id_tuple_list"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/qasm/qasmparser.py,"QasmError(""internal error, verify_distinct"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/qasm/qasmparser.py,"QasmError(""duplicate identifiers at line %d file %s"" % (line_number, filename))"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/qasm/qasmparser.py,"QasmError(
    ""Missing ';' at end of statement; "" + ""received"", str(program[2].value)
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/qasm/qasmparser.py,"QasmError(
    f""Invalid version: '{provided_version}'. This module supports OpenQASM 2.0 only.""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/qasm/qasmparser.py,"QasmError(""Expected an ID, received '"" + str(program[1].value) + ""'"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/qasm/qasmparser.py,"QasmError(""Expecting an integer index; received"", str(program[3].value))"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/qasm/qasmparser.py,"QasmError(""Missing ']' in indexed ID; received"", str(program[4].value))"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/qasm/qasmparser.py,"QasmError(
    ""Missing ';' in qreg or creg declaration.""
    "" Instead received '"" + program[2].value + ""'""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/qasm/qasmparser.py,"QasmError(
    ""QREG names cannot be reserved words. "" + ""Received '"" + program[2].name + ""'""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/qasm/qasmparser.py,"QasmError(""QREG size must be positive"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/qasm/qasmparser.py,"QasmError(
    ""Expecting indexed id (ID[int]) in QREG"" + "" declaration; received"", program[2].value
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/qasm/qasmparser.py,"QasmError(
    ""CREG names cannot be reserved words. "" + ""Received '"" + program[2].name + ""'""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/qasm/qasmparser.py,"QasmError(""CREG size must be positive"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/qasm/qasmparser.py,"QasmError(
    ""Expecting indexed id (ID[int]) in CREG"" + "" declaration; received"", program[2].value
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/qasm/qasmparser.py,"QasmError(
    ""GATE names cannot be reserved words. "" + ""Received '"" + program[2].name + ""'""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/qasm/qasmparser.py,"QasmError(
    ""GATE names cannot be reserved words. "" + ""Received '"" + program[2].name + ""'""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/qasm/qasmparser.py,"QasmError(
    ""GATE names cannot be reserved words. "" + ""Received '"" + program[2].name + ""'""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/qasm/qasmparser.py,"QasmError(
    ""Missing '}' in gate definition; received'"" + str(program[2].value) + ""'""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/qasm/qasmparser.py,"QasmError(""Invalid U inside gate definition. "" + ""Missing bit id or ';'"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/qasm/qasmparser.py,"QasmError(""Missing ')' in U invocation in gate definition."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/qasm/qasmparser.py,"QasmError(
    ""Invalid CX inside gate definition. ""
    + ""Expected an ID or ',', received '""
    + str(program[2].value)
    + ""'""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/qasm/qasmparser.py,"QasmError(
    ""Invalid CX inside gate definition. ""
    + ""Expected an ID or ';', received '""
    + str(program[4].value)
    + ""'""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/qasm/qasmparser.py,"QasmError(""Invalid gate invocation inside gate definition."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/qasm/qasmparser.py,"QasmError(""Invalid bit list inside gate definition or"" + "" missing ';'"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/qasm/qasmparser.py,"QasmError(""Unmatched () for gate invocation inside gate"" + "" invocation."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/qasm/qasmparser.py,"QasmError(""Invalid barrier inside gate definition."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/qasm/qasmparser.py,"QasmError(
    ""OPAQUE names cannot be reserved words. "" + ""Received '"" + program[2].name + ""'""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/qasm/qasmparser.py,"QasmError(
    ""OPAQUE names cannot be reserved words. "" + ""Received '"" + program[2].name + ""'""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/qasm/qasmparser.py,"QasmError(""Poorly formed OPAQUE statement."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/qasm/qasmparser.py,"QasmError(""Illegal measure statement."" + str(program[3].value))"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/qasm/qasmparser.py,"QasmError(""Ill-formed IF statement. Perhaps a"" + "" missing '('?"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/qasm/qasmparser.py,"QasmError(
    ""Ill-formed IF statement.  Expected '==', "" + ""received '"" + str(program[4].value)
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/qasm/qasmparser.py,"QasmError(
    ""Ill-formed IF statement.  Expected a number, ""
    + ""received '""
    + str(program[5].value)
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/qasm/qasmparser.py,"QasmError(""Ill-formed IF statement, unmatched '('"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/qasm/qasmparser.py,"QasmError(""Nested IF statements not allowed"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/qasm/qasmparser.py,"QasmError(""barrier not permitted in IF statement"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/qasm/qasmparser.py,"QasmError(""Illegal external function call: "", str(program[1].name))"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/qasm/qasmparser.py,"QasmError(""Error at end of file. "" + ""Perhaps there is a missing ';'"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/qasm/qasmparser.py,"QasmError(""Illegal debug value '"" + str(val) + ""' must be True or False."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/qasm/qasmparser.py,"QasmError(""Uncaught exception in parser; "" + ""see previous messages for details."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/qasm/pygments/lexer.py,"MissingOptionalLibraryError(
    ""pygments>2.4"", ""qiskit.qasm.pygments"", ""pip install pygments""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/qasm/node/id.py,"NodeException(
    ""Expected local parameter name: "",
    ""name=%s, "" % self.name,
    ""line=%s, "" % self.line,
    ""file=%s"" % self.file,
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/qasm/node/id.py,"NodeException(
    ""Expected local parameter name: "",
    f""name={self.name}, line={self.line}, file={self.file}"",
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/qasm/node/id.py,"NodeException(
    ""Expected local parameter name: "",
    f""name={self.name}, line={self.line}, file={self.file}"",
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/qasm/node/external.py,"MissingOptionalLibraryError(
    ""pylatexenc"", ""latex-from-qasm exporter"", ""pip install pylatexenc""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/qasm/node/external.py,"NodeException(""internal error: undefined external"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/qasm/node/external.py,"NodeException(""internal error: undefined external"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/qasm/node/real.py,"MissingOptionalLibraryError(
    ""pylatexenc"", ""latex-from-qasm exporter"", ""pip install pylatexenc""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/qasm/node/binaryoperator.py,"NodeException(f""internal error: undefined operator '{self.value}'"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/qasm/node/unaryoperator.py,"NodeException(f""internal error: undefined prefix '{self.value}'"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/qasm/node/prefix.py,"MissingOptionalLibraryError(
    ""pylatexenc"", ""latex-from-qasm exporter"", ""pip install pylatexenc""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/qasm/node/binaryop.py,"MissingOptionalLibraryError(
    ""pylatexenc"", ""latex-from-qasm exporter"", ""pip install pylatexenc""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/algorithms/observables_evaluator.py,"AlgorithmError(""The primitive job failed!"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/algorithms/aux_ops_evaluator.py,"ValueError(
    ""A parametrized representation of a quantum_state was provided. It is not ""
    ""allowed - it cannot have free parameters.""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/algorithms/algorithm_result.py,"TypeError(""Argument result expected."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/algorithms/state_fidelities/compute_uncompute.py,"ValueError(
    f""The sampler should be an instance of BaseSampler, "" f""but got {type(sampler)}""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/algorithms/state_fidelities/compute_uncompute.py,"ValueError(
    ""At least one pair of circuits must be defined to calculate the state overlap.""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/algorithms/state_fidelities/compute_uncompute.py,"AlgorithmError(""Sampler job failed!"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/algorithms/state_fidelities/base_state_fidelity.py,"ValueError(
    f""`values` cannot be `None` because circuit <{circuit.name}> has ""
    f""{circuit.num_parameters} free parameters.""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/algorithms/state_fidelities/base_state_fidelity.py,"TypeError(
    f""Expected a sequence of numerical parameter values, ""
    f""but got input type {type(values)} instead.""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/algorithms/state_fidelities/base_state_fidelity.py,"ValueError(
    f""The number of qubits for the first circuit ({circuit_1.num_qubits}) ""
    f""and second circuit ({circuit_2.num_qubits}) are not the same.""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/algorithms/state_fidelities/base_state_fidelity.py,NotImplementedError
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/algorithms/state_fidelities/base_state_fidelity.py,"ValueError(
    f""The length of the first circuit list({len(circuits_1)}) ""
    f""and second circuit list ({len(circuits_2)}) is not the same.""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/algorithms/state_fidelities/base_state_fidelity.py,NotImplementedError
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/algorithms/amplitude_estimators/amplitude_estimator.py,NotImplementedError
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/algorithms/amplitude_estimators/mlae.py,"ValueError(""The evaluation schedule cannot be < 0."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/algorithms/amplitude_estimators/mlae.py,"ValueError(""The elements of the evaluation schedule cannot be < 0."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/algorithms/amplitude_estimators/mlae.py,"NotImplementedError(f""CI `{kind}` is not implemented."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/algorithms/amplitude_estimators/mlae.py,"ValueError(""A quantum instance or sampler must be provided."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/algorithms/amplitude_estimators/mlae.py,"AlgorithmError(
    ""The state_preparation property of the estimation problem must be set.""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/algorithms/amplitude_estimators/mlae.py,"AlgorithmError(""The job was not completed successfully. "")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/algorithms/amplitude_estimators/mlae.py,"AssertionError(""Call run() first!"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/algorithms/amplitude_estimators/ae.py,"ValueError(""The number of evaluation qubits must at least be 1."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/algorithms/amplitude_estimators/ae.py,"ValueError(
    ""The state_preparation property of the estimation problem must be set.""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/algorithms/amplitude_estimators/ae.py,"ValueError(""A quantum instance or sampler must be provided."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/algorithms/amplitude_estimators/ae.py,"ValueError(""The objective_qubits property of the estimation problem must be set."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/algorithms/amplitude_estimators/ae.py,"AlgorithmError(""The job was not completed successfully. "")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/algorithms/amplitude_estimators/ae.py,"NotImplementedError(f""CI `{kind}` is not implemented."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/algorithms/amplitude_estimators/iae.py,"ValueError(f""The target epsilon must be in (0, 0.5], but is {epsilon_target}."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/algorithms/amplitude_estimators/iae.py,"ValueError(f""The confidence level alpha must be in (0, 1), but is {alpha}"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/algorithms/amplitude_estimators/iae.py,"ValueError(
    f""The confidence interval method must be chernoff or beta, but is {confint_method}.""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/algorithms/amplitude_estimators/iae.py,"AlgorithmError(""min_ratio must be larger than 1 to ensure convergence"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/algorithms/amplitude_estimators/iae.py,"ValueError(""A quantum instance or sampler must be provided."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/algorithms/amplitude_estimators/iae.py,"AlgorithmError(""The job was not completed successfully. "")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/algorithms/amplitude_estimators/iae.py,"AlgorithmError(
    ""The job was not completed successfully. ""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/algorithms/amplitude_estimators/fae.py,"ValueError(""A quantum instance or sampler must be provided."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/algorithms/amplitude_estimators/fae.py,"AlgorithmError(""The job was not completed successfully. "")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/algorithms/amplitude_estimators/fae.py,"ValueError(""A quantum instance or sampler must be provided."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/algorithms/utils/validate_bounds.py,"ValueError(
    f""The number of bounds ({len(bounds)}) does not match the number of ""
    f""parameters in the circuit ({circuit.num_parameters}).""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/algorithms/utils/validate_initial_point.py,"ValueError(
    f""The dimension of the initial point ({len(point)}) does not match the ""
    f""number of parameters in the circuit ({expected_size}).""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/algorithms/gradients/param_shift_sampler_gradient.py,"AlgorithmError(""Estimator job failed."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/algorithms/gradients/lin_comb_sampler_gradient.py,"AlgorithmError(""Sampler job failed."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/algorithms/gradients/base_estimator_gradient.py,NotImplementedError()
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/algorithms/gradients/base_estimator_gradient.py,"ValueError(
    f""The number of circuits ({len(circuits)}) does not match ""
    f""the number of parameter value sets ({len(parameter_values)}).""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/algorithms/gradients/base_estimator_gradient.py,"ValueError(f""The {i}-th circuit is not parameterised."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/algorithms/gradients/base_estimator_gradient.py,"ValueError(
    f""The number of values ({len(parameter_value)}) does not match ""
    f""the number of parameters ({circuit.num_parameters}) for the {i}-th circuit.""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/algorithms/gradients/base_estimator_gradient.py,"ValueError(
    f""The number of circuits ({len(circuits)}) does not match ""
    f""the number of observables ({len(observables)}).""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/algorithms/gradients/base_estimator_gradient.py,"ValueError(
    f""The number of qubits of the {i}-th circuit ({circuit.num_qubits}) does ""
    f""not match the number of qubits of the {i}-th observable ""
    f""({observable.num_qubits}).""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/algorithms/gradients/base_estimator_gradient.py,"ValueError(
    f""The number of circuits ({len(circuits)}) does not match ""
    f""the number of the list of specified parameters ({len(parameters)}).""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/algorithms/gradients/base_estimator_gradient.py,"ValueError(
    f""The {i}-th parameters contains parameters not present in the ""
    f""{i}-th circuit.""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/algorithms/gradients/base_sampler_gradient.py,NotImplementedError()
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/algorithms/gradients/base_sampler_gradient.py,"ValueError(
    f""The number of circuits ({len(circuits)}) does not match ""
    f""the number of parameter value sets ({len(parameter_values)}).""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/algorithms/gradients/base_sampler_gradient.py,"ValueError(f""The {i}-th circuit is not parameterised."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/algorithms/gradients/base_sampler_gradient.py,"ValueError(
    f""The number of values ({len(parameter_value)}) does not match ""
    f""the number of parameters ({circuit.num_parameters}) for the {i}-th circuit.""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/algorithms/gradients/base_sampler_gradient.py,"ValueError(
    f""The number of circuits ({len(circuits)}) does not match ""
    f""the number of the specified parameter sets ({len(parameters)}).""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/algorithms/gradients/base_sampler_gradient.py,"ValueError(
    f""The {i}-th parameter set contains parameters not present in the ""
    f""{i}-th circuit.""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/algorithms/gradients/finite_diff_sampler_gradient.py,"ValueError(f""epsilon ({epsilon}) should be positive."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/algorithms/gradients/finite_diff_sampler_gradient.py,"TypeError(
    f""The argument method should be central, forward, or backward: {method} is given.""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/algorithms/gradients/finite_diff_sampler_gradient.py,"AlgorithmError(""Sampler job failed."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/algorithms/gradients/lin_comb_qgt.py,"AlgorithmError(""Estimator job or gradient job failed."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/algorithms/gradients/param_shift_estimator_gradient.py,"AlgorithmError(""Estimator job failed."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/algorithms/gradients/lin_comb_estimator_gradient.py,"AlgorithmError(""Estimator job failed."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/algorithms/gradients/qfi.py,"AlgorithmError(""Estimator job or gradient job failed."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/algorithms/gradients/finite_diff_estimator_gradient.py,"ValueError(f""epsilon ({epsilon}) should be positive."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/algorithms/gradients/finite_diff_estimator_gradient.py,"TypeError(
    f""The argument method should be central, forward, or backward: {method} is given.""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/algorithms/gradients/finite_diff_estimator_gradient.py,"AlgorithmError(""Estimator job failed."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/algorithms/gradients/base_qgt.py,NotImplementedError()
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/algorithms/gradients/base_qgt.py,"ValueError(
    f""The number of circuits ({len(circuits)}) does not match ""
    f""the number of parameter values ({len(parameter_values)}).""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/algorithms/gradients/base_qgt.py,"ValueError(
    f""The number of circuits ({len(circuits)}) does not match ""
    f""the number of the specified parameter sets ({len(parameters)}).""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/algorithms/gradients/base_qgt.py,"ValueError(f""The {i}-th circuit is not parameterised."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/algorithms/gradients/base_qgt.py,"ValueError(
    f""The number of values ({len(parameter_value)}) does not match ""
    f""the number of parameters ({circuit.num_parameters}) for the {i}-th circuit.""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/algorithms/gradients/base_qgt.py,"ValueError(
    f""The number of circuits ({len(circuits)}) does not match ""
    f""the number of the list of specified parameters ({len(parameters)}).""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/algorithms/gradients/base_qgt.py,"ValueError(
    f""The {i}-th parameters contains parameters not present in the ""
    f""{i}-th circuit.""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/algorithms/gradients/spsa_estimator_gradient.py,"ValueError(f""epsilon ({epsilon}) should be positive."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/algorithms/gradients/spsa_estimator_gradient.py,"AlgorithmError(""Estimator job failed."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/algorithms/gradients/spsa_sampler_gradient.py,"ValueError(f""epsilon ({epsilon}) should be positive."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/algorithms/gradients/spsa_sampler_gradient.py,"AlgorithmError(""Sampler job failed."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/algorithms/gradients/utils.py,"TypeError(f""Unrecognized parameterized gate, {gate}"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/algorithms/gradients/utils.py,"ValueError(f""Derivative type {derivative_type} is not supported."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/algorithms/gradients/reverse_gradient/derive_circuit.py,"NotImplementedError(""Cannot implement gradient for"", gate)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/algorithms/gradients/reverse_gradient/derive_circuit.py,"ValueError(f""parameter must be of type Parameter, not {type(parameter)}."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/algorithms/gradients/reverse_gradient/derive_circuit.py,"ValueError(f""The parameter {parameter} is not in this circuit."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/algorithms/gradients/reverse_gradient/derive_circuit.py,"NotImplementedError(""No product rule support yet, circuit parameters must be unique."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/algorithms/gradients/reverse_gradient/reverse_qgt.py,"ValueError(""Expression has more than one parameter."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/algorithms/eigensolvers/numpy_eigensolver.py,"AlgorithmError(f""Unsupported operator type `{type(operator)}`."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/algorithms/eigensolvers/numpy_eigensolver.py,"AlgorithmError(f""Unsupported operator type {type(operator)}."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/algorithms/eigensolvers/numpy_eigensolver.py,"AlgorithmError(""The number of qubits of the operator must be greater than zero."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/algorithms/eigensolvers/vqd.py,"AlgorithmError(
    ""The number of qubits of the ansatz does not match the ""
    ""operator, and the ansatz does not allow setting the ""
    ""number of qubits using `num_qubits`.""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/algorithms/eigensolvers/vqd.py,"NotImplementedError(
    r""Beta autoevaluation is not supported for operators""
    f""of type {type(operator)}.""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/algorithms/eigensolvers/vqd.py,"AlgorithmError(""The ansatz must be parameterized, but has no free parameters."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/algorithms/eigensolvers/vqd.py,"RuntimeError(
    f""Passed previous states of the wrong size.""
    f""Passed array has length {str(len(prev_states))}""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/algorithms/eigensolvers/vqd.py,"AlgorithmError(""The primitive job to evaluate the energy failed!"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/algorithms/phase_estimators/phase_estimation.py,"AlgorithmError(
    ""Neither a sampler nor a quantum instance was provided. Please provide one of them.""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/algorithms/phase_estimators/phase_estimation.py,"AlgorithmError(""The primitive job failed!"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/algorithms/phase_estimators/hamiltonian_phase_estimation_result.py,"ValueError(""`as_float` must be `True` if `scaled` is `True`."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/algorithms/phase_estimators/hamiltonian_phase_estimation.py,"TypeError(f""Expecting type EvolutionSynthesis, got {type(evolution)}"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/algorithms/phase_estimators/hamiltonian_phase_estimation.py,"TypeError(
    f""Expecting Hamiltonian type Pauli, SparsePauliOp or PauliSumOp, ""
    f""got {type(hamiltonian)}.""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/algorithms/phase_estimators/hamiltonian_phase_estimation.py,"TypeError(f""Expecting type EvolutionBase, got {type(evolution)}"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/algorithms/phase_estimators/hamiltonian_phase_estimation.py,"ValueError(""bound must be specified if Hermitian operator is MatrixOp"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/algorithms/phase_estimators/hamiltonian_phase_estimation.py,"TypeError(f""Hermitian operator of type {type(hamiltonian)} not supported."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/algorithms/phase_estimators/phase_estimator.py,NotImplementedError
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/algorithms/phase_estimators/phase_estimator.py,NotImplementedError
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/algorithms/phase_estimators/ipe.py,"AlgorithmError(
    ""Neither a sampler nor a quantum instance was provided. Please provide one of them.""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/algorithms/phase_estimators/ipe.py,"ValueError(""`num_iterations` must be greater than zero."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/algorithms/phase_estimators/ipe.py,"AlgorithmError(""The primitive job failed!"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/algorithms/phase_estimators/phase_estimation_scale.py,"ValueError(
    f""For the operator of type {type(pauli_sum)} the bound needs to be provided in the ""
    f""algorithm.""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/algorithms/phase_estimators/phase_estimation_scale.py,"ValueError(
    ""`pauli_sum` must be a sum of Pauli operators. Got primitives {}."".format(
        pauli_sum.primitive_strings()
    )
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/algorithms/time_evolvers/time_evolution_problem.py,"ValueError(""A global parametrized coefficient for PauliSumOp is not allowed."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/algorithms/time_evolvers/imaginary_time_evolver.py,NotImplementedError()
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/algorithms/time_evolvers/real_time_evolver.py,NotImplementedError()
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/algorithms/time_evolvers/trotterization/trotter_qrte.py,"ValueError(
    f""Number of time steps must be positive integer, {num_timesteps} provided""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/algorithms/time_evolvers/trotterization/trotter_qrte.py,"ValueError(
    ""The time evolution problem contained ``aux_operators`` but no estimator was ""
    ""provided. The algorithm continues without calculating these quantities. ""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/algorithms/time_evolvers/trotterization/trotter_qrte.py,"ValueError(
    f""TrotterQRTE only accepts Pauli | PauliSumOp | SparsePauliOp, {type(hamiltonian)} ""
    ""provided.""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/algorithms/time_evolvers/trotterization/trotter_qrte.py,"ValueError(
    f""Hamiltonian time parameters ({free_parameters}) do not match ""
    f""evolution_problem.t_param ({t_param}).""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/algorithms/time_evolvers/trotterization/trotter_qrte.py,"ValueError(""``initial_state`` must be provided in the ``TimeEvolutionProblem``."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/algorithms/time_evolvers/pvqd/utils.py,"AlgorithmError(""The primitive job failed!"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/algorithms/time_evolvers/pvqd/pvqd.py,"AlgorithmError(""The primitive job failed!"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/algorithms/time_evolvers/pvqd/pvqd.py,"NotImplementedError(
    ""Setting an initial state for the evolution is not yet supported for PVQD.""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/algorithms/time_evolvers/pvqd/pvqd.py,"ValueError(
    ""The evolution problem contained aux_operators but no estimator was provided. ""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/algorithms/time_evolvers/pvqd/pvqd.py,"ValueError(f""The {attr} cannot be None."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/algorithms/time_evolvers/pvqd/pvqd.py,"ValueError(
    f""The number of timesteps must be positive but is {self.num_timesteps}.""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/algorithms/time_evolvers/pvqd/pvqd.py,"QiskitError(
    ""The ansatz cannot have 0 parameters, otherwise it cannot be trained.""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/algorithms/time_evolvers/pvqd/pvqd.py,"QiskitError(
    f""Mismatching number of parameters in the ansatz ({self.ansatz.num_parameters}) ""
    f""and the initial parameters ({len(self.initial_parameters)}).""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/algorithms/time_evolvers/variational/var_qte.py,"ValueError(
    ""An initial_state was provided to the TimeEvolutionProblem but this is not ""
    ""supported by VarQTE. Please remove this state from the problem definition ""
    ""and set VarQTE.initial_parameters with the corresponding initial parameter ""
    ""values instead.""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/algorithms/time_evolvers/variational/var_qte.py,"ValueError(
    f""The dictionary with parameter values provided does not ""
    f""include all parameters present in the initial state.""
    f""Parameters present in the state: {init_state_parameters}, ""
    f""parameters in the dictionary: ""
    f""{list(param_values.keys())}.""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/algorithms/time_evolvers/variational/var_qte.py,"ValueError(
    f""Initial state has {len(init_state_parameters)} parameters and the""
    f"" list of values has {len(param_values)} elements. They should be""
    f"" equal in length.""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/algorithms/time_evolvers/variational/var_qte.py,"TypeError(f""Unsupported type of param_values provided: {type(param_values)}."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/algorithms/time_evolvers/variational/var_qte.py,"ValueError(
    ""aux_operators were provided for evaluations but no ``estimator`` was provided.""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/algorithms/time_evolvers/variational/solvers/var_qte_linear_solver.py,"TypeError(
    f""A time parameter {t_param} has been specified, so a time-dependent ""
    f""hamiltonian is expected. The operator provided is of type {type(self._hamiltonian)}, ""
    f""which might not support parametrization. ""
    f""Please provide the parametrized hamiltonian as a SparsePauliOp.""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/algorithms/time_evolvers/variational/solvers/var_qte_linear_solver.py,"ValueError(
    ""Providing a time_value is required for time-dependent hamiltonians, ""
    f""but got time_value = {time_value}. ""
    ""Please provide a time_value to the solve_lse method.""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/algorithms/time_evolvers/variational/solvers/ode/ode_function_factory.py,"ValueError(
    f""Unsupported ODE function provided: {self._ode_function_type}.""
    f"" Only {[tp.value for tp in OdeFunctionType]} are supported.""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/algorithms/time_evolvers/variational/variational_principles/imaginary_mc_lachlan_principle.py,"AlgorithmError(
    ""The provided gradient instance does not contain an estimator primitive.""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/algorithms/time_evolvers/variational/variational_principles/imaginary_mc_lachlan_principle.py,"AlgorithmError(""The gradient primitive job failed!"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/algorithms/time_evolvers/variational/variational_principles/real_mc_lachlan_principle.py,"AlgorithmError(
    ""The provided gradient instance does not contain an estimator primitive.""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/algorithms/time_evolvers/variational/variational_principles/real_mc_lachlan_principle.py,"AlgorithmError(""The primitive job failed!"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/algorithms/time_evolvers/variational/variational_principles/real_mc_lachlan_principle.py,"AlgorithmError(""The gradient primitive job failed!"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/algorithms/time_evolvers/variational/variational_principles/real_mc_lachlan_principle.py,"ValueError(
    ""The gradient instance provided does not support calculating imaginary part. ""
    ""Please choose a different gradient class.""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/algorithms/time_evolvers/variational/variational_principles/variational_principle.py,"AlgorithmError(""The QFI primitive job failed!"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/algorithms/time_evolvers/classical_methods/evolve.py,"AlgorithmError(f""Unsupported operator type `{type(operator)}`."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/algorithms/time_evolvers/classical_methods/evolve.py,"ValueError(""Variable `num_timesteps` needs to be a positive integer."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/algorithms/time_evolvers/classical_methods/evolve.py,"ValueError(""Time dependent Hamiltonians are not supported."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/algorithms/time_evolvers/classical_methods/evolve.py,"ValueError(""Initial state is `None`"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/algorithms/optimizers/snobfit.py,"QiskitError(
    ""SnobFit is incompatible with NumPy 1.24.0 or above, please ""
    ""install a previous version. See also scikit-quant/scikit-quant#24.""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/algorithms/optimizers/snobfit.py,"ValueError(""Optimizer SNOBFIT requires bounds for all parameters."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/algorithms/optimizers/spsa.py,"ValueError(f""Length of {name} is smaller than maxiter ({maxiter})."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/algorithms/optimizers/spsa.py,"ValueError(""If one of learning rate or perturbation is set, both must be set."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/algorithms/optimizers/optimizer.py,NotImplementedError
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/algorithms/optimizers/optimizer.py,"NotImplementedError(""The settings method is not implemented per default."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/algorithms/optimizers/optimizer.py,NotImplementedError()
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/algorithms/optimizers/umda.py,"ValueError(""The size of the generation should be greater than 0."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/algorithms/optimizers/umda.py,"ValueError(""The maximum number of iterations should be greater than 0."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/algorithms/optimizers/umda.py,"ValueError(f""alpha must be in the range (0, 1], value given was {value}"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/algorithms/optimizers/gradient_descent.py,"ValueError(
    f""Length of learning_rate ({len(learning_rate)}) ""
    f""is smaller than maxiter ({maxiter}).""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/algorithms/optimizers/gradient_descent.py,"ValueError(""The gradient does not have the correct dimension"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/algorithms/optimizers/aqgd.py,"AlgorithmError(
    ""AQGD input parameter length mismatch. Parameters `maxiter`, ""
    ""`eta`, and `momentum` must have the same length.""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/algorithms/optimizers/gsls.py,"ValueError(""Size of the initial point mismatches the number of dimensions."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/algorithms/optimizers/gsls.py,"ValueError(""Length of the lower bound mismatches the number of dimensions."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/algorithms/optimizers/gsls.py,"ValueError(""Length of the upper bound mismatches the number of dimensions."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/algorithms/optimizers/gsls.py,"RuntimeError(
    ""Could not generate enough samples within bounds; try smaller radius.""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/algorithms/optimizers/steppable_optimizer.py,NotImplementedError
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/algorithms/optimizers/steppable_optimizer.py,NotImplementedError
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/algorithms/optimizers/steppable_optimizer.py,NotImplementedError
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/algorithms/optimizers/steppable_optimizer.py,NotImplementedError
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/algorithms/optimizers/steppable_optimizer.py,NotImplementedError
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/algorithms/optimizers/optimizer_utils/learning_rate.py,typ
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/algorithms/optimizers/optimizer_utils/learning_rate.py,val
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/algorithms/optimizers/nlopts/nloptimizer.py,NotImplementedError
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/algorithms/evolvers/real_evolver.py,NotImplementedError()
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/algorithms/evolvers/imaginary_evolver.py,NotImplementedError()
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/algorithms/evolvers/evolution_problem.py,"ValueError(f""Evolution time must be > 0 but was {time}."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/algorithms/evolvers/evolution_problem.py,"ValueError(
    f""Provided parameters {params_set} do not match Hamiltonian parameters ""
    f""{hamiltonian_param_set}.""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/algorithms/evolvers/trotterization/trotter_qrte.py,"ValueError(
    ""TrotterQRTE does not accept a time dependent hamiltonian,""
    ""``t_param`` from the EvolutionProblem should be set to None.""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/algorithms/evolvers/trotterization/trotter_qrte.py,"ValueError(
    ""aux_operators were provided for evaluations but no ``expectation`` or ""
    ""``quantum_instance`` was provided.""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/algorithms/evolvers/trotterization/trotter_qrte.py,"ValueError(
    ""TrotterQRTE only accepts PauliOp | ""
    f""PauliSumOp | SummedOp, {type(hamiltonian)} provided.""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/algorithms/evolvers/trotterization/trotter_qrte.py,"ValueError(""``initial_state`` must be provided in the EvolutionProblem."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/algorithms/evolvers/trotterization/trotter_qrte.py,"ValueError(
    ""Content of the Hamiltonian not of type PauliOp. The ""
    f""following type detected: {type(op)}.""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/algorithms/amplitude_amplifiers/amplitude_amplifier.py,NotImplementedError
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/algorithms/amplitude_amplifiers/grover.py,"ValueError(""Pass either a value for iterations or growth_rate, not both."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/algorithms/amplitude_amplifiers/grover.py,"ValueError(""Only one of quantum_instance or sampler can be passed, not both!"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/algorithms/amplitude_amplifiers/grover.py,"ValueError(""A quantum instance or sampler must be provided."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/algorithms/amplitude_amplifiers/grover.py,"ValueError(""Only one of quantum_instance or sampler can be passed, not both!"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/algorithms/amplitude_amplifiers/grover.py,"AlgorithmError(""Sampler job failed."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/algorithms/amplitude_amplifiers/grover.py,"TypeError(""An is_good_state function is required with the provided oracle"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/algorithms/amplitude_amplifiers/grover.py,"ValueError(""Please pass ``power`` if the iterations are not an integer."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/algorithms/minimum_eigensolvers/sampling_vqe.py,"AlgorithmError(
    ""The number of qubits of the ansatz does not match the ""
    ""operator, and the ansatz does not allow setting the ""
    ""number of qubits using `num_qubits`.""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/algorithms/minimum_eigensolvers/sampling_vqe.py,"AlgorithmError(""The ansatz must be parameterized, but has no free parameters."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/algorithms/minimum_eigensolvers/sampling_vqe.py,"AlgorithmError(""The ansatz must be parameterized, but has 0 free parameters."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/algorithms/minimum_eigensolvers/diagonal_estimator.py,"ValueError(f""alpha must be in [0, 1] but was {alpha}"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/algorithms/minimum_eigensolvers/diagonal_estimator.py,"ValueError(""The observable must be diagonal."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/algorithms/minimum_eigensolvers/qaoa.py,"AlgorithmError(
    f""Unsupported operator type {type(operator)} passed to QAOA.""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/algorithms/minimum_eigensolvers/adapt_vqe.py,"TypeError(""The AdaptVQE ansatz must be of the EvolvedOperatorAnsatz type."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/algorithms/minimum_eigensolvers/adapt_vqe.py,"QiskitError(
    ""All gradients have been evaluated to lie below the convergence threshold ""
    ""during the first iteration of the algorithm. Try to either tighten the ""
    ""convergence threshold or pick a different ansatz.""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/algorithms/minimum_eigensolvers/vqe.py,"AlgorithmError(""The primitive job to evaluate the energy failed!"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/algorithms/minimum_eigensolvers/vqe.py,"AlgorithmError(""The primitive job to evaluate the gradient failed!"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/algorithms/minimum_eigensolvers/vqe.py,"AlgorithmError(
    ""The number of qubits of the ansatz does not match the ""
    ""operator, and the ansatz does not allow setting the ""
    ""number of qubits using `num_qubits`.""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/algorithms/minimum_eigensolvers/vqe.py,"AlgorithmError(""The ansatz must be parameterized, but has no free parameters."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/algorithms/minimum_eigen_solvers/vqe.py,"AlgorithmError(
    ""The number of qubits of the ansatz does not match the ""
    ""operator, and the ansatz does not allow setting the ""
    ""number of qubits using `num_qubits`.""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/algorithms/minimum_eigen_solvers/vqe.py,"AlgorithmError(""The operator was never provided."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/algorithms/minimum_eigen_solvers/vqe.py,"AlgorithmError(
    ""A QuantumInstance or Backend must be supplied to run the quantum algorithm.""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/algorithms/minimum_eigen_solvers/vqe.py,"RuntimeError(""The ansatz must be parameterized, but has 0 free parameters."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/algorithms/minimum_eigen_solvers/vqe.py,"ValueError(
    f""The dimension of the initial point ({len(point)}) does not match the ""
    f""number of parameters in the circuit ({expected_size}).""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/algorithms/minimum_eigen_solvers/vqe.py,"ValueError(
    f""The number of bounds ({len(bounds)}) does not match the number of ""
    f""parameters in the circuit ({ansatz.num_parameters}).""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/algorithms/eigen_solvers/numpy_eigen_solver.py,"AlgorithmError(""Operator was never provided"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/algorithms/eigen_solvers/vqd.py,"AlgorithmError(
    ""The number of qubits of the ansatz does not match the ""
    ""operator, and the ansatz does not allow setting the ""
    ""number of qubits using `num_qubits`.""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/algorithms/eigen_solvers/vqd.py,"AlgorithmError(""The operator was never provided."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/algorithms/eigen_solvers/vqd.py,"AlgorithmError(
    ""A QuantumInstance or Backend must be supplied to run the quantum algorithm.""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/algorithms/eigen_solvers/vqd.py,"RuntimeError(""The ansatz must be parameterized, but has 0 free parameters."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/algorithms/eigen_solvers/vqd.py,"AlgorithmError(""The operator was never provided."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/algorithms/eigen_solvers/vqd.py,"RuntimeError(
    f""Passed previous states of the wrong size.""
    f""Passed array has length {str(len(prev_states))}""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/visualization/bloch.py,"Exception(""No such convention."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/visualization/bloch.py,"Exception(""Position needs to be specified by a qubit "" + ""state or a 3D vector."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/visualization/gate_map.py,"QiskitError(""Requires a device backend, not simulator."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/visualization/gate_map.py,"QiskitError(
    f""The number of specified qubit coordinates {len(qubit_coordinates)} ""
    f""does not match the device number of qubits: {num_qubits}""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/visualization/gate_map.py,"QiskitError(""Length of qubit labels does not equal number of qubits."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/visualization/gate_map.py,"QiskitError(""Circuit has no layout. Perhaps it has not been transpiled."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/visualization/gate_map.py,"VisualizationError(""Layout view must be 'virtual' or 'physical'."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/visualization/gate_map.py,"VisualizationError(
    f""Backend '{backend}' did not supply an error for the 'sx' gate.""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/visualization/counts_visualization.py,"VisualizationError(""Strings not same length."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/visualization/counts_visualization.py,"VisualizationError(
    ""Value of sort option, %s, isn't a ""
    ""valid choice. Must be 'asc', ""
    ""'desc', 'hamming', 'value', 'value_desc'""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/visualization/counts_visualization.py,VisualizationError(err_msg)
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/visualization/counts_visualization.py,"VisualizationError(
    f""Length of legend ({len(legend)}) doesn't match number of input executions ({len(data)}).""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/visualization/array.py,"ValueError(""""""Smallest value in max_size must be greater than or equal to 3"""""")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/visualization/array.py,"TypeError(
    """"""array_to_latex can only convert numpy arrays containing numerical data,
        or types that can be converted to such arrays""""""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/visualization/array.py,"ValueError(""array_to_latex can only convert numpy ndarrays of dimension 1 or 2"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/visualization/array.py,"MissingOptionalLibraryError(
    libname=""IPython"",
    name=""array_to_latex"",
    pip_install=""pip install ipython"",
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/visualization/pass_manager_visualization.py,"VisualizationError(""if format=raw, then a filename is required."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/visualization/transition_visualization.py,"Exception(f""Input vector has invalid length {len(b)}"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/visualization/transition_visualization.py,"Exception(f""Multiplication with unknown type {type(b)}"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/visualization/transition_visualization.py,"MissingOptionalLibraryError(
    libname=""Matplotlib"",
    name=""visualize_transition"",
    pip_install=""pip install matplotlib"",
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/visualization/transition_visualization.py,"MissingOptionalLibraryError(
    libname=""IPython"",
    name=""visualize_transition"",
    pip_install=""pip install ipython"",
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/visualization/transition_visualization.py,"VisualizationError(""Only one qubit circuits are supported"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/visualization/transition_visualization.py,"VisualizationError(f""Gate {gate.name} is not supported"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/visualization/transition_visualization.py,"VisualizationError(""Nothing to visualize."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/visualization/state_visualization.py,"VisualizationError(""Input is not a multi-qubit quantum state."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/visualization/state_visualization.py,"VisualizationError(""Input is not a multi-qubit quantum state."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/visualization/state_visualization.py,"ValueError(""'color' must be a list of len=2."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/visualization/state_visualization.py,"VisualizationError(""list should have length k"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/visualization/state_visualization.py,"VisualizationError(""s must be a string of 0 and 1"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/visualization/state_visualization.py,"VisualizationError(""Input is not a multi-qubit quantum state."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/visualization/state_visualization.py,"ValueError(
    """"""'{}' is not a valid option for drawing {} objects. Please choose from:
            'text', 'latex', 'latex_source', 'qsphere', 'hinton',
            'bloch', 'city' or 'paulivec'."""""".format(
        output, type(state).__name__
    )
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/visualization/state_visualization.py,"VisualizationError(""Input is not a multi-qubit quantum state."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/visualization/state_visualization.py,"VisualizationError(""Input is not a multi-qubit quantum state."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/visualization/dag_visualization.py,"VisualizationError(""Unrecognized style %s for the dag_drawer."" % style)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/visualization/dag_visualization.py,"VisualizationError(""Invalid style %s"" % style)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/visualization/dag_visualization.py,"InvalidFileError(""Parameter 'filename' must be in format 'name.extension'"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/visualization/pulse_v2/drawings.py,"VisualizationError(""Length of data points are not equals to 2."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/visualization/pulse_v2/interface.py,"VisualizationError(f""Invalid time unit {time_unit} is specified."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/visualization/pulse_v2/interface.py,"MissingOptionalLibraryError(
    libname=""Matplotlib"",
    name=""plot_histogram"",
    pip_install=""pip install matplotlib"",
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/visualization/pulse_v2/interface.py,"VisualizationError(f""Plotter API {plotter} is not supported."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/visualization/pulse_v2/core.py,"VisualizationError(
    ""Axis break is greater than time window. Nothing will be drawn.""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/visualization/pulse_v2/core.py,"VisualizationError(""Data type %s is not supported."" % type(program))"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/visualization/pulse_v2/core.py,"VisualizationError(
    ""Setting time range with SI units requires backend `dt` information.""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/visualization/pulse_v2/core.py,"VisualizationError(f""Coordinate {val} is not supported."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/visualization/pulse_v2/device_info.py,NotImplementedError
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/visualization/pulse_v2/plotters/base_plotter.py,NotImplementedError
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/visualization/pulse_v2/plotters/base_plotter.py,NotImplementedError
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/visualization/pulse_v2/plotters/base_plotter.py,NotImplementedError
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/visualization/pulse_v2/generators/waveform.py,"VisualizationError(""Invalid data format is provided."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/visualization/pulse_v2/generators/waveform.py,"VisualizationError(
    f""Waveform color for channel type {channel.prefix} is not defined""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/visualization/pulse_v2/generators/waveform.py,"VisualizationError(
    ""Unsupported instruction {inst} by ""
    ""filled envelope."".format(inst=inst.__class__.__name__)
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/visualization/pulse_v2/generators/frame.py,"VisualizationError(f""Unit {unit} is not supported."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/visualization/timeline/drawings.py,"VisualizationError(""Length of data points are not equals to 2."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/visualization/timeline/interface.py,"MissingOptionalLibraryError(
    libname=""Matplotlib"",
    name=""timeline drawer"",
    pip_install=""pip install matplotlib"",
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/visualization/timeline/interface.py,"VisualizationError(f""Plotter API {plotter} is not supported."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/visualization/timeline/core.py,"VisualizationError(
    f""Input circuit {program.name} is not scheduled and it contains ""
    ""operations with unknown delays. This cannot be visualized.""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/visualization/timeline/core.py,"VisualizationError(f""Coordinate {val} is not supported."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/visualization/timeline/plotters/base_plotter.py,NotImplementedError
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/visualization/timeline/plotters/base_plotter.py,NotImplementedError
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/visualization/timeline/plotters/base_plotter.py,NotImplementedError
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/visualization/timeline/plotters/base_plotter.py,NotImplementedError
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/visualization/circuit/circuit_visualization.py,"VisualizationError(
    ""The wire_order option cannot be set when the reverse_bits option is True.""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/visualization/circuit/circuit_visualization.py,"VisualizationError(
    ""The wire_order list must be the same ""
    ""length as the sum of the number of qubits and clbits in the circuit.""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/visualization/circuit/circuit_visualization.py,"VisualizationError(
    ""There must be one and only one entry in the ""
    ""wire_order list for the index of each qubit and each clbit in the circuit.""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/visualization/circuit/circuit_visualization.py,"VisualizationError(
    ""Invalid output type %s selected. The only valid choices ""
    ""are text, latex, latex_source, and mpl"" % output
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/visualization/circuit/circuit_visualization.py,"VisualizationError(""`pdflatex` command could not be run."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/visualization/circuit/circuit_visualization.py,"VisualizationError(
    ""`pdflatex` call did not succeed: see `latex_error.log`.""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/visualization/circuit/circuit_visualization.py,VisualizationError(message)
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/visualization/circuit/circuit_visualization.py,"VisualizationError(
    f""Pillow could not write the image file '{filename}'.""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/visualization/circuit/_utils.py,"VisualizationError(""Cannot set both reverse_bits and wire_order in the same drawing."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/visualization/circuit/text.py,"ValueError(""Vertical compression can only be 'high', 'medium', or 'low'"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/visualization/circuit/text.py,"VisualizationError(
    ""Text visualizer does not know how to handle this node: "", op.name
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/visualization/circuit/text.py,"VisualizationError(""_set_multibox error!."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/circuit/equivalence.py,"InvalidFileError(""Parameter 'filename' must be in format 'name.extension'"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/circuit/equivalence.py,"CircuitError(
    ""Cannot add equivalence between circuit and gate ""
    ""of different parameters. Gate params: {}. ""
    ""Circuit params: {}."".format(gate_parameters, circuit_parameters)
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/circuit/equivalence.py,"CircuitError(
    ""Cannot add equivalence between circuit and gate ""
    ""of different shapes. Gate: {} qubits and {} clbits. ""
    ""Circuit: {} qubits and {} clbits."".format(
        gate.num_qubits, gate.num_clbits, circuit.num_qubits, circuit.num_clbits
    )
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/circuit/gate.py,"CircuitError(f""to_matrix not defined for this {type(self)}"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/circuit/gate.py,"CircuitError(""The matrix is not diagonal"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/circuit/gate.py,"CircuitError(
    f""Not sure how to combine these two-qubit arguments:\n {qarg0}\n {qarg1}""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/circuit/gate.py,"CircuitError(""Not sure how to combine these qubit arguments:\n %s\n"" % qargs)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/circuit/gate.py,"CircuitError(
    f""The amount of qubit({len(qargs)})/clbit({len(cargs)}) arguments does""
    f"" not match the gate expectation ({self.num_qubits}).""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/circuit/gate.py,"CircuitError(""One or more of the arguments are empty"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/circuit/gate.py,"CircuitError(""This gate cannot handle %i arguments"" % len(qargs))"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/circuit/gate.py,CircuitError(msg)
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/circuit/gate.py,"CircuitError(f""Invalid param type {type(parameter)} for gate {self.name}."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/circuit/duration.py,"CircuitError(f""Invalid time unit: '{operation.unit}'"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/circuit/bit.py,"CircuitError(
    f""index needs to be castable to an int: type {type(index)} was provided""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/circuit/bit.py,"CircuitError(
    f""index must be under the size of the register: {index} was provided""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/circuit/bit.py,"CircuitError(""Attempt to query register of a new-style Bit."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/circuit/bit.py,"CircuitError(""Attempt to query index of a new-style Bit."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/circuit/parameter.py,"CircuitError(
    ""Cannot bind Parameters ({}) not present in ""
    ""expression."".format([str(p) for p in parameter_map])
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/circuit/quantumcircuitdata.py,"CircuitError(""object is not an Operation."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/circuit/quantumcircuitdata.py,"CircuitError(
    ""QuantumCircuit.data modification does not support argument broadcasting.""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/circuit/quantumcircuitdata.py,
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/circuit/_utils.py,"QiskitError(""Invalid control state value specified."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/circuit/_utils.py,"QiskitError(""Invalid control state type specified."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/circuit/_utils.py,"CircuitError(""invalid control bit string: "" + ctrl_state)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/circuit/_utils.py,"CircuitError(""invalid control bit string: length != num_ctrl_qubits"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/circuit/_utils.py,"CircuitError(""invalid control state specification"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/circuit/_utils.py,"CircuitError(f""invalid control state specification: {repr(ctrl_state)}"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/circuit/__init__.py,"AttributeError(f""module '{__name__}' has no attribute '{name}'"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/circuit/classicalregister.py,"CircuitError(
    ""Clbit needs a ClassicalRegister and %s was provided"" % type(register).__name__
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/circuit/barrier.py,"QiskitError(""Barriers are compiler directives and cannot be conditional."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/circuit/parametertable.py,"ValueError(""refs must be in form (instruction, param_index)"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/circuit/parametertable.py,"ValueError(""Values must be of type ParameterReferences"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/circuit/instruction.py,"CircuitError(""num_qubits and num_clbits must be integer."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/circuit/instruction.py,"CircuitError(
    ""bad instruction dimensions: %d qubits, %d clbits."" % num_qubits, num_clbits
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/circuit/instruction.py,"TypeError(""label expects a string or None"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/circuit/instruction.py,"TypeError(""label expects a string or None"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/circuit/instruction.py,"CircuitError(""inverse() not implemented for %s."" % self.name)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/circuit/instruction.py,"CircuitError(""c_if must be used with a classical register or classical bit"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/circuit/instruction.py,"CircuitError(""condition value should be non-negative"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/circuit/instruction.py,"QasmError(
    ""OpenQASM 2 can only condition on registers, but got '{self.condition[0]}'""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/circuit/instruction.py,"CircuitError(
    f""The amount of qubit arguments {len(qargs)} does not match""
    f"" the instruction expectation ({self.num_qubits}).""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/circuit/instruction.py,"CircuitError(
    f""The amount of clbit arguments {len(cargs)} does not match""
    f"" the instruction expectation ({self.num_clbits}).""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/circuit/instruction.py,"CircuitError(""Repeat can only be called with strictly positive integer."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/circuit/instructionset.py,"CircuitError(
    f""Condition bit {classical} is not in the registers known here: {creg_set}""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/circuit/instructionset.py,"CircuitError(
    f""Condition register {classical} is not one of the registers known here:""
    f"" {creg_set}""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/circuit/instructionset.py,"CircuitError(f""Bit index {classical} is out-of-range."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/circuit/instructionset.py,"CircuitError(
    ""Invalid classical condition. Must be an int, Clbit or ClassicalRegister, but received""
    f"" '{classical}'.""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/circuit/instructionset.py,"CircuitError(""Cannot pass both 'circuit_cregs' and 'resource_requester'."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/circuit/instructionset.py,"CircuitError(""attempt to add non-Operation to InstructionSet"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/circuit/instructionset.py,"CircuitError(""missing qargs or cargs in old-style InstructionSet.add"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/circuit/instructionset.py,"CircuitError(
    ""Cannot pass an index as a condition variable without specifying a requester""
    "" when creating this InstructionSet.""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/circuit/delay.py,"CircuitError(""Unknown unit %s is specified."" % unit)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/circuit/delay.py,"CircuitError(""Conditional Delay is not yet implemented."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/circuit/delay.py,"CircuitError(
    f""Duration for Delay instruction must be positive. Found {parameter}""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/circuit/delay.py,"CircuitError(
    f""Duration for Delay instruction must be positive. Found {parameter}""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/circuit/delay.py,"CircuitError(""Integer duration is expected for 'dt' unit."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/circuit/delay.py,"CircuitError(f""Bound parameter expression is complex in delay {self.name}"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/circuit/delay.py,"CircuitError(f""Duration for Delay instruction must be positive. Found {fval}"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/circuit/delay.py,"CircuitError(""Integer parameter is required for duration in 'dt' unit."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/circuit/delay.py,"CircuitError(f""Invalid param type {type(parameter)} for delay {self.name}."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/circuit/operation.py,NotImplementedError
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/circuit/operation.py,NotImplementedError
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/circuit/operation.py,NotImplementedError
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/circuit/add_control.py,"CircuitError(f""gate contains non-controllable instructions: {gate.name}"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/circuit/quantumregister.py,"CircuitError(
    ""Qubit needs a QuantumRegister and %s was provided"" % type(register).__name__
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/circuit/register.py,"CircuitError(
    ""Exactly one of the size or bits arguments can be ""
    ""provided. Provided size=%s bits=%s."" % (size, bits)
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/circuit/register.py,"CircuitError(
    ""Register size must be an integer. (%s '%s' was provided)""
    % (type(size).__name__, size)
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/circuit/register.py,"CircuitError(
    ""Register size must be non-negative (%s '%s' was provided)""
    % (type(size).__name__, size)
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/circuit/register.py,"CircuitError(
    ""The circuit name should be castable to a string ""
    ""(or None for autogenerate a name).""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/circuit/register.py,"CircuitError(f""Register bits must not be duplicated. bits={bits}"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/circuit/register.py,"CircuitError(f""Provided bits did not all match register type. bits={bits}"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/circuit/register.py,"CircuitError(""expected integer or slice index into register"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/circuit/register.py,"CircuitError(""register index out of range"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/circuit/register.py,"ValueError(f""Bit {bit} not found in Register {self}."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/circuit/measure.py,"CircuitError(""register size error"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/circuit/parameterexpression.py,"ZeroDivisionError(
    ""Binding provided for expression ""
    ""results in division by zero ""
    ""(Expression: {}, Bindings: {})."".format(self, parameter_values)
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/circuit/parameterexpression.py,"CircuitError(
    ""Cannot bind Parameters ({}) not present in ""
    ""expression."".format([str(p) for p in unknown_parameters])
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/circuit/parameterexpression.py,"CircuitError(
    f""Expression cannot bind non-numeric values ({nan_parameter_values})""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/circuit/parameterexpression.py,"CircuitError(
    f""Name conflict applying operation for parameters: {conflicting_names}""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/circuit/parameterexpression.py,"ZeroDivisionError(""Division of a ParameterExpression by zero."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/circuit/parameterexpression.py,"TypeError(
    ""ParameterExpression with unbound parameters ({}) ""
    ""cannot be cast to a complex."".format(self.parameters)
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/circuit/parameterexpression.py,"TypeError(
    ""ParameterExpression with unbound parameters ({}) ""
    ""cannot be cast to a float."".format(self.parameters)
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/circuit/parameterexpression.py,"TypeError(
    ""ParameterExpression with unbound parameters ({}) ""
    ""cannot be cast to an int."".format(self.parameters)
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/circuit/parametervector.py,"IndexError(f""Index out of range: {key} > {self._size}"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/circuit/quantumcircuit.py,"CircuitError(
    ""Circuit args must be Registers or integers. (%s '%s' was ""
    ""provided)"" % ([type(reg).__name__ for reg in regs], regs)
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/circuit/quantumcircuit.py,"CircuitError(
    ""The circuit name should be a string (or None to auto-generate a name).""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/circuit/quantumcircuit.py,"AttributeError(
    ""This circuit is not scheduled. ""
    ""To schedule it run the circuit through one of the transpiler scheduling passes.""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/circuit/quantumcircuit.py,"TypeError(""Only a dictionary is accepted for circuit metadata"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/circuit/quantumcircuit.py,"CircuitError(
    ""Cannot raise a parameterized circuit to a non-positive power ""
    ""or matrix-power, please bind the free parameters: ""
    ""{}"".format(self.parameters)
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/circuit/quantumcircuit.py,"CircuitError(
    ""The circuit contains non-unitary operations and cannot be ""
    ""controlled. Note that no qiskit.circuit.Instruction objects may ""
    ""be in the circuit for this operation.""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/circuit/quantumcircuit.py,"CircuitError(
    ""The circuit contains non-unitary operations and cannot be ""
    ""controlled. Note that no qiskit.circuit.Instruction objects may ""
    ""be in the circuit for this operation.""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/circuit/quantumcircuit.py,"CircuitError(
    ""Cannot compose to the front of a circuit while a control-flow context is active.""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/circuit/quantumcircuit.py,"CircuitError(
    ""Cannot emit a new composed circuit while a control-flow context is active.""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/circuit/quantumcircuit.py,"CircuitError(
    ""Trying to compose with another QuantumCircuit which has more 'in' edges.""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/circuit/quantumcircuit.py,"CircuitError(
    f""Number of items in qubits parameter ({len(mapped_qubits)}) does not""
    f"" match number of qubits in the circuit ({len(other.qubits)}).""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/circuit/quantumcircuit.py,"CircuitError(
    f""Number of items in clbits parameter ({len(mapped_clbits)}) does not""
    f"" match number of clbits in the circuit ({len(other.clbits)}).""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/circuit/quantumcircuit.py,"CircuitError(f""Clbit {specifier} is not present in this circuit."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/circuit/quantumcircuit.py,"CircuitError(f""Register {specifier} is not present in this circuit."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/circuit/quantumcircuit.py,"CircuitError(f""Classical bit index {specifier} is out-of-range."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/circuit/quantumcircuit.py,"CircuitError(f""Unknown classical resource specifier: '{specifier}'."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/circuit/quantumcircuit.py,"CircuitError(""operation.to_instruction() is not an Operation."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/circuit/quantumcircuit.py,"CircuitError(
    ""Object is a subclass of Operation, please add () to ""
    ""pass an instance of this object.""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/circuit/quantumcircuit.py,"CircuitError(
    ""Object to append must be an Operation or have a to_instruction() method.""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/circuit/quantumcircuit.py,"CircuitError(f""Name conflict on adding parameter: {parameter.name}"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/circuit/quantumcircuit.py,"CircuitError(
    ""QuantumCircuit parameters can be Registers or Integers.""
    "" If Integers, up to 2 arguments. QuantumCircuit was called""
    "" with %s."" % (regs,)
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/circuit/quantumcircuit.py,"CircuitError('register name ""%s"" already exists' % register.name)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/circuit/quantumcircuit.py,"CircuitError(""expected a register"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/circuit/quantumcircuit.py,"CircuitError(f""Attempted to add bits found already in circuit: {duplicate_bits}"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/circuit/quantumcircuit.py,"CircuitError(
    ""Expected an instance of Qubit, Clbit, or ""
    ""AncillaQubit, but was passed {}"".format(bit)
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/circuit/quantumcircuit.py,"CircuitError(f""Could not locate bit of unknown type: {type(bit)}"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/circuit/quantumcircuit.py,"CircuitError(
    f""Could not locate provided bit: {bit}. Has it been added to the QuantumCircuit?""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/circuit/quantumcircuit.py,"CircuitError(""duplicate qubit arguments"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/circuit/quantumcircuit.py,"QasmError(""Cannot represent circuits with unbound parameters in OpenQASM 2."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/circuit/quantumcircuit.py,"MissingOptionalLibraryError(
    libname=""pygments>2.4"",
    name=""formatted QASM output"",
    pip_install=""pip install pygments"",
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/circuit/quantumcircuit.py,"CircuitError(
    ""The number of classical bits must be equal or greater than ""
    ""the number of qubits.""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/circuit/quantumcircuit.py,"CircuitError(
    ""Cannot bind parameters ({}) not present in the circuit."".format(
        "", "".join(map(str, params_not_in_circuit))
    )
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/circuit/quantumcircuit.py,"ValueError(
    ""Mismatching number of values and parameters. For partial binding ""
    ""please pass a dictionary of {parameter: value} pairs.""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/circuit/quantumcircuit.py,"TypeError(
    ""Found ParameterExpression in values; use assign_parameters() instead.""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/circuit/quantumcircuit.py,"TypeError(
    ""Found ParameterExpression in values; use assign_parameters() instead.""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/circuit/quantumcircuit.py,"CircuitError(
    ""ParameterVector {} has length {}, which ""
    ""differs from value list {} of ""
    ""len {}"".format(param, len(param), value, len(value))
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/circuit/quantumcircuit.py,"RuntimeError(  # pragma: no cover
    ""The ParameterTable or data of this QuantumCircuit have become out-of-sync.""
    f""\nParameterTable: {self._parameter_table}""
    f""\nData: {self.data}""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/circuit/quantumcircuit.py,"ValueError(
    f""Unsupported mode ({mode}) selected, choose one of {all_modes}""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/circuit/quantumcircuit.py,"AttributeError(f""No ancillas provided, but {required} are needed!"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/circuit/quantumcircuit.py,"ValueError(f""At least {required} ancillas required, but {actually} given."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/circuit/quantumcircuit.py,"CircuitError(""This circuit contains no instructions."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/circuit/quantumcircuit.py,"CircuitError(""This circuit contains no instructions."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/circuit/quantumcircuit.py,"CircuitError(
    ""When using 'while_loop' as a context manager,""
    "" you cannot pass qubits or clbits.""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/circuit/quantumcircuit.py,"CircuitError(
    ""When using 'while_loop' with a body, you must pass qubits and clbits.""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/circuit/quantumcircuit.py,"CircuitError(
    ""When using 'for_loop' as a context manager, you cannot pass qubits or clbits.""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/circuit/quantumcircuit.py,"CircuitError(
    ""When using 'for_loop' with a body, you must pass qubits and clbits.""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/circuit/quantumcircuit.py,"CircuitError(
    ""When using 'if_test' as a context manager, you cannot pass qubits or clbits.""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/circuit/quantumcircuit.py,"CircuitError(""When using 'if_test' with a body, you must pass qubits and clbits."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/circuit/quantumcircuit.py,"CircuitError(
    ""When using 'switch' as a context manager, you cannot pass qubits or clbits.""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/circuit/quantumcircuit.py,"CircuitError(""When using 'switch' with cases, you must pass qubits and clbits."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/circuit/quantumcircuit.py,"CircuitError(
    ""qubit_start_time undefined. Circuit must be scheduled first.""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/circuit/quantumcircuit.py,"CircuitError(
    ""qubit_stop_time undefined. Circuit must be scheduled first.""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/circuit/quantumcircuit.py,"CircuitError(f""Bit '{specifier}' is not in the circuit."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/circuit/quantumcircuit.py,"CircuitError(
    f""Index {specifier} out of range for size {len(bit_sequence)}.""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/circuit/quantumcircuit.py,CircuitError(message)
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/circuit/quantumcircuit.py,"CircuitError(f""Bit '{specifier}' is not in the circuit."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/circuit/quantumcircuit.py,"CircuitError(
    f""Index {specifier} out of range for size {len(bit_sequence)}.""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/circuit/quantumcircuit.py,CircuitError(message)
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/circuit/controlledgate.py,"CircuitError(""The number of control qubits must be an integer."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/circuit/controlledgate.py,"CircuitError(f""The number of control qubits must be in `[1, {limit}]`."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/circuit/controlledgate.py,"CircuitError(""Controlled gate does not define base gate for extracting params"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/circuit/controlledgate.py,"CircuitError(""Controlled gate does not define base gate for extracting params"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/circuit/classicalfunction/classicalfunction.py,"QiskitError(""ClassicalFunction needs a source code as a string."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/circuit/classicalfunction/boolean_expression.py,"FileNotFoundError(""The file %s does not exists."" % filename)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/circuit/classicalfunction/classical_function_visitor.py,"ClassicalFunctionParseError(""just functions, sorry!"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/circuit/classicalfunction/classical_function_visitor.py,"ClassicalFunctionParseError(""return type is needed"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/circuit/classicalfunction/classical_function_visitor.py,"ClassicalFunctionParseError(""return type error"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/circuit/classicalfunction/classical_function_visitor.py,"ClassicalFunctionParseError(""Unknown binop.op %s"" % op)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/circuit/classicalfunction/classical_function_visitor.py,"ClassicalFunctionParseError(""binop type error"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/circuit/classicalfunction/classical_function_visitor.py,"ClassicalFunctionParseError(""binop type error"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/circuit/classicalfunction/classical_function_visitor.py,"ClassicalFunctionCompilerTypeError(
    ""UntaryOp.op %s only support operation on Int1s for now"" % node.op
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/circuit/classicalfunction/classical_function_visitor.py,"ClassicalFunctionCompilerTypeError(
    ""UntaryOp.op %s does not operate with Int1 type "" % node.op
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/circuit/classicalfunction/classical_function_visitor.py,"ClassicalFunctionParseError(""out of scope: %s"" % node.id)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/circuit/classicalfunction/classical_function_visitor.py,"ClassicalFunctionParseError(""Unknown node: %s"" % type(node))"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/circuit/classicalfunction/classical_function_visitor.py,"ClassicalFunctionParseError(""argument type is needed"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/circuit/classicalfunction/utils.py,"RuntimeError(""Unrecognized operator: %s"" % op.kind())"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/circuit/tools/pi_check.py,"QiskitError(""pi_check parameter output should be text, latex, mpl, or qasm."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/circuit/controlflow/while_loop.py,"CircuitError(
    ""WhileLoopOp expects a body parameter of type ""
    f""QuantumCircuit, but received {type(body)}.""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/circuit/controlflow/while_loop.py,"CircuitError(
    ""Attempted to assign a body parameter with a num_qubits or ""
    ""num_clbits different than that of the WhileLoopOp. ""
    f""WhileLoopOp num_qubits/clbits: {self.num_qubits}/{self.num_clbits} ""
    f""Supplied body num_qubits/clbits: {body.num_qubits}/{body.num_clbits}.""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/circuit/controlflow/while_loop.py,"NotImplementedError(
    ""WhileLoopOp cannot be classically controlled through Instruction.c_if. ""
    ""Please use an IfElseOp instead.""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/circuit/controlflow/builder.py,NotImplementedError
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/circuit/controlflow/builder.py,NotImplementedError
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/circuit/controlflow/builder.py,"CircuitError(""Cannot assemble a placeholder instruction."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/circuit/controlflow/builder.py,"CircuitError(""Cannot convert a placeholder instruction to OpenQASM 2"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/circuit/controlflow/builder.py,"CircuitError(""Cannot repeat a placeholder instruction."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/circuit/controlflow/builder.py,CircuitError(self._forbidden_message)
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/circuit/controlflow/builder.py,"CircuitError(
    f""The current builder scope cannot take a '{instruction.operation.name}'""
    "" because it is not in a loop.""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/circuit/controlflow/builder.py,"CircuitError(""Cannot add resources after the scope has been built."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/circuit/controlflow/builder.py,"CircuitError(""This scope contains no instructions."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/circuit/controlflow/builder.py,"CircuitError(""This scope contains no instructions."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/circuit/controlflow/builder.py,"TypeError(f""Can only add qubits or classical bits, but received '{bit}'."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/circuit/controlflow/builder.py,"RuntimeError(""Cannot build a forbidden scope. Please report this as a bug."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/circuit/controlflow/condition.py,"CircuitError(
    ""A classical condition should be a 2-tuple of `(ClassicalRegister | Clbit, int)`,""
    f"" but received '{condition!r}'.""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/circuit/controlflow/if_else.py,"CircuitError(
    ""IfElseOp expects a true_body parameter ""
    f""of type QuantumCircuit, but received {type(true_body)}.""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/circuit/controlflow/if_else.py,"CircuitError(
    ""IfElseOp expects a true_body parameter of type ""
    f""QuantumCircuit, but received {type(true_body)}.""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/circuit/controlflow/if_else.py,"CircuitError(
    ""Attempted to assign a true_body parameter with a num_qubits or ""
    ""num_clbits different than that of the IfElseOp. ""
    f""IfElseOp num_qubits/clbits: {self.num_qubits}/{self.num_clbits} ""
    f""Supplied body num_qubits/clbits: {true_body.num_qubits}/{true_body.num_clbits}.""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/circuit/controlflow/if_else.py,"CircuitError(
    ""IfElseOp expects a false_body parameter of type ""
    f""QuantumCircuit, but received {type(false_body)}.""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/circuit/controlflow/if_else.py,"CircuitError(
    ""Attempted to assign a false_body parameter with a num_qubits or ""
    ""num_clbits different than that of the IfElseOp. ""
    f""IfElseOp num_qubits/clbits: {self.num_qubits}/{self.num_clbits} ""
    f""Supplied body num_qubits/clbits: {false_body.num_qubits}/{false_body.num_clbits}.""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/circuit/controlflow/if_else.py,"NotImplementedError(
    ""IfElseOp cannot be classically controlled through Instruction.c_if. ""
    ""Please nest it in an IfElseOp instead.""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/circuit/controlflow/if_else.py,"CircuitError(f""false block is already set to {self.__false_block}"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/circuit/controlflow/if_else.py,"CircuitError(
    ""This block contains bits that are not in the operands sets:""
    f"" {current_bits - all_bits!r}""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/circuit/controlflow/if_else.py,"NotImplementedError(
    ""IfElseOp cannot be classically controlled through Instruction.c_if. ""
    ""Please nest it in another IfElseOp instead.""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/circuit/controlflow/if_else.py,"CircuitError(""Cannot re-use an 'else' context."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/circuit/controlflow/if_else.py,"CircuitError(""Cannot attach an 'else' branch to an incomplete 'if' block."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/circuit/controlflow/if_else.py,"CircuitError(""Cannot attach an 'else' to a broadcasted 'if' block."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/circuit/controlflow/if_else.py,"CircuitError(
    ""The 'if' block is not the most recent instruction in the circuit.""
    f"" Expected to find: {appended!r}, but instead found: {instruction!r}.""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/circuit/controlflow/for_loop.py,"CircuitError(
    ""ForLoopOp expects a loop_parameter parameter to ""
    ""be either of type Parameter or None, but received ""
    f""{type(loop_parameter)}.""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/circuit/controlflow/for_loop.py,"CircuitError(
    ""ForLoopOp expects a body parameter to be of type ""
    f""QuantumCircuit, but received {type(body)}.""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/circuit/controlflow/for_loop.py,"CircuitError(
    ""Attempted to assign a body parameter with a num_qubits or ""
    ""num_clbits different than that of the ForLoopOp. ""
    f""ForLoopOp num_qubits/clbits: {self.num_qubits}/{self.num_clbits} ""
    f""Supplied body num_qubits/clbits: {body.num_qubits}/{body.num_clbits}.""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/circuit/controlflow/for_loop.py,"CircuitError(""A for-loop context manager cannot be re-entered."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/circuit/controlflow/_builder_utils.py,"CircuitError(f""Unknown register: {register}."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/circuit/controlflow/switch_case.py,"CircuitError(""the switch target must be a classical bit or register"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/circuit/controlflow/switch_case.py,"CircuitError(f""duplicate case value {value}"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/circuit/controlflow/switch_case.py,"CircuitError(""cases after the default are unreachable"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/circuit/controlflow/switch_case.py,"CircuitError(""case values must be Booleans or non-negative integers"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/circuit/controlflow/switch_case.py,"CircuitError(
    f""switch target '{target}' has {target_bits} bit(s) of precision,""
    f"" but case {value} is larger than the maximum of {target_max}.""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/circuit/controlflow/switch_case.py,"CircuitError(""case blocks must be QuantumCircuit instances"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/circuit/controlflow/switch_case.py,"CircuitError(""ungrouped cases cannot point to the same block"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/circuit/controlflow/switch_case.py,"CircuitError(""incompatible bits between cases"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/circuit/controlflow/switch_case.py,"CircuitError(""must have at least one case to run"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/circuit/controlflow/switch_case.py,"CircuitError(f""needed {len(self._case_map)} blocks but received {len(blocks)}"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/circuit/controlflow/switch_case.py,"NotImplementedError(
    ""SwitchCaseOp cannot be classically controlled through Instruction.c_if. ""
    ""Please nest it in an IfElseOp instead.""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/circuit/controlflow/switch_case.py,"CircuitError(
    ""Cannot enter more than one case at once.""
    "" If you want multiple labels to point to the same block,""
    "" pass them all to a single case context,""
    "" such as `with case(1, 2, 3):`.""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/circuit/controlflow/switch_case.py,"CircuitError(""Cannot add a new case to a completed switch statement."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/circuit/controlflow/switch_case.py,"CircuitError(""Case values must be integers or `CASE_DEFAULT`"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/circuit/controlflow/switch_case.py,"CircuitError(f""duplicate case label: '{value}'"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/circuit/library/hidden_linear_function.py,"CircuitError(""The adjacency matrix must be symmetric."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/circuit/library/evolved_operator_ansatz.py,"ValueError(""The operators are not set."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/circuit/library/evolved_operator_ansatz.py,"QiskitError(
    ""If qiskit.opflow operators are evolved the evolution must be a ""
    f""qiskit.opflow.EvolutionBase, not a {type(self.evolution)}.""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/circuit/library/evolved_operator_ansatz.py,"ValueError(""All operators must act on the same number of qubits."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/circuit/library/evolved_operator_ansatz.py,"ValueError(""The number of parameter prefixes must match the operators."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/circuit/library/graph_state.py,"CircuitError(""The adjacency matrix must be symmetric."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/circuit/library/pauli_evolution.py,"ValueError(f""Unsupported operator type for evolution: {type(operator)}."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/circuit/library/pauli_evolution.py,"ValueError(""Operator contains complex coefficients, which are not supported."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/circuit/library/pauli_evolution.py,"ValueError(""Operator contains ParameterExpression, which are not supported."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/circuit/library/blueprintcircuit.py,NotImplementedError
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/circuit/library/iqp.py,"CircuitError(""The interactions matrix is not symmetric"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/circuit/library/fourier_checking.py,"CircuitError(
    ""The functions f and g must be given as truth ""
    ""tables, each as a list of 2**n entries of ""
    ""{1, -1}.""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/circuit/library/data_preparation/state_preparation.py,"QiskitError(
    ""The num_qubits parameter to StatePreparation should only be""
    "" used when params is an integer""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/circuit/library/data_preparation/state_preparation.py,"QiskitError(
    ""StatePreparation integer has %s bits, but this exceeds the""
    "" number of qubits in the circuit, %s."" % (len(intstr), self.num_qubits)
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/circuit/library/data_preparation/state_preparation.py,"QiskitError(""Desired statevector length not a positive power of 2."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/circuit/library/data_preparation/state_preparation.py,"QiskitError(""Sum of amplitudes-squared does not equal one."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/circuit/library/data_preparation/state_preparation.py,"QiskitError(
    ""StatePreparation parameter vector has %d elements, therefore expects %s ""
    ""qubits. However, %s were provided.""
    % (2**self.num_qubits, self.num_qubits, len(flat_qargs))
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/circuit/library/data_preparation/state_preparation.py,"CircuitError(
    ""invalid param label {} for instruction {}. Label should be ""
    ""0, 1, +, -, l, or r "".format(type(parameter), self.name)
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/circuit/library/data_preparation/state_preparation.py,"CircuitError(f""invalid param type {type(parameter)} for instruction  {self.name}"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/circuit/library/data_preparation/zz_feature_map.py,"ValueError(
    ""The ZZFeatureMap contains 2-local interactions and cannot be ""
    f""defined for less than 2 qubits. You provided {feature_dimension}.""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/circuit/library/basis_change/qft.py,"ValueError(""Approximation degree cannot be smaller than 0."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/circuit/library/basis_change/qft.py,"AttributeError(""The number of qubits has not been set."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/circuit/library/arithmetic/piecewise_chebyshev.py,"AttributeError(""The function to be approximated has not been set."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/circuit/library/arithmetic/piecewise_chebyshev.py,"AttributeError(""The degree of the polynomials has not been set."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/circuit/library/arithmetic/piecewise_chebyshev.py,"AttributeError(""The breakpoints have not been set."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/circuit/library/arithmetic/piecewise_chebyshev.py,"AttributeError(""The number of qubits has not been set."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/circuit/library/arithmetic/piecewise_chebyshev.py,"CircuitError(
    ""Not enough qubits in the circuit, need at least ""
    ""{}."".format(self.num_state_qubits + 1)
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/circuit/library/arithmetic/piecewise_chebyshev.py,"TypeError(
    "" <lambda>() missing 1 required positional argument: '""
    + self.f_x.__code__.co_varnames[0]
    + ""'.""
    + "" Constant functions should be specified as 'f_x = constant'.""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/circuit/library/arithmetic/functional_pauli_rotations.py,"ValueError(f""The provided basis must be X, Y or Z, not {basis}"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/circuit/library/arithmetic/functional_pauli_rotations.py,NotImplementedError
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/circuit/library/arithmetic/integer_comparator.py,"AttributeError(""Number of state qubits is not set."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/circuit/library/arithmetic/integer_comparator.py,"AttributeError(""No comparison value set."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/circuit/library/arithmetic/integer_comparator.py,"CircuitError(""Number of qubits does not match required number of qubits."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/circuit/library/arithmetic/piecewise_polynomial_pauli_rotations.py,"AttributeError(""The number of qubits has not been set."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/circuit/library/arithmetic/piecewise_polynomial_pauli_rotations.py,"CircuitError(
    ""Not enough qubits in the circuit, need at least ""
    ""{}."".format(self.num_state_qubits + 1)
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/circuit/library/arithmetic/piecewise_polynomial_pauli_rotations.py,"ValueError(""Mismatching number of breakpoints and polynomials."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/circuit/library/arithmetic/piecewise_linear_pauli_rotations.py,"AttributeError(""The number of qubits has not been set."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/circuit/library/arithmetic/piecewise_linear_pauli_rotations.py,"CircuitError(
    ""Not enough qubits in the circuit, need at least ""
    ""{}."".format(self.num_state_qubits + 1)
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/circuit/library/arithmetic/piecewise_linear_pauli_rotations.py,"ValueError(""Mismatching sizes of breakpoints, slopes and offsets."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/circuit/library/arithmetic/weighted_adder.py,"ValueError(""Non-integer weights are not supported!"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/circuit/library/arithmetic/weighted_adder.py,"AttributeError(""The number of state qubits has not been set."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/circuit/library/arithmetic/weighted_adder.py,"ValueError(""Mismatching number of state qubits and weights."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/circuit/library/arithmetic/polynomial_pauli_rotations.py,"AttributeError(""The number of qubits has not been set."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/circuit/library/arithmetic/polynomial_pauli_rotations.py,"CircuitError(
    ""Not enough qubits in the circuit, need at least ""
    ""{}."".format(self.num_state_qubits + 1)
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/circuit/library/arithmetic/linear_amplitude_function.py,"ValueError(""Breakpoints must be unique and sorted."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/circuit/library/arithmetic/linear_amplitude_function.py,"ValueError(""Breakpoints must be included in domain."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/circuit/library/arithmetic/linear_amplitude_function.py,"ValueError(f""Size mismatch of slope ({size}) and offset ({len(offset)})."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/circuit/library/arithmetic/linear_amplitude_function.py,"ValueError(
    f""Size mismatch of slope ({size}) and breakpoints ({len(breakpoints)}).""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/circuit/library/arithmetic/linear_pauli_rotations.py,"AttributeError(""The number of qubits has not been set."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/circuit/library/arithmetic/linear_pauli_rotations.py,"CircuitError(
    ""Not enough qubits in the circuit, need at least ""
    ""{}."".format(self.num_state_qubits + 1)
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/circuit/library/arithmetic/quadratic_form.py,"ValueError(""Mismatching sizes of quadratic and linear."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/circuit/library/arithmetic/quadratic_form.py,"ValueError(
    ""If the number of result qubits is not specified, the quadratic ""
    ""form matrices/vectors/offset may not be parameterized.""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/circuit/library/arithmetic/adders/vbe_ripple_carry_adder.py,"ValueError(""The number of qubits must be at least 1."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/circuit/library/arithmetic/adders/draper_qft_adder.py,"ValueError(""The DraperQFTAdder only supports 'half' and 'fixed' as ``kind``."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/circuit/library/arithmetic/adders/draper_qft_adder.py,"ValueError(""The number of qubits must be at least 1."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/circuit/library/arithmetic/adders/cdkm_ripple_carry_adder.py,"ValueError(""The number of qubits must be at least 1."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/circuit/library/arithmetic/multipliers/multiplier.py,"ValueError(""The number of qubits must be at least 1."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/circuit/library/arithmetic/multipliers/multiplier.py,"ValueError(
    ""Number of result qubits is smaller than number of input state qubits.""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/circuit/library/arithmetic/multipliers/multiplier.py,"ValueError(
    ""Number of result qubits is larger than twice the number of input state qubits.""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/circuit/library/arithmetic/multipliers/hrs_cumulative_multiplier.py,"NotImplementedError(""Only default adder is supported for modular multiplication."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/circuit/library/boolean_logic/quantum_xor.py,"CircuitError(""Bits in 'amount' exceed circuit width"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/circuit/library/generalized_gates/permutation.py,"CircuitError(
    ""Permutation pattern must be some ordering of 0..num_qubits-1 in a list.""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/circuit/library/generalized_gates/permutation.py,"CircuitError(
    ""Permutation pattern must be some ordering of 0..num_qubits-1 in a list.""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/circuit/library/generalized_gates/diagonal.py,"CircuitError(""Diagonal entries must be in a list or numpy array."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/circuit/library/generalized_gates/diagonal.py,"CircuitError(""The number of diagonal entries is not a positive power of 2."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/circuit/library/generalized_gates/diagonal.py,"CircuitError(""A diagonal element does not have absolute value one."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/circuit/library/generalized_gates/pauli.py,"CircuitError(
    f""Parameter string {parameter} should contain only 'I', 'X', 'Y', 'Z' characters""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/circuit/library/generalized_gates/pauli.py,"CircuitError(
    f""Parameter {parameter} should be a string of 'I', 'X', 'Y', 'Z' characters""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/circuit/library/generalized_gates/rv.py,"CircuitError(
    f""The {self.name} gate cannot be decomposed with unbound parameters""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/circuit/library/generalized_gates/linear_function.py,"CircuitError(
    ""A linear function must be represented either by a list, ""
    ""a numpy array, or a quantum circuit with linear gates.""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/circuit/library/generalized_gates/linear_function.py,"CircuitError(
    ""A linear function must be represented by a square matrix.""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/circuit/library/generalized_gates/linear_function.py,"CircuitError(""A linear function must be represented by a square matrix."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/circuit/library/generalized_gates/linear_function.py,"CircuitError(
    ""A linear function must be represented by an invertible matrix.""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/circuit/library/generalized_gates/linear_function.py,"CircuitError(""The linear function is not a permutation"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/circuit/library/generalized_gates/linear_function.py,"CircuitError(""A linear quantum circuit can include only CX and SWAP gates."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/circuit/library/generalized_gates/mcmt.py,"AttributeError(""Need at least one control and one target qubit."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/circuit/library/generalized_gates/mcmt.py,"AttributeError(""Base gate must act on one qubit only."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/circuit/library/generalized_gates/mcmt.py,"AttributeError(
    ""The circuit you specified as control gate can only have one qubit!""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/circuit/library/generalized_gates/mcmt.py,"AttributeError(f""Invalid gate specified: {gate}"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/circuit/library/generalized_gates/mcmt.py,"QiskitError(""Insufficient number of ancilla qubits."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/circuit/library/n_local/two_local.py,"ValueError(f""Unknown layer name `{layer}`."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/circuit/library/n_local/two_local.py,"ValueError(f""Unknown layer type`{layer}`."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/circuit/library/n_local/two_local.py,"TypeError(
    f""Invalid input type {type(layer)}. "" + ""`layer` must be a type, str or QuantumCircuit.""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/circuit/library/n_local/qaoa_ansatz.py,"ValueError(
    ""The operator representing the cost of the optimization problem is not set""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/circuit/library/n_local/qaoa_ansatz.py,"ValueError(
    ""The number of qubits of the initial state {} does not match ""
    ""the number of qubits of the cost operator {}"".format(
        self.initial_state.num_qubits, self.num_qubits
    )
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/circuit/library/n_local/qaoa_ansatz.py,"ValueError(
    ""The number of qubits of the mixer {} does not match ""
    ""the number of qubits of the cost operator {}"".format(
        self.mixer_operator.num_qubits, self.num_qubits
    )
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/circuit/library/n_local/n_local.py,"TypeError(""The value of reps should be int"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/circuit/library/n_local/n_local.py,"ValueError(""The value of reps should be larger than or equal to 0"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/circuit/library/n_local/n_local.py,"TypeError(f""Adding a {type(layer)} to an NLocal is not supported."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/circuit/library/n_local/n_local.py,"ValueError(""No number of qubits specified."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/circuit/library/n_local/n_local.py,"ValueError(""The blocks are not set."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/circuit/library/n_local/n_local.py,"ValueError(
    ""The length of ordered parameters must be equal to the number of ""
    ""settable parameters in the circuit ({}), but is {}"".format(
        self.num_parameters_settable, len(parameters)
    )
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/circuit/library/n_local/n_local.py,"ValueError(""The repetitions should be larger than or equal to 0"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/circuit/library/n_local/n_local.py,"ValueError(f""Invalid value of entanglement: {entanglement}"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/circuit/library/n_local/n_local.py,"ValueError(f""Invalid value of entanglement: {entanglement}"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/circuit/library/n_local/n_local.py,"ValueError(f""Invalid value of entanglement: {entanglement}"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/circuit/library/n_local/n_local.py,"ValueError(f""Invalid value of entanglement: {entanglement}"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/circuit/library/n_local/n_local.py,"ValueError(f""Invalid value of entanglement: {entanglement}"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/circuit/library/n_local/n_local.py,"ValueError(""`which` must be either `appended` or `prepended`."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/circuit/library/n_local/n_local.py,"ValueError(
    ""The number of block qubits must be smaller or equal to the number of ""
    ""qubits in the circuit.""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/circuit/library/n_local/n_local.py,"ValueError(""Pairwise entanglement is not defined for blocks with more than 2 qubits."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/circuit/library/n_local/n_local.py,"ValueError(f""Unsupported entanglement type: {entanglement}"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/circuit/library/n_local/excitation_preserving.py,"ValueError(f""Unsupported mode {mode}, choose one of {supported_modes}"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/circuit/library/standard_gates/x.py,"AttributeError(f""Unsupported mode ({mode}) specified!"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/circuit/library/standard_gates/x.py,"AttributeError(""Something went wrong in the recursion, have less than 4 qubits."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/circuit/library/standard_gates/u.py,"CircuitError(""Controlled gate does not define base gate for extracting params"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/circuit/library/standard_gates/u.py,"CircuitError(""Controlled gate does not define base gate for extracting params"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/circuit/library/standard_gates/multi_control_rotation_gates.py,"QiskitError(f""The unitary must be a 2x2 matrix, but has shape {unitary.shape}."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/circuit/library/standard_gates/multi_control_rotation_gates.py,"QiskitError(f""The unitary in must be an unitary matrix, but is {unitary}."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/circuit/library/standard_gates/multi_control_rotation_gates.py,"QiskitError(""The unitary must have one real diagonal."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/circuit/library/standard_gates/multi_control_rotation_gates.py,"QiskitError(""The mcrz gate needs a single qubit as target."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/circuit/library/standard_gates/multi_control_rotation_gates.py,"QiskitError(""The mcrz gate needs a single qubit as target."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/circuit/library/standard_gates/multi_control_rotation_gates.py,"QiskitError(f""Unrecognized mode for building MCRY circuit: {mode}."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/circuit/library/standard_gates/multi_control_rotation_gates.py,"QiskitError(""The mcrz gate needs a single qubit as target."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/circuit/library/standard_gates/u3.py,"ValueError(""Cannot generate the gray code for less than 1 bit."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/circuit/random/utils.py,"CircuitError(""max_operands must be between 1 and 4"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/qasm3/printer.py,"RuntimeError(
    f""This visitor does not know how to handle AST nodes of type '{node_type}',""
    f"" but was given '{node}'.""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/qasm3/printer.py,"QASM3ExporterError(
    ""'switch' statements are not stabilised in OpenQASM 3 yet.""
    "" To enable experimental support, set the flag""
    "" 'ExperimentalFeatures.SWITCH_CASE_V1' in the 'experimental' keyword""
    "" argument of the printer.""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/qasm3/__init__.py,QASM3ImporterError(str(exc))
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/qasm3/__init__.py,QASM3ImporterError(str(exc))
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/qasm3/exporter.py,KeyError(key)
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/qasm3/exporter.py,"QASM3ExporterError(f""cannot reserve the keyword '{name}' as a variable name"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/qasm3/exporter.py,"QASM3ExporterError(
    f""tried to reserve '{name}', but it is already used by '{table[name]}'""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/qasm3/exporter.py,"QASM3ExporterError(
    f""tried to reserve '{name.string}', but it is already used by '{variable}'""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/qasm3/exporter.py,"KeyError(f""'{variable}' is not defined in the current context"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/qasm3/exporter.py,"QASM3ExporterError(  # pragma: no cover
    f""Not currently in the global context. Current contexts are: {self._circuit_ctx}""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/qasm3/exporter.py,"QASM3ExporterError(  # pragma: no cover
    f""Tried to push a scope whose circuit needs {circuit.num_qubits} qubits, but only""
    f"" provided {len(qubits)} qubits to create the mapping.""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/qasm3/exporter.py,"QASM3ExporterError(  # pragma: no cover
    f""Tried to push a scope whose circuit needs {circuit.num_clbits} clbits, but only""
    f"" provided {len(clbits)} clbits to create the mapping.""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/qasm3/exporter.py,"QASM3ExporterError(  # pragma: no cover
    ""Tried to pop a scope from the current context, but there are no current scopes.""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/qasm3/exporter.py,"QASM3ExporterError(  # pragma: no cover
    ""Tried to pop the current context, but that is the global context.""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/qasm3/exporter.py,"QASM3ExporterError(  # pragma: no cover
    ""Tried to pop the current context while there are still""
    f"" {len(self._circuit_ctx[-1]) - 1} unclosed scopes.""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/qasm3/exporter.py,"QASM3ExporterError(
    ""Exporting opaque instructions with pulse-level calibrations is not yet supported by""
    "" the OpenQASM 3 exporter. Received this instruction, which appears opaque:""
    f""\n{instruction}""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/qasm3/exporter.py,"QASM3ExporterError(
    ""Exporting subroutines with parameters is not yet supported by the OpenQASM 3""
    "" exporter. Received this instruction, which appears parameterized:""
    f""\n{instruction}""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/qasm3/exporter.py,NotImplementedError
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/qasm3/exporter.py,NotImplementedError
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/qasm3/exporter.py,"QASM3ExporterError(
    f""Clbit {index} is in multiple registers, but 'alias_classical_registers' is""
    f"" False. Registers and indices: {found_bit.registers}.""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/qasm3/exporter.py,"QASM3ExporterError(
    ""'switch' statements are not stabilized in OpenQASM 3 yet.""
    "" To enable experimental support, set the flag""
    "" 'ExperimentalFeatures.SWITCH_CASE_V1' in the 'experimental' keyword""
    "" argument of the exporter.""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/qasm3/exporter.py,"QASM3ExporterError(
    ""The values in QASM 3 'for' loops must all be integers, but received""
    f"" '{indexset}'.""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/qasm3/exporter.py,"QASM3ExporterError(
    f""Found a delay instruction acting on classical bits: {instruction}""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/qasm3/exporter.py,"QASM3ExporterError(f""'{value}' is not an integer"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/transpiler/timing_constraints.py,"TranspilerError(
    f""Timing constraint {key} should be nonzero integer. Not {value}.""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/transpiler/layout.py,"LayoutError(""Layout constructor takes a dict"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/transpiler/layout.py,"LayoutError(
    ""The map (%s -> %s) has to be a (Bit -> integer)""
    "" or the other way around."" % (type(value1), type(value2))
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/transpiler/layout.py,"KeyError(f""The item {item} does not exist in the Layout"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/transpiler/layout.py,"LayoutError(
    ""The key to remove should be of the form""
    "" Qubit or integer) and %s was provided"" % (type(key),)
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/transpiler/layout.py,"LayoutError(""The method swap only works with elements of the same type."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/transpiler/layout.py,"LayoutError(
    ""The wire_map_from_layouts() method does not support when the""
    "" other layout (another_layout) is smaller.""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/transpiler/layout.py,"LayoutError(""Expected a list of ints"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/transpiler/layout.py,"LayoutError(""Duplicate values not permitted; Layout is bijective."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/transpiler/layout.py,"LayoutError(
    f""Integer list length ({len(int_list)}) must equal number of qubits ""
    f""in circuit ({num_qubits}): {int_list}.""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/transpiler/layout.py,"LayoutError(""Duplicate values not permitted; Layout is bijective."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/transpiler/layout.py,"LayoutError(""The list should contain elements of the Bits or NoneTypes"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/transpiler/passmanager.py,"TranspilerError(f""Index to replace {index} does not exists"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/transpiler/passmanager.py,"TranspilerError(f""Index to replace {index} does not exists"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/transpiler/passmanager.py,"TypeError(
    f""unsupported operand type + for {self.__class__} and {other.__class__}""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/transpiler/passmanager.py,"TranspilerError(
    ""%s is not a BasePass or FlowController instance "" % pass_.__class__
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/transpiler/passmanager.py,ValueError(msg.getvalue())
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/transpiler/passmanager.py,"AttributeError(f""{stage} is not a valid stage."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/transpiler/passmanager.py,"TranspilerError(""Recursive definition of StagedPassManager disallowed."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/transpiler/passmanager.py,NotImplementedError
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/transpiler/passmanager.py,NotImplementedError
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/transpiler/passmanager.py,NotImplementedError
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/transpiler/passmanager.py,NotImplementedError
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/transpiler/passmanager.py,NotImplementedError
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/transpiler/target.py,"ValueError(
    ""The value of num_qubits specified does not match the ""
    ""length of the input qubit_properties list""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/transpiler/target.py,"TranspilerError(
    ""A name must be specified when defining a supported global operation by class""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/transpiler/target.py,"TranspilerError(
    ""An instruction added globally by class can't have properties set.""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/transpiler/target.py,"AttributeError(""Instruction %s is already in the target"" % instruction_name)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/transpiler/target.py,"TranspilerError(
    f""The number of qubits for {instruction} does not match the number ""
    f""of qubits in the properties dictionary: {qarg}""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/transpiler/target.py,"KeyError(f""Provided instruction: '{instruction}' not in this Target"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/transpiler/target.py,"KeyError(f""Provided qarg: '{qargs}' not in this Target for {instruction}"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/transpiler/target.py,"QiskitError(
    f""Schedules for {inst_name} are defined non-uniformly for ""
    f""multiple qubit lengths {qlen}, ""
    f""or different parameter names {param_names}. ""
    ""Provide these schedules with inst_name_map or define them with ""
    ""different names for different gate parameters.""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/transpiler/target.py,"KeyError(f""{qargs} not in target."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/transpiler/target.py,"KeyError(f""{qargs} not in target."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/transpiler/target.py,"KeyError(f""{qargs} not in target."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/transpiler/target.py,"KeyError(f""{qargs} not in target."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/transpiler/target.py,"KeyError(
    f""Calibration of instruction {operation_name} for qubit {qargs} is not defined.""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/transpiler/target.py,"ValueError(
    ""Specified two_q_gate: %s is not a 2 qubit instruction"" % two_q_gate
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/transpiler/target.py,"KeyError(
    f""The specified basis gate: {gate} is not present in the standard gate ""
    ""names or a provided custom_name_mapping""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/transpiler/target.py,"KeyError(
    f""The specified basis gate: {gate} is not present in the standard gate ""
    ""names or a provided custom_name_mapping""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/transpiler/target.py,"TranspilerError(
    f""The specified basis gate: {gate} has {gate_obj.num_qubits} ""
    ""qubits. This constructor method only supports fixed width operations ""
    ""with <= 2 qubits (because connectivity is defined on a CouplingMap).""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/transpiler/basepasses.py,NotImplementedError
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/transpiler/fencedobjs.py,"TranspilerError(
    ""The fenced %s has the property %s protected""
    % (type(object.__getattribute__(self, ""_wrapped"")), name)
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/transpiler/coupling.py,"CouplingError(""Physical qubits should be integers."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/transpiler/coupling.py,"CouplingError(
    ""The physical qubit %s is already in the coupling graph"" % physical_qubit
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/transpiler/coupling.py,"CouplingError(""%s not in coupling graph"" % physical_qubit1)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/transpiler/coupling.py,"CouplingError(""%s not in coupling graph"" % physical_qubit2)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/transpiler/coupling.py,"CouplingError(f""No path from {physical_qubit1} to {physical_qubit2}"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/transpiler/coupling.py,"CouplingError(
    f""Nodes {str(physical_qubit1)} and {str(physical_qubit2)} are not connected""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/transpiler/coupling.py,"CouplingError(""coupling_map must be connected."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/transpiler/runningpassmanager.py,"TranspilerError(""The flow controller parameter %s is not callable"" % name)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/transpiler/runningpassmanager.py,"TranspilerError(
    ""Expecting type BasePass or FlowController, got %s."" % type(pass_)
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/transpiler/runningpassmanager.py,"TranspilerError(
    ""Transformation passes should return a transformed dag.""
    ""The pass %s is returning a %s"" % (type(pass_).__name__, type(new_dag))
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/transpiler/runningpassmanager.py,"TranspilerError(""I dont know how to handle this type of pass"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/transpiler/runningpassmanager.py,"KeyError(""Flow controller not found: %s"" % name)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/transpiler/runningpassmanager.py,"TranspilerError(""The controller needs a condition."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/transpiler/runningpassmanager.py,"TranspilerError(""The controllers for %s are not registered"" % partial_controller)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/transpiler/runningpassmanager.py,"TranspilerError(""Maximum iteration reached. max_iteration=%i"" % self.max_iteration)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/transpiler/instruction_durations.py,"TranspilerError(
    ""Each entry of inst_durations dictionary must be ""
    ""(inst_name, qubits, duration) or ""
    ""(inst_name, qubits, duration, unit) or""
    ""(inst_name, qubits, duration, parameters) or""
    ""(inst_name, qubits, duration, parameters, unit) ""
    f""received {inst_durations[i]}.""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/transpiler/instruction_durations.py,"TranspilerError(f""None duration for {inst_durations[i]}."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/transpiler/instruction_durations.py,"TranspilerError(
    f""Duration of {inst_name} on qubits {qubits} is not found.""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/transpiler/instruction_durations.py,"TranspilerError(f""No value is found for key={key}"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/transpiler/instruction_durations.py,"TranspilerError(
    f""dt is necessary to convert durations from '{from_unit}' to '{to_unit}'""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/transpiler/instruction_durations.py,"TranspilerError(f""Conversion from '{from_unit}' to '{to_unit}' is not supported"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/transpiler/passes/basis/unroll_3q_or_more.py,"QiskitError(
    ""Cannot unroll all 3q or more gates. ""
    ""No rule to expand instruction %s."" % node.op.name
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/transpiler/passes/basis/unroll_custom_definitions.py,"QiskitError(f""Error decomposing node {node.name}: {err}"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/transpiler/passes/basis/unroll_custom_definitions.py,"QiskitError(
    ""Cannot unroll the circuit to the given basis, %s. ""
    ""Instruction %s not found in equivalence library ""
    ""and no rule found to expand."" % (str(self._basis_gates), node.op.name)
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/transpiler/passes/basis/basis_translator.py,"TranspilerError(
    ""Unable to translate the operations in the circuit: ""
    f""{[x[0] for x in local_source_basis]} to the backend's (or manually ""
    f""specified) target basis: {list(expanded_target)}. This likely means the ""
    ""target basis is not universal or there are additional equivalence rules ""
    ""needed in the EquivalenceLibrary being used. For more details on this ""
    ""error see: ""
    ""https://qiskit.org/documentation/stubs/qiskit.transpiler.passes.""
    ""BasisTranslator.html#translation_errors""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/transpiler/passes/basis/basis_translator.py,"TranspilerError(
    ""Unable to translate the operations in the circuit: ""
    f""{[x[0] for x in source_basis]} to the backend's (or manually specified) target ""
    f""basis: {list(target_basis)}. This likely means the target basis is not universal ""
    ""or there are additional equivalence rules needed in the EquivalenceLibrary being ""
    ""used. For more details on this error see: ""
    ""https://qiskit.org/documentation/stubs/qiskit.transpiler.passes.BasisTranslator.""
    ""html#translation_errors""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/transpiler/passes/basis/basis_translator.py,"TranspilerError(f""BasisTranslator did not map {node.name}."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/transpiler/passes/basis/basis_translator.py,"TranspilerError(
    ""Translation num_params not equal to op num_params.""
    ""Op: {} {} Translation: {}\n{}"".format(
        node.op.params, node.op.name, target_params, target_dag
    )
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/transpiler/passes/basis/basis_translator.py,StopIfBasisRewritable
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/transpiler/passes/basis/basis_translator.py,rustworkx.visit.PruneSearch
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/transpiler/passes/basis/unroller.py,"QiskitError(
    f""Error decomposing node of instruction '{node.name}': {err}. ""
    f""Unable to define instruction '{node.name}' in the given basis.""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/transpiler/passes/basis/unroller.py,"QiskitError(
    f""Error decomposing node of instruction '{node.name}': {err}. ""
    f""Unable to define instruction '{rule[0].operation.name}' in the basis.""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/transpiler/passes/basis/unroller.py,"QiskitError(
    ""Cannot unroll the circuit to the given basis, %s. ""
    ""No rule to expand instruction %s."" % (str(self.basis), node.op.name)
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/transpiler/passes/basis/translate_parameterized.py,"ValueError(""One of ``supported_gates`` or ``target`` must be specified."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/transpiler/passes/basis/translate_parameterized.py,"QiskitError(""Failed to translate final block."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/transpiler/passes/optimization/commutative_cancellation.py,"TranspilerError(""internal error"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/transpiler/passes/optimization/optimize_1q_gates.py,"TranspilerError(""internal error"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/transpiler/passes/optimization/optimize_1q_gates.py,"TranspilerError(""It was not possible to use the basis %s"" % self.basis)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/transpiler/passes/optimization/optimize_1q_gates.py,"TranspilerError(""YZY and ZYZ angles do not give same rotation matrix."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/transpiler/passes/optimization/echo_rzx_weyl_decomposition.py,"TranspilerError(
    ""EchoRZXWeylDecomposition expects a single qreg input DAG,""
    f""but input DAG had qregs: {dag.qregs}.""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/transpiler/passes/optimization/inverse_cancellation.py,"TranspilerError(f""Gate {gates.name} is not self-inverse"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/transpiler/passes/optimization/inverse_cancellation.py,"TranspilerError(
    f""Too many or too few inputs: {gates}. Only two are allowed.""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/transpiler/passes/optimization/inverse_cancellation.py,"TranspilerError(
    f""Gate {gates[0].name} and {gates[1].name} are not inverse.""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/transpiler/passes/optimization/inverse_cancellation.py,"TranspilerError(
    ""InverseCancellation pass does not take input type {}. Input must be""
    "" a Gate."".format(type(gates))
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/transpiler/passes/optimization/template_optimization.py,"TranspilerError(""A template is a Quantumciruit or a DAGDependency."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/transpiler/passes/optimization/template_optimization.py,"TranspilerError(
    ""A template is a Quantumciruit() that performs the identity.""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/transpiler/passes/synthesis/unitary_synthesis.py,KeyError
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/transpiler/passes/synthesis/unitary_synthesis.py,"TranspilerError(
    f""Encountered a bad synthesis. ""
    f""Target has no {inst.operation} on qubits {qubits}.""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/transpiler/passes/synthesis/unitary_synthesis.py,"TranspilerError(
    f""No preferred direction of gate on qubits {qubits} ""
    ""could be determined from coupling map or ""
    ""gate lengths / gate errors.""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/transpiler/passes/synthesis/unitary_synthesis.py,"TranspilerError(""Specified method: %s not found in plugin list"" % self.method)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/transpiler/passes/synthesis/unitary_synthesis.py,"TranspilerError(
    f""Target has no gates available on qubits {qubits} to synthesize over.""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/transpiler/passes/synthesis/solovay_kitaev_synthesis.py,"TranspilerError(
    f""SolovayKitaev does not support gate without to_matrix method: {node.op.name}""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/transpiler/passes/synthesis/high_level_synthesis.py,"TranspilerError(
    ""Specified method: %s not found in available plugins for %s""
    % (plugin_specifier, node.name)
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/transpiler/passes/utils/gate_direction.py,"TranspilerError(
    f""The circuit requires a connection between physical qubits {qargs}""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/transpiler/passes/utils/gate_direction.py,"TranspilerError(
    f""'{node.name}' would be supported on '{qargs}' if the direction were""
    f"" swapped, but no rules are known to do that.""
    f"" {list(self._KNOWN_REPLACEMENTS)} can be automatically flipped.""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/transpiler/passes/utils/gate_direction.py,"TranspilerError(
    f""The circuit requires a connection between physical qubits {qargs}""
    f"" for {node.name}""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/transpiler/passes/utils/gate_direction.py,"TranspilerError(
    f""The circuit requires a connection between physical qubits {qargs}""
    f"" for {node.name}""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/transpiler/passes/utils/gate_direction.py,"TranspilerError(
    f""The circuit requires a connection between physical qubits {qargs}""
    f"" for {node.name}""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/transpiler/passes/utils/gate_direction.py,"TranspilerError(
    f""The circuit requires a connection between physical qubits {qargs}""
    f"" for {node.name}""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/transpiler/passes/utils/gate_direction.py,"TranspilerError(
    f""The circuit requires a connection between physical qubits {qargs}""
    f"" for {node.name}""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/transpiler/passes/utils/gate_direction.py,"TranspilerError(
    f""'{node.name}' would be supported on '{qargs}' if the direction were""
    f"" swapped, but no rules are known to do that.""
    f"" {list(self._KNOWN_REPLACEMENTS)} can be automatically flipped.""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/transpiler/passes/utils/gate_direction.py,"TranspilerError(
    f""'{node.name}' with parameters '{node.op.params}' is not supported on qubits""
    f"" '{qargs}' in either direction.""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/transpiler/passes/utils/gate_direction.py,"TranspilerError(
    ""GateDirection expects a single qreg input DAG,""
    ""but input DAG had qregs: {}."".format(dag.qregs)
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/transpiler/passes/utils/error.py,"TranspilerError(""Unknown action: %s"" % action)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/transpiler/passes/utils/error.py,TranspilerError(msg)
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/transpiler/passes/utils/error.py,"TranspilerError(""Unknown action: %s"" % self.action)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/transpiler/passes/layout/disjoint_utils.py,"TranspilerError(
    ""A connected component of the DAGCircuit is too large for any of the connected ""
    ""components in the coupling map.""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/transpiler/passes/layout/disjoint_utils.py,"TranspilerError(
    ""A connected component of the DAGCircuit is too large for any of the connected ""
    ""components in the coupling map.""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/transpiler/passes/layout/disjoint_utils.py,"TranspilerError(""Chosen layout is not valid for the target disjoint connectivity"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/transpiler/passes/layout/vf2_layout.py,"TranspilerError(""coupling_map or target must be specified."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/transpiler/passes/layout/dense_layout.py,"TranspilerError(
    ""A coupling_map or target with constrained qargs is necessary to run the pass.""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/transpiler/passes/layout/dense_layout.py,"TranspilerError(""Number of qubits greater than device."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/transpiler/passes/layout/vf2_utils.py,MultiQEncountered()
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/transpiler/passes/layout/full_ancilla_allocation.py,"TranspilerError('FullAncillaAllocation pass requires property_set[""layout""].')"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/transpiler/passes/layout/full_ancilla_allocation.py,"TranspilerError(
    ""FullAncillaAllocation: The layout refers to a qubit ""
    ""that does not exist in circuit.""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/transpiler/passes/layout/sabre_layout.py,"TranspilerError(""Both routing_pass and swap_trials can't be set at the same time"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/transpiler/passes/layout/sabre_layout.py,"TranspilerError(""More virtual qubits exist than physical."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/transpiler/passes/layout/sabre_layout.py,"TranspilerError(
    ""The routing_pass argument cannot be used with disjoint coupling maps.""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/transpiler/passes/layout/csp_layout.py,"TranspilerError(
    ""Coupling Map is disjoint, this pass can't be used with a disconnected coupling ""
    ""map.""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/transpiler/passes/layout/enlarge_with_ancilla.py,"TranspilerError('EnlargeWithAncilla requires property_set[""layout""]')"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/transpiler/passes/layout/apply_layout.py,"TranspilerError(
    ""No 'layout' is found in property_set. Please run a Layout pass in advance.""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/transpiler/passes/layout/apply_layout.py,"TranspilerError(""The 'layout' must be full (with ancilla)."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/transpiler/passes/layout/noise_adaptive_layout.py,"TranspilerError(""Number of qubits greater than device."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/transpiler/passes/layout/noise_adaptive_layout.py,"TranspilerError(
    ""CNOT({}, {}) could not be placed ""
    ""in selected device."".format(edge[0], edge[1])
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/transpiler/passes/layout/noise_adaptive_layout.py,"TranspilerError(
    ""CNOT({}, {}) could not be placed in selected device. ""
    ""No qubit near qr[{}] available"".format(edge[0], edge[1], edge[0])
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/transpiler/passes/layout/noise_adaptive_layout.py,"TranspilerError(
    ""CNOT({}, {}) could not be placed in selected device. ""
    ""No qubit near qr[{}] available"".format(edge[0], edge[1], edge[1])
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/transpiler/passes/layout/vf2_post_layout.py,"TranspilerError(
    ""A target must be specified or a coupling map and properties must be provided""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/transpiler/passes/layout/trivial_layout.py,"TranspilerError(""Number of qubits greater than device."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/transpiler/passes/layout/trivial_layout.py,"TranspilerError(""Number of qubits greater than device."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/transpiler/passes/calibration/pulse_gate.py,"TranspilerError(""inst_map and target cannot be None simulataneously."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/transpiler/passes/calibration/rzx_builder.py,"QiskitError(""Calibrations can only be added to Pulse-enabled backends"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/transpiler/passes/calibration/rzx_builder.py,"QiskitError(""Target rotation angle is not assigned."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/transpiler/passes/calibration/rzx_builder.py,"QiskitError(""Target rotation angle is not assigned."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/transpiler/passes/calibration/rzx_builder.py,CalibrationNotAvailable
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/transpiler/passes/calibration/rzx_builder.py,"QiskitError(""Target rotation angle is not assigned."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/transpiler/passes/calibration/rzx_builder.py,CalibrationNotAvailable
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/transpiler/passes/calibration/rzx_builder.py,"QiskitError(""RZXCalibrationBuilderNoEcho only supports hardware-native RZX gates."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/transpiler/passes/calibration/rzx_builder.py,"QiskitError(
    f""Native direction cannot be determined: operation on qubits {qubits} ""
    f""for the following instruction schedule map:\n{inst_sched_map}""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/transpiler/passes/calibration/rzx_builder.py,"QiskitError(
    f""{repr(cr_sched)} has no target compensation tones. ""
    ""Native ECR direction cannot be determined.""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/transpiler/passes/calibration/rzx_builder.py,"QiskitError(
    f""{repr(cr_sched)} is undefined pulse sequence. ""
    ""Check if this is a calibration for cross resonance operation.""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/transpiler/passes/scheduling/alap.py,"TranspilerError(""ALAP schedule runs on physical circuits only"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/transpiler/passes/scheduling/alap.py,"TranspilerError(
    f""Conditional instruction {node.op.name} is not supported in ALAP scheduler.""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/transpiler/passes/scheduling/time_unit_conversion.py,"TranspilerError(
    ""Fail to unify time units in delays. SI units ""
    ""and dt unit must not be mixed when dt is not supplied.""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/transpiler/passes/scheduling/time_unit_conversion.py,"TranspilerError(
    ""Fail to unify time units in instruction_durations. SI units ""
    ""and dt unit must not be mixed when dt is not supplied.""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/transpiler/passes/scheduling/time_unit_conversion.py,"TranspilerError(
    ""Fail to unify time units. SI units ""
    ""and dt unit must not be mixed when dt is not supplied.""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/transpiler/passes/scheduling/asap.py,"TranspilerError(""ASAP schedule runs on physical circuits only"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/transpiler/passes/scheduling/asap.py,"TranspilerError(
    f""Conditional instruction {node.op.name} is not supported in ASAP scheduler.""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/transpiler/passes/scheduling/dynamical_decoupling.py,"TranspilerError(
    f""{gate.name} in dd_sequence is not supported in the target""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/transpiler/passes/scheduling/dynamical_decoupling.py,"TranspilerError(""DD runs on physical circuits only."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/transpiler/passes/scheduling/dynamical_decoupling.py,"TranspilerError(""DD runs after circuit is scheduled."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/transpiler/passes/scheduling/dynamical_decoupling.py,"TranspilerError(""DD sequence must contain an even number of gates (or 1)."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/transpiler/passes/scheduling/dynamical_decoupling.py,"TranspilerError(""The DD sequence does not make an identity operation."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/transpiler/passes/scheduling/dynamical_decoupling.py,"TranspilerError(
    ""The spacings must be given in terms of fractions ""
    ""of the slack period and sum to 1.""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/transpiler/passes/scheduling/base_scheduler.py,"TranspilerError(
    f""Parameterized duration ({duration}) ""
    f""of {node.op.name} on qubits {indices} is not bounded.""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/transpiler/passes/scheduling/base_scheduler.py,"TranspilerError(f""Duration of {node.op.name} on qubits {indices} is not found."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/transpiler/passes/scheduling/base_scheduler.py,NotImplementedError
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/transpiler/passes/scheduling/alignments/reschedule.py,"TranspilerError(f""Unknown operation type for {repr(node)}."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/transpiler/passes/scheduling/alignments/reschedule.py,"TranspilerError(
    f""The input circuit {dag.name} is not scheduled. Call one of scheduling passes ""
    f""before running the {self.__class__.__name__} pass.""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/transpiler/passes/scheduling/alignments/reschedule.py,"TranspilerError(
    f""Start time of {repr(node)} is not found. This node is likely added after ""
    ""this circuit is scheduled. Run scheduler again.""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/transpiler/passes/scheduling/alignments/pulse_gate_validation.py,"TranspilerError(
    f""Pulse duration is not multiple of {self.granularity}. ""
    ""This pulse cannot be played on the specified backend. ""
    f""Please modify the duration of the custom gate pulse {pulse.name} ""
    f""which is associated with the gate {gate} of ""
    f""qubit {qubit_param_pair[0]}.""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/transpiler/passes/scheduling/alignments/pulse_gate_validation.py,"TranspilerError(
    f""Pulse gate duration is less than {self.min_length}. ""
    ""This pulse cannot be played on the specified backend. ""
    f""Please modify the duration of the custom gate pulse {pulse.name} ""
    f""which is associated with the gate {gate} of ""
    ""qubit {qubit_param_pair[0]}.""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/transpiler/passes/scheduling/alignments/align_measures.py,"TranspilerError(
    f""This circuit {dag.name} may involve a delay instruction violating the ""
    ""pulse controller alignment. To adjust instructions to ""
    ""right timing, you should call one of scheduling passes first. ""
    ""This is usually done by calling transpiler with scheduling_method='alap'.""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/transpiler/passes/scheduling/scheduling/alap.py,"TranspilerError(""ALAP schedule runs on physical circuits only"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/transpiler/passes/scheduling/scheduling/alap.py,"TranspilerError(
    f""Conditional instruction {node.op.name} is not supported in ALAP scheduler.""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/transpiler/passes/scheduling/scheduling/asap.py,"TranspilerError(""ASAP schedule runs on physical circuits only"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/transpiler/passes/scheduling/scheduling/asap.py,"TranspilerError(
    f""Conditional instruction {node.op.name} is not supported in ASAP scheduler.""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/transpiler/passes/scheduling/scheduling/base_scheduler.py,"TranspilerError(
    f""Parameterized duration ({duration}) ""
    f""of {node.op.name} on qubits {indices} is not bounded.""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/transpiler/passes/scheduling/scheduling/base_scheduler.py,"TranspilerError(f""Duration of {node.op.name} on qubits {indices} is not found."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/transpiler/passes/scheduling/scheduling/base_scheduler.py,NotImplementedError
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/transpiler/passes/scheduling/padding/dynamical_decoupling.py,"TypeError(""required argument 'dd_sequence' is not specified"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/transpiler/passes/scheduling/padding/dynamical_decoupling.py,"TranspilerError(
    f""{gate.name} in dd_sequence is not supported in the target""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/transpiler/passes/scheduling/padding/dynamical_decoupling.py,"TranspilerError(""DD runs on physical circuits only."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/transpiler/passes/scheduling/padding/dynamical_decoupling.py,"TranspilerError(
    ""The spacings must be given in terms of fractions ""
    ""of the slack period and sum to 1.""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/transpiler/passes/scheduling/padding/dynamical_decoupling.py,"TranspilerError(""DD sequence must contain an even number of gates (or 1)."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/transpiler/passes/scheduling/padding/dynamical_decoupling.py,"TranspilerError(""The DD sequence does not make an identity operation."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/transpiler/passes/scheduling/padding/dynamical_decoupling.py,"TranspilerError(
    f""Pulse gate {gate.name} with length non-multiple of {self._alignment} ""
    f""is not acceptable in {self.__class__.__name__} pass.""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/transpiler/passes/scheduling/padding/dynamical_decoupling.py,"TranspilerError(
    f""Time interval {time_interval} is not divisible by alignment {self._alignment} ""
    f""between DAGNode {prev_node.name} on qargs {prev_node.qargs} and {next_node.name} ""
    f""on qargs {next_node.qargs}.""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/transpiler/passes/scheduling/padding/dynamical_decoupling.py,"TranspilerError(
    f""Option extra_slack_distribution = {self._extra_slack_distribution} is invalid.""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/transpiler/passes/scheduling/padding/base_padding.py,"TranspilerError(
    f""Operation {repr(node)} is likely added after the circuit is scheduled. ""
    ""Schedule the circuit again if you transformed it.""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/transpiler/passes/scheduling/padding/base_padding.py,"TranspilerError(
    f""The input circuit {dag.name} is not scheduled. Call one of scheduling passes ""
    f""before running the {self.__class__.__name__} pass.""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/transpiler/passes/scheduling/padding/base_padding.py,NotImplementedError
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/transpiler/passes/routing/stochastic_swap.py,"TranspilerError(""StochasticSwap cannot run with coupling_map=None"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/transpiler/passes/routing/stochastic_swap.py,"TranspilerError(""StochasticSwap runs on physical circuits only"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/transpiler/passes/routing/stochastic_swap.py,"TranspilerError(""The layout does not match the amount of qubits in the DAG"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/transpiler/passes/routing/stochastic_swap.py,"TranspilerError(""Layer contains > 2-qubit gates"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/transpiler/passes/routing/stochastic_swap.py,"TranspilerError(
    ""swap mapper failed: "" + ""layer %d, sublayer %d"" % (i, j)
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/transpiler/passes/routing/stochastic_swap.py,"TranspilerError(f""unsupported control flow operation: {node}"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/transpiler/passes/routing/lookahead_swap.py,"TranspilerError(""LookaheadSwap cannot run with coupling_map=None"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/transpiler/passes/routing/lookahead_swap.py,"TranspilerError(""Lookahead swap runs on physical circuits only"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/transpiler/passes/routing/lookahead_swap.py,"TranspilerError(
    f""The number of DAG qubits ({len(dag.qubits)}) is greater than the number of ""
    f""available device qubits ({number_of_available_qubits}).""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/transpiler/passes/routing/lookahead_swap.py,"TranspilerError(
    ""Lookahead failed to find a swap which mapped gates or improved layout score.""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/transpiler/passes/routing/basic_swap.py,"TranspilerError(""BasicSwap cannot run with coupling_map=None"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/transpiler/passes/routing/basic_swap.py,"TranspilerError(""Basic swap runs on physical circuits only"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/transpiler/passes/routing/basic_swap.py,"TranspilerError(""The layout does not match the amount of qubits in the DAG"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/transpiler/passes/routing/basic_swap.py,"TranspilerError(""Basic swap runs on physical circuits only"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/transpiler/passes/routing/basic_swap.py,"TranspilerError(""The layout does not match the amount of qubits in the DAG"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/transpiler/passes/routing/sabre_swap.py,"TranspilerError(""SabreSwap cannot run with coupling_map=None"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/transpiler/passes/routing/sabre_swap.py,"TranspilerError(""Sabre swap runs on physical circuits only."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/transpiler/passes/routing/sabre_swap.py,"TranspilerError(
    f""Fewer qubits in the circuit ({num_dag_qubits}) than the coupling map""
    f"" ({num_coupling_qubits}).""
    "" Have you run a layout pass and then expanded your DAG with ancillas?""
    "" See `FullAncillaAllocation`, `EnlargeWithAncilla` and `ApplyLayout`.""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/transpiler/passes/routing/sabre_swap.py,"TranspilerError(
    f""More qubits in the circuit ({num_dag_qubits}) than available in the coupling map""
    f"" ({num_coupling_qubits}).""
    "" This circuit cannot be routed to this device.""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/transpiler/passes/routing/sabre_swap.py,"TranspilerError(""Heuristic %s not recognized."" % self.heuristic)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/transpiler/passes/routing/layout_transformation.py,"TranspilerError(""LayoutTransform runs on physical circuits only"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/transpiler/passes/routing/layout_transformation.py,"TranspilerError(""The layout does not match the amount of qubits in the DAG"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/transpiler/passes/routing/layout_transformation.py,"TranspilerError(f""No {from_layout} (from_layout) in property_set."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/transpiler/passes/routing/layout_transformation.py,"TranspilerError(f""No {to_layout} (to_layout) in property_set."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/transpiler/passes/routing/bip_mapping.py,"TranspilerError(""More virtual qubits exist than physical qubits."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/transpiler/passes/routing/bip_mapping.py,"TranspilerError(
    ""BIPMapping requires the number of virtual and physical qubits to be the same. ""
    ""Supply 'qubit_subset' to specify physical qubits to use.""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/transpiler/passes/routing/bip_mapping.py,"AssertionError(
    f""Bug: final layout {final_layout} != the layout computed from swaps {layout}""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/transpiler/passes/routing/utils.py,"TranspilerError(""layout transformation runs on physical circuits only"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/transpiler/passes/routing/utils.py,"TranspilerError(""The layout does not match the amount of qubits in the DAG"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/transpiler/passes/routing/commuting_2q_gate_routing/commuting_2q_gate_router.py,"TranspilerError(""No swap strategy given at init or in the property set."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/transpiler/passes/routing/commuting_2q_gate_routing/commuting_2q_gate_router.py,"TranspilerError(
    f""{self.__class__.__name__} runs on circuits with one quantum register.""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/transpiler/passes/routing/commuting_2q_gate_routing/commuting_2q_gate_router.py,"TranspilerError(""Circuit has qubits not contained in the qubit register."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/transpiler/passes/routing/commuting_2q_gate_routing/commuting_2q_gate_router.py,"TranspilerError(
    f""{swap_strategy} cannot implement all edges in {required_edges}.""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/transpiler/passes/routing/commuting_2q_gate_routing/commuting_2q_block.py,"QiskitError(f""Node {node.name} does not apply to two-qubits."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/transpiler/passes/routing/commuting_2q_gate_routing/commuting_2q_block.py,"QiskitError(
    f""{self.__class__.__name__} does not accept nodes with classical bits.""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/transpiler/passes/routing/commuting_2q_gate_routing/swap_strategy.py,"QiskitError(
    f""The {i}th swap layer contains the edge {edge} which is not ""
    f""part of the underlying coupling map with {edge_set} edges.""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/transpiler/passes/routing/commuting_2q_gate_routing/swap_strategy.py,"QiskitError(f""The {i}th swap layer contains a qubit with multiple swaps."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/transpiler/passes/routing/commuting_2q_gate_routing/swap_strategy.py,"ValueError(f""The line cannot have less than two elements, but is {line}"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/transpiler/passes/routing/commuting_2q_gate_routing/swap_strategy.py,"ValueError(f""Negative number {num_swap_layers} passed for number of swap layers."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/transpiler/passes/routing/commuting_2q_gate_routing/pauli_2q_evolution_commutation.py,"QiskitError(f""{pauli} does not have length two."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/transpiler/passes/routing/algorithms/token_swapper.py,"RuntimeError(""Too many iterations while approximating the Token Swaps."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/transpiler/passes/routing/algorithms/bip_model.py,"TranspilerError(
    ""The 'coupling_map' reduced by 'qubit_subset' must be connected.""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/transpiler/passes/routing/algorithms/bip_model.py,"TranspilerError(
    ""BIPMappingModel assumes the same size of virtual and physical qubits.""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/transpiler/passes/routing/algorithms/bip_model.py,"TranspilerError(""BackendProperties or default_cx_error_rate must be specified"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/transpiler/passes/routing/algorithms/bip_model.py,"TranspilerError(f""Unknown objective type: {objective}"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/transpiler/synthesis/aqc/cnot_structures.py,"ValueError(""Number of qubits must be greater or equal to 2"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/transpiler/synthesis/aqc/cnot_structures.py,"ValueError(f""'{network_layout}' layout expects 'full' connectivity"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/transpiler/synthesis/aqc/cnot_structures.py,"ValueError(f""'{network_layout}' layout expects 'line' connectivity"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/transpiler/synthesis/aqc/cnot_structures.py,"ValueError(
    f""Unknown type of CNOT-network layout, expects one of {_NETWORK_LAYOUTS}, ""
    f""got {network_layout}""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/transpiler/synthesis/aqc/cnot_structures.py,"ValueError(
    f""Unknown connectivity type, expects one of {_CONNECTIVITY_TYPES}, got {connectivity}""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/transpiler/synthesis/aqc/cnot_structures.py,"ValueError(f""The number of qubits must be >= 3, got {n}."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/transpiler/synthesis/aqc/approximate.py,NotImplementedError
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/transpiler/synthesis/aqc/approximate.py,NotImplementedError
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/transpiler/synthesis/aqc/approximate.py,NotImplementedError
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/transpiler/synthesis/aqc/approximate.py,NotImplementedError
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/transpiler/synthesis/aqc/approximate.py,NotImplementedError
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/transpiler/synthesis/aqc/cnot_unit_circuit.py,"ValueError(""CNOT structure must be defined as an array of the size (2, N)"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/transpiler/synthesis/aqc/fast_gradient/fast_gradient.py,"ValueError(""expects number of qubits in the range [2..16]"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/transpiler/synthesis/aqc/fast_gradient/layer.py,NotImplementedError()
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/transpiler/synthesis/aqc/fast_gradient/layer.py,NotImplementedError()
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/transpiler/preset_passmanagers/builtin_plugins.py,"TranspilerError(f""Invalid optimization level specified: {optimization_level}"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/transpiler/preset_passmanagers/builtin_plugins.py,"TranspilerError(f""Invalid optimization level specified: {optimization_level}"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/transpiler/preset_passmanagers/builtin_plugins.py,"TranspilerError(f""Invalid optimization level specified: {optimization_level}"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/transpiler/preset_passmanagers/builtin_plugins.py,"TranspilerError(f""Invalid optimization level specified: {optimization_level}"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/transpiler/preset_passmanagers/plugin.py,"TranspilerError(f""Invalid stage name: {stage_name}"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/transpiler/preset_passmanagers/plugin.py,"TranspilerError(f""Invalid plugin name {plugin_name} for stage {stage_name}"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/transpiler/preset_passmanagers/plugin.py,"TranspilerError(f""Invalid stage name: {stage_name}"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/transpiler/preset_passmanagers/plugin.py,"TranspilerError(f""Passmanager stage {stage} not found"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/transpiler/preset_passmanagers/__init__.py,"ValueError(f""Invalid optimization level {optimization_level}"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/transpiler/preset_passmanagers/common.py,"TranspilerError(""Invalid translation method %s."" % method)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/transpiler/preset_passmanagers/common.py,"TranspilerError(""Invalid scheduling method %s."" % scheduling_method)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/compiler/transpiler.py,"TranspilerError(
    f""Number of qubits ({num_qubits}) in {circuit.name} ""
    f""is greater than maximum ({max_qubits}) in the coupling_map""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/compiler/transpiler.py,"TranspilerError(""optimization_level can range from 0 to 3."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/compiler/transpiler.py,"TranspilerError(
    ""Transpiling a circuit with a scheduling method""
    ""requires a backend or instruction_durations.""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/compiler/transpiler.py,"TranspilerError(
    f""'initial_layout' ({len(mapping)}) and circuit ({circuit.num_qubits}) had""
    "" different numbers of qubits""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/compiler/transpiler.py,"TranspilerError(
    f""'initial_layout' ({len(specifier)}) and circuit ({circuit.num_qubits}) had""
    "" different numbers of qubits""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/compiler/transpiler.py,"TranspilerError(f""'initial_layout' contained duplicate entries: {specifier}"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/compiler/transpiler.py,"TranspilerError(""Approximation degree must be in [0.0, 1.0]"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/compiler/transpiler.py,"TranspilerError(""Approximation degree must be in [0.0, 1.0]"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/compiler/transpiler.py,"TranspilerError(
    ""Expected a list object of length equal ""
    + ""to that of the number of circuits ""
    + ""being transpiled""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/compiler/transpiler.py,"TranspilerError(
    ""The length of output_name list ""
    ""must be equal to the number of ""
    ""transpiled circuits and the output_name ""
    ""list should be strings.""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/compiler/transpiler.py,"TranspilerError(
    ""The parameter output_name should be a string or a""
    ""list of strings: %s was used."" % type(output_name)
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/compiler/assembler.py,"QiskitError(""bad input to assemble() function; must be either circuits or schedules"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/compiler/assembler.py,"QiskitError(f""memory not supported by backend {backend_config.backend_name}"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/compiler/assembler.py,"QiskitError(""Argument 'shots' should be of type 'int'"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/compiler/assembler.py,"QiskitError(
    ""Number of shots specified: %s exceeds max_shots property of the ""
    ""backend: %s."" % (shots, max_shots)
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/compiler/assembler.py,"QiskitError(f""Each element of {lo_type} LO range must be a 2d list."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/compiler/assembler.py,"QiskitError(
    ""Qubit {} {} LO frequency is {}. The range is [{}, {}]."".format(
        i, lo_type, freq, freq_range[0], freq_range[1]
    )
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/compiler/assembler.py,"QiskitError(
    (""meas_level = {} not supported for backend {}, only {} is supported"").format(
        meas_level, backend_config.backend_name, backend_config.meas_levels
    )
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/compiler/assembler.py,"QiskitError(
    ""Backend rep_delay_range {} must be a list with two entries."".format(
        rep_delay_range
    )
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/compiler/assembler.py,"QiskitError(
    ""Supplied rep delay {} not in the supported ""
    ""backend range {}"".format(rep_delay, rep_delay_range)
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/compiler/assembler.py,"QiskitError(
    (
        ""Mismatch between run_config.parameter_binds and all circuit parameters. ""
        + ""Parameter binds: {} ""
        + ""Circuit parameters: {}""
    ).format(all_bind_parameters, all_circuit_parameters)
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/compiler/sequencer.py,"QiskitError(""Must supply either a backend or inst_map for sequencing."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/compiler/sequencer.py,"QiskitError(""Must supply either a backend or a meas_map for sequencing."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/compiler/sequencer.py,"QiskitError(""Must supply either a backend or a dt for sequencing."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/compiler/scheduler.py,"QiskitError(
    ""Must supply either a backend or InstructionScheduleMap for scheduling passes.""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/compiler/scheduler.py,"QiskitError(
    ""The backend defaults are unavailable. The backend may not support pulse.""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/compiler/scheduler.py,"QiskitError(
    ""Must supply either a backend or a meas_map for scheduling passes.""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/qpy/type_keys.py,"exceptions.QpyError(
    f""Object type '{type(obj)}' is not supported in {cls.__name__} namespace.""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/qpy/type_keys.py,NotImplementedError
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/qpy/type_keys.py,"exceptions.QpyError(
    f""Object type '{type(obj)}' is not supported in {cls.__name__} namespace.""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/qpy/type_keys.py,NotImplementedError
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/qpy/type_keys.py,"exceptions.QpyError(
    f""Object type '{type(obj)}' is not supported in {cls.__name__} namespace.""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/qpy/type_keys.py,NotImplementedError
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/qpy/type_keys.py,"exceptions.QpyError(
    f""Object type '{type(obj)}' is not supported in {cls.__name__} namespace.""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/qpy/type_keys.py,"exceptions.QpyError(
    f""A class corresponding to type key '{type_key}' is not found in {cls.__name__} namespace.""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/qpy/type_keys.py,"exceptions.QpyError(
    f""Object type '{type(obj)}' is not supported in {cls.__name__} namespace.""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/qpy/type_keys.py,"exceptions.QpyError(
    f""A class corresponding to type key '{type_key}' is not found in {cls.__name__} namespace.""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/qpy/type_keys.py,"exceptions.QpyError(
    f""Object type '{type(obj)}' is not supported in {cls.__name__} namespace.""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/qpy/type_keys.py,NotImplementedError
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/qpy/type_keys.py,"exceptions.QpyError(
    f""Object type '{type(obj)}' is not supported in {cls.__name__} namespace.""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/qpy/type_keys.py,"exceptions.QpyError(
    f""A class corresponding to type key '{type_key}' is not found in {cls.__name__} namespace.""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/qpy/type_keys.py,"exceptions.QpyError(
    f""Object type '{type(obj)}' is not supported in {cls.__name__} namespace.""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/qpy/type_keys.py,NotImplementedError
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/qpy/interface.py,"QpyError(
    ""Input programs contain multiple data types. ""
    ""Different data type must be serialized separately.""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/qpy/interface.py,"TypeError(f""'{program_type}' is not supported data type."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/qpy/interface.py,"QiskitError(""Input file is not a valid QPY file"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/qpy/interface.py,"TypeError(f""Invalid payload format data kind '{type_key}'."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/qpy/binary_io/circuits.py,"TypeError(""Invalid input carg prior to all qargs"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/qpy/binary_io/circuits.py,"TypeError(""Invalid input qarg after all qargs"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/qpy/binary_io/circuits.py,"AttributeError(""Invalid instruction type: %s"" % gate_name)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/qpy/binary_io/circuits.py,"ValueError(""Invalid custom instruction type '%s'"" % type_str)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/qpy/binary_io/circuits.py,"ValueError(
    ""Can't have a standalone operator with {pauli_evolution_raw[0]} operators in the payload""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/qpy/binary_io/schedules.py,"NotImplementedError(f""Unknown class '{class_name}'"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/qpy/binary_io/schedules.py,"NotImplementedError(f""Unknown class '{class_name}'"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/qpy/binary_io/schedules.py,"QpyError(
    f""Loaded schedule reference item is neither None nor ScheduleBlock. ""
    f""Type key {type_key} is not valid data type for a reference items. ""
    ""This data cannot be loaded. Please check QPY version.""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/qpy/binary_io/value.py,"exceptions.QpyError(""Invalid parameter expression map type: %s"" % elem_key)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/qpy/binary_io/value.py,"exceptions.QpyError(""Invalid parameter expression map type: %s"" % symbol_key)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/qpy/binary_io/value.py,"exceptions.QpyError(""Invalid parameter expression map type: %s"" % elem_key)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/qpy/binary_io/value.py,"exceptions.QpyError(f""Serialization for {type_key} is not implemented in value I/O."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/qpy/binary_io/value.py,"exceptions.QpyError(f""Serialization for {type_key} is not implemented in value I/O."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/opflow/operator_base.py,NotImplementedError
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/opflow/operator_base.py,NotImplementedError
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/opflow/operator_base.py,NotImplementedError
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/opflow/operator_base.py,NotImplementedError
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/opflow/operator_base.py,NotImplementedError
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/opflow/operator_base.py,NotImplementedError
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/opflow/operator_base.py,NotImplementedError
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/opflow/operator_base.py,NotImplementedError
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/opflow/operator_base.py,NotImplementedError
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/opflow/operator_base.py,NotImplementedError
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/opflow/operator_base.py,NotImplementedError
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/opflow/operator_base.py,NotImplementedError
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/opflow/operator_base.py,NotImplementedError
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/opflow/operator_base.py,NotImplementedError
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/opflow/operator_base.py,NotImplementedError
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/opflow/operator_base.py,NotImplementedError
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/opflow/operator_base.py,NotImplementedError
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/opflow/operator_base.py,NotImplementedError
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/opflow/operator_base.py,"ValueError(
    ""ParameterVector {} has length {}, which differs from value list {} of ""
    ""len {}"".format(param, len(param), value, len(value))
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/opflow/operator_base.py,"OpflowError(""Parameter binding lists must all be the same length."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/opflow/operator_base.py,NotImplementedError
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/opflow/operator_base.py,"ValueError(
    f""'{method}' will return an exponentially large {obj_type}, ""
    f""in this case '{dimensions}' elements. ""
    ""Set algorithm_globals.massive=True or the method argument massive=True ""
    ""if you want to proceed.""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/opflow/operator_base.py,NotImplementedError
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/opflow/list_ops/tensored_op.py,"OpflowError(
    ""Conversion to_circuit supported only for operators, where a single ""
    ""underlying circuit can be produced.""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/opflow/list_ops/composed_op.py,"OpflowError(
    ""Conversion to_circuit supported only for operators, where a single ""
    ""underlying circuit can be produced.""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/opflow/list_ops/list_op.py,"TypeError(f""ListOp expecting objects of type OperatorBase, got {badval}"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/opflow/list_ops/list_op.py,"TypeError(""Coefficients are not returned for nested ListOps."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/opflow/list_ops/list_op.py,"ValueError(""Operators in ListOp have differing numbers of qubits."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/opflow/list_ops/list_op.py,"ValueError(
    ""Operators can only be scalar multiplied by float or complex, not ""
    ""{} of type {}."".format(scalar, type(scalar))
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/opflow/list_ops/list_op.py,"TypeError(""Tensorpower can only take positive int arguments"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/opflow/list_ops/list_op.py,"OpflowError(""New index must be defined for each qubit of the operator."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/opflow/list_ops/list_op.py,"OpflowError(
    ""Permute is only possible if all operators in the ListOp have the ""
    ""same number of qubits.""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/opflow/list_ops/list_op.py,"TypeError(""power can only take positive int arguments"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/opflow/list_ops/list_op.py,"NotImplementedError(
    ""ListOp's eval function is only defined for distributive ListOps.""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/opflow/list_ops/list_op.py,"NotImplementedError(
    ""Combo_fn not yet supported for mixed measurement ""
    ""and non-measurement StateFns""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/opflow/list_ops/list_op.py,"TypeError(""Cannot handle mixed scalar and Operator eval results."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/opflow/list_ops/summed_op.py,"OpflowError(
    ""The SummedOp can not be converted to circuit, because to_matrix_op did ""
    ""not return a MatrixOp.""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/opflow/evolutions/evolution_base.py,NotImplementedError
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/opflow/evolutions/evolution_factory.py,"ValueError(""Evolutions of mixed Operators not yet supported."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/opflow/evolutions/pauli_trotter_evolution.py,NotImplementedError
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/opflow/evolutions/evolved_op.py,"ValueError(
    ""Sum over operators with different numbers of qubits, {} and {}, is not well ""
    ""defined"".format(self.num_qubits, other.num_qubits)
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/opflow/evolutions/evolved_op.py,"OpflowError(""to_instruction is not allowed for ListOp."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/opflow/evolutions/trotterizations/trotterization_factory.py,"ValueError(f""Trotter mode {mode} not supported"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/opflow/evolutions/trotterizations/qdrift.py,"TypeError(""Trotterization converters can only convert SummedOp or PauliSumOp."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/opflow/evolutions/trotterizations/qdrift.py,"TypeError(
    ""Trotterization converters can only convert operators with real coefficients.""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/opflow/evolutions/trotterizations/suzuki.py,"TypeError(""Trotterization converters can only convert SummedOp or PauliSumOp."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/opflow/evolutions/trotterizations/suzuki.py,"TypeError(
    ""Coefficient of the operator must be float or ParameterExpression, ""
    f""but {operator.coeff}:{type(operator.coeff)} is given.""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/opflow/evolutions/trotterizations/trotterization_base.py,NotImplementedError
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/opflow/state_fns/vector_state_fn.py,"ValueError(
    ""Sum over statefns with different numbers of qubits, {} and {}, is not well ""
    ""defined"".format(self.num_qubits, other.num_qubits)
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/opflow/state_fns/vector_state_fn.py,"ValueError(
    ""Cannot compute overlap with StateFn or Operator if not Measurement. Try taking ""
    ""sf.adjoint() first to convert to measurement.""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/opflow/state_fns/circuit_state_fn.py,"TypeError(
    ""CircuitStateFn can only be instantiated ""
    ""with QuantumCircuit, not {}"".format(type(primitive))
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/opflow/state_fns/circuit_state_fn.py,"TypeError(""CircuitOp does not support QuantumCircuits with ClassicalRegisters."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/opflow/state_fns/circuit_state_fn.py,"ValueError(
    ""Sum over operators with different numbers of qubits, ""
    ""{} and {}, is not well ""
    ""defined"".format(self.num_qubits, other.num_qubits)
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/opflow/state_fns/circuit_state_fn.py,"OpflowError(
    ""Failed to take the inverse of the underlying circuit, the circuit ""
    ""is likely not unitary and can therefore not be inverted.""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/opflow/state_fns/circuit_state_fn.py,"ValueError(
    ""Composition with a Statefunctions in the first operand is not defined.""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/opflow/state_fns/circuit_state_fn.py,"ValueError(
    ""Cannot compute overlap with StateFn or Operator if not Measurement. Try taking ""
    ""sf.adjoint() first to convert to measurement.""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/opflow/state_fns/state_fn.py,"TypeError(
    ""Unsupported primitive type {} passed into StateFn ""
    ""factory constructor"".format(type(primitive))
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/opflow/state_fns/state_fn.py,NotImplementedError
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/opflow/state_fns/state_fn.py,NotImplementedError
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/opflow/state_fns/state_fn.py,NotImplementedError
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/opflow/state_fns/state_fn.py,NotImplementedError
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/opflow/state_fns/state_fn.py,NotImplementedError
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/opflow/state_fns/state_fn.py,NotImplementedError
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/opflow/state_fns/state_fn.py,"ValueError(
    ""Operators can only be scalar multiplied by float or complex, not ""
    ""{} of type {}."".format(scalar, type(scalar))
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/opflow/state_fns/state_fn.py,NotImplementedError
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/opflow/state_fns/state_fn.py,"TypeError(""Tensorpower can only take positive int arguments"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/opflow/state_fns/state_fn.py,NotImplementedError
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/opflow/state_fns/state_fn.py,NotImplementedError
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/opflow/state_fns/state_fn.py,"ValueError(
    ""Composition with a Statefunction in the first operand is not defined.""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/opflow/state_fns/state_fn.py,"ValueError(""Composition power over Statefunctions or Measurements is not defined."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/opflow/state_fns/state_fn.py,NotImplementedError
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/opflow/state_fns/state_fn.py,NotImplementedError
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/opflow/state_fns/state_fn.py,NotImplementedError
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/opflow/state_fns/cvar_measurement.py,ValueError
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/opflow/state_fns/cvar_measurement.py,"ValueError(""The parameter alpha must be in [0, 1]."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/opflow/state_fns/cvar_measurement.py,"OpflowError(
    ""Input operator to CVaRMeasurement must be diagonal, but is not:"", str(primitive)
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/opflow/state_fns/cvar_measurement.py,"OpflowError(""Adjoint of a CVaR measurement not defined"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/opflow/state_fns/cvar_measurement.py,"ValueError(
    ""Operators can only be scalar multiplied by float or complex, not ""
    ""{} of type {}."".format(scalar, type(scalar))
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/opflow/state_fns/cvar_measurement.py,NotImplementedError
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/opflow/state_fns/cvar_measurement.py,NotImplementedError
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/opflow/state_fns/cvar_measurement.py,NotImplementedError
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/opflow/state_fns/cvar_measurement.py,NotImplementedError
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/opflow/state_fns/cvar_measurement.py,"ValueError(""Unsupported input to CVaRMeasurement.eval:"", type(front))"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/opflow/state_fns/cvar_measurement.py,NotImplementedError
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/opflow/state_fns/sparse_vector_state_fn.py,"ValueError(""The primitive must be a row vector of shape (x, 1)."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/opflow/state_fns/sparse_vector_state_fn.py,"ValueError(""The number of vector elements must be a power of 2."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/opflow/state_fns/sparse_vector_state_fn.py,"ValueError(
    ""Sum over statefns with different numbers of qubits, {} and {}, is not well ""
    ""defined"".format(self.num_qubits, other.num_qubits)
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/opflow/state_fns/sparse_vector_state_fn.py,"ValueError(
    ""Cannot compute overlap with StateFn or Operator if not Measurement. ""
    ""Try taking sf.adjoint() first to convert to measurement.""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/opflow/state_fns/dict_state_fn.py,"TypeError(
    ""DictStateFn can only be instantiated with dict, ""
    ""string, or Qiskit Result, not {}"".format(type(primitive))
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/opflow/state_fns/dict_state_fn.py,"ValueError(
    ""Sum over statefns with different numbers of qubits, {} and {}, is not well ""
    ""defined"".format(self.num_qubits, other.num_qubits)
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/opflow/state_fns/dict_state_fn.py,"OpflowError(""New index must be defined for each qubit of the operator."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/opflow/state_fns/dict_state_fn.py,"ValueError(
    ""Cannot compute overlap with StateFn or Operator if not Measurement. Try taking ""
    ""sf.adjoint() first to convert to measurement.""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/opflow/state_fns/operator_state_fn.py,"ValueError(
    ""Sum over statefns with different numbers of qubits, {} and {}, is not well ""
    ""defined"".format(self.num_qubits, other.num_qubits)
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/opflow/state_fns/operator_state_fn.py,NotImplementedError
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/opflow/state_fns/operator_state_fn.py,"ValueError(
    ""Cannot compute overlap with StateFn or Operator if not Measurement. Try taking ""
    ""sf.adjoint() first to convert to measurement.""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/opflow/state_fns/operator_state_fn.py,NotImplementedError
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/opflow/converters/converter_base.py,NotImplementedError
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/opflow/converters/pauli_basis_change.py,"TypeError(
    f""PauliBasisChange can only convert into Pauli bases, not {type(dest)}.""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/opflow/converters/pauli_basis_change.py,"TypeError(
    f""PauliBasisChange can only convert Pauli-based OpPrimitives, not {type(origin)}""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/opflow/converters/pauli_basis_change.py,"ValueError(""Cannot change to or from a fully Identity Pauli."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/opflow/converters/abelian_grouper.py,"OpflowError(
    ""Cannot determine Abelian groups if any Operator in list_op is not ""
    f""`PauliOp`. E.g., {op} ({type(op)})""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/opflow/converters/circuit_sampler.py,"ValueError(
    ""Statevector mode for circuit sampling requires statevector ""
    ""backend, not {}."".format(self.quantum_instance.backend)
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/opflow/converters/circuit_sampler.py,"ValueError(
    ""Parameterized Qobj mode requires Aer ""
    ""backend, not {}."".format(self.quantum_instance.backend)
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/opflow/converters/circuit_sampler.py,"OpflowError(
    ""Circuits are empty. ""
    ""Check that the operator is an instance of CircuitStateFn or its ListOp.""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/opflow/converters/circuit_sampler.py,"OpflowError(""CircuitStateFn is empty and there is no cache."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/opflow/converters/circuit_sampler.py,"ValueError(f""unexpected parameter: {param}"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/opflow/mixins/star_algebra.py,"TypeError(
    f""Unsupported operand type(s) for **: '{type(self).__name__}' and ""
    f""'{type(exponent).__name__}'""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/opflow/mixins/star_algebra.py,"ValueError(""The input `exponent` must be a positive integer."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/opflow/gradients/gradient_base.py,"ValueError(
    ""Unrecognized input provided for `grad_method`. Please provide""
    "" a CircuitGradient object or one of the pre-defined string""
    "" arguments: {'param_shift', 'fin_diff', 'lin_comb'}. ""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/opflow/gradients/natural_gradient.py,"TypeError(
    ""Please provide the operator either as ComposedOp or as ListOp of ""
    ""a CircuitStateFn potentially with a combo function.""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/opflow/gradients/natural_gradient.py,"TypeError(
    ""Please make sure that the operator for which you want to compute ""
    ""Quantum Fisher Information represents an expectation value or a ""
    ""loss function and that the quantum state is given as ""
    ""CircuitStateFn.""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/opflow/gradients/natural_gradient.py,"ValueError(""The operator we are taking the gradient of is not parameterized!"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/opflow/gradients/natural_gradient.py,"ValueError(
    ""The imaginary part of the gradient are non-negligible. The largest absolute ""
    f""imaginary value in the gradient is {np.amax(np.abs(np.imag(gradient)))}. ""
    ""Please increase the number of shots.""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/opflow/gradients/natural_gradient.py,"ValueError(
    ""The imaginary part of the metric are non-negligible. The largest ""
    ""absolute imaginary value in the gradient is ""
    f""{np.amax(np.abs(np.imag(metric)))}. Please ""
    ""increase the number of shots.""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/opflow/gradients/natural_gradient.py,"ValueError(
    f""The underlying metric has at least one Eigenvalue < -{ETOL}. ""
    f""The smallest Eigenvalue is {np.amin(w)} ""
    ""Please use a regularized least-square solver for this problem or ""
    ""increase the number of backend shots."",
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/opflow/gradients/hessian.py,"ValueError(""The operator we are taking the gradient of is not parameterized!"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/opflow/gradients/hessian.py,"TypeError(""Parameters supplied in unsupported format."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/opflow/gradients/hessian.py,"OpflowError(
    ""Operator pre-processing failed. Coefficients were not properly ""
    ""collected inside the ComposedOp.""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/opflow/gradients/hessian.py,"TypeError(
    ""The gradient framework is compatible with states that are given as ""
    ""CircuitStateFn""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/opflow/gradients/hessian.py,"TypeError(
    ""The computation of Hessians is only supported for Operators which ""
    ""represent expectation values or quantum states.""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/opflow/gradients/hessian.py,"TypeError(
    ""The computation of Hessians is only supported for Operators which ""
    ""represent expectation values.""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/opflow/gradients/qfi.py,"ValueError(""The operator we are taking the gradient of is not parameterized!"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/opflow/gradients/derivative_base.py,NotImplementedError
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/opflow/gradients/derivative_base.py,"ValueError(
    ""This operator was not properly decomposed. ""
    ""By this point, all operator measurements should ""
    ""contain single operators, otherwise the coefficient ""
    ""gradients will not be handled properly.""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/opflow/gradients/qfi_base.py,"ValueError(
    ""Unrecognized input provided for `qfi_method`. Please provide""
    "" a CircuitQFI object or one of the pre-defined string""
    "" arguments: {'lin_comb_full', 'overlap_diag', ""
    ""'overlap_block_diag'}. ""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/opflow/gradients/gradient.py,"ValueError(""The operator we are taking the gradient of is not parameterized!"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/opflow/gradients/gradient.py,"ValueError(
    ""The following parameters do not appear in the provided operator: "",
    absent_params,
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/opflow/gradients/gradient.py,"ValueError(
    ""The following parameters do not appear in the provided operator: "",
    absent_params,
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/opflow/gradients/gradient.py,"OpflowError(
    ""Operator pre-processing failed. Coefficients were not properly ""
    ""collected inside the ComposedOp.""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/opflow/gradients/gradient.py,"TypeError(
    ""The gradient framework is compatible with states that are given as ""
    ""CircuitStateFn""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/opflow/gradients/gradient.py,"OpflowError(
    ""Operator pre-processing failed. Coefficients were not properly ""
    ""collected inside the ComposedOp.""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/opflow/gradients/hessian_base.py,"ValueError(
    ""Unrecognized input provided for `hess_method`. Please provide""
    "" a CircuitGradient object or one of the pre-defined string""
    "" arguments: {'param_shift', 'fin_diff', 'lin_comb'}. ""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/opflow/gradients/circuit_gradients/param_shift.py,"OpflowError(
    ""The linear combination gradient does only support ""
    ""the computation ""
    ""of 1st gradients and 2nd order gradients.""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/opflow/gradients/circuit_gradients/param_shift.py,"OpflowError(
    ""The linear combination gradient does only support the computation ""
    ""of 1st gradients and 2nd order gradients.""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/opflow/gradients/circuit_gradients/param_shift.py,"ValueError(
    ""The following parameters do not appear in the provided operator: "",
    absent_params,
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/opflow/gradients/circuit_gradients/param_shift.py,"TypeError(
    ""Please define an operator with a single circuit representing ""
    ""the quantum state.""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/opflow/gradients/circuit_gradients/param_shift.py,"TypeError(
    ""Probability gradients are not supported for the given operator type""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/opflow/gradients/circuit_gradients/param_shift.py,"TypeError(
    ""Probability gradients can only be evaluated from VectorStateFs or DictStateFns.""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/opflow/gradients/circuit_gradients/circuit_gradient.py,NotImplementedError
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/opflow/gradients/circuit_gradients/circuit_gradient.py,"QiskitError(
    f""Could not transpile the circuit provided {circuit} into supported gates ""
    f""{supported_gates}.""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/opflow/gradients/circuit_gradients/lin_comb.py,"ValueError(
    ""This auxiliary measurement operator is currently not supported. Please choose ""
    ""either Z, -Y, or Z - 1j * Y. ""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/opflow/gradients/circuit_gradients/lin_comb.py,"ValueError(""The given operator does not correspond to an expectation value"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/opflow/gradients/circuit_gradients/lin_comb.py,"ValueError(""The given operator does not correspond to an expectation value"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/opflow/gradients/circuit_gradients/lin_comb.py,"TypeError(
    ""The StateFn representing the quantum state could not be extracted.""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/opflow/gradients/circuit_gradients/lin_comb.py,"OpflowError(
    ""The linear combination gradient does only support the ""
    ""computation of 1st gradients and 2nd order gradients.""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/opflow/gradients/circuit_gradients/lin_comb.py,"TypeError(
    ""The StateFn representing the quantum state could not be extracted.""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/opflow/gradients/circuit_gradients/lin_comb.py,"OpflowError(
    ""The linear combination gradient only supports the ""
    ""computation of 1st and 2nd order gradients.""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/opflow/gradients/circuit_gradients/lin_comb.py,"OpflowError(
    ""The linear combination gradient does only support the computation ""
    ""of 1st gradients and 2nd order gradients.""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/opflow/gradients/circuit_gradients/lin_comb.py,"TypeError(
    ""The state result should be either a DictStateFn or a VectorStateFn.""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/opflow/gradients/circuit_gradients/lin_comb.py,"TypeError(
    ""The state result should be either a DictStateFn or a VectorStateFn.""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/opflow/gradients/circuit_gradients/lin_comb.py,"OpflowError(
    ""Function only support controlled gates with control state `1` on all control ""
    ""qubits.""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/opflow/gradients/circuit_gradients/lin_comb.py,"TypeError(f""Unrecognized parameterized gate, {gate}"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/opflow/gradients/circuit_gradients/lin_comb.py,"RuntimeError(""The specified gate could not be found in the circuit data."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/opflow/gradients/circuit_gradients/lin_comb.py,"ValueError(
    f""The auxiliary measurement operator passed {aux_meas_op} is not supported. ""
    ""Only Y, Z, or Z - 1j * Y are valid.""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/opflow/gradients/circuit_gradients/lin_comb.py,"TypeError(
    ""Please define in the parameters for which the Hessian is evaluated ""
    ""either as parameter tuple or a list of parameter tuples""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/opflow/gradients/circuit_qfis/lin_comb_full.py,"ValueError(
    ""This auxiliary measurement operator is currently not supported. Please choose ""
    ""either Z, -Y, or Z - 1j * Y. ""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/opflow/gradients/circuit_qfis/lin_comb_full.py,"TypeError(
    ""LinCombFull is only compatible with states that are given as ""
    f""CircuitStateFn, not {type(operator)}""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/opflow/gradients/circuit_qfis/overlap_diag.py,"NotImplementedError(""operator must be a CircuitStateFn"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/opflow/gradients/circuit_qfis/overlap_diag.py,"NotImplementedError(""operator must be a CircuitOp or CircuitStateFn"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/opflow/gradients/circuit_qfis/overlap_diag.py,"NotImplementedError(
    ""OverlapDiag does not yet support multiple ""
    ""gates parameterized by a single parameter. For such ""
    ""circuits use LinCombFull""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/opflow/gradients/circuit_qfis/overlap_diag.py,"TypeError(
    ""OverlapDiag cannot yet support gates with more than one parameter.""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/opflow/gradients/circuit_qfis/overlap_diag.py,"NotImplementedError(
    ""The QFI diagonal approximation currently only supports ""
    ""gates with a single free parameter.""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/opflow/gradients/circuit_qfis/overlap_diag.py,"NotImplementedError(f""Generator for gate {instr.name} not implemented."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/opflow/gradients/circuit_qfis/overlap_diag.py,NotImplementedError
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/opflow/gradients/circuit_qfis/circuit_qfi.py,NotImplementedError
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/opflow/gradients/circuit_qfis/overlap_block_diag.py,"NotImplementedError(""operator must be a CircuitOp or CircuitStateFn"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/opflow/gradients/circuit_qfis/overlap_block_diag.py,"NotImplementedError(
    ""OverlapDiag does not yet support multiple ""
    ""gates parameterized by a single parameter. For such ""
    ""circuits use LinCombFull""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/opflow/gradients/circuit_qfis/overlap_block_diag.py,"OpflowError(
    ""OverlapDiag cannot yet support gates with more than one parameter.""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/opflow/primitive_ops/circuit_op.py,"TypeError(
    ""CircuitOp can only be instantiated with ""
    ""QuantumCircuit, not {}"".format(type(primitive))
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/opflow/primitive_ops/circuit_op.py,"TypeError(""CircuitOp does not support QuantumCircuits with ClassicalRegisters."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/opflow/primitive_ops/circuit_op.py,"ValueError(
    ""Sum over operators with different numbers of qubits, {} and {}, is not well ""
    ""defined"".format(self.num_qubits, other.num_qubits)
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/opflow/primitive_ops/tapered_pauli_sum_op.py,"TypeError(
    f""Argument parameter z2_symmetries must be Z2Symmetries, not {type(z2_symmetries)}""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/opflow/primitive_ops/tapered_pauli_sum_op.py,"OpflowError(
    ""Number of Z2 symmetries has to be the same as number of single-qubit pauli x.""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/opflow/primitive_ops/tapered_pauli_sum_op.py,"OpflowError(
    ""Number of single-qubit pauli x has to be the same as length of single-qubit list.""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/opflow/primitive_ops/tapered_pauli_sum_op.py,"OpflowError(
    ""The length of single-qubit list has ""
    ""to be the same as length of tapering values.""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/opflow/primitive_ops/tapered_pauli_sum_op.py,"OpflowError(
    ""Z2 symmetries, single qubit pauli and single qubit list cannot be empty.""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/opflow/primitive_ops/tapered_pauli_sum_op.py,"OpflowError(
    ""Z2 symmetries, single qubit pauli and single qubit list cannot be empty.""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/opflow/primitive_ops/tapered_pauli_sum_op.py,"OpflowError(
    ""Z2 symmetries, single qubit pauli and single qubit list cannot be empty.""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/opflow/primitive_ops/tapered_pauli_sum_op.py,"OpflowError(
    ""The given operator does not commute with the symmetry, can not taper it.""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/opflow/primitive_ops/matrix_op.py,"TypeError(
    f""MatrixOp can only be instantiated with {valid_cls}, ""
    f""not '{primitive_orig.__class__.__name__}'""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/opflow/primitive_ops/matrix_op.py,"ValueError(""Cannot handle non-square matrices yet."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/opflow/primitive_ops/matrix_op.py,"ValueError(
    ""Sum over operators with different numbers of qubits, {} and {}, is not well ""
    ""defined"".format(self.num_qubits, other.num_qubits)
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/opflow/primitive_ops/matrix_op.py,"OpflowError(""New index must be defined for each qubit of the operator."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/opflow/primitive_ops/primitive_op.py,"TypeError(
    ""Unsupported primitive type {} passed into PrimitiveOp ""
    ""factory constructor"".format(type(primitive))
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/opflow/primitive_ops/primitive_op.py,NotImplementedError
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/opflow/primitive_ops/primitive_op.py,NotImplementedError
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/opflow/primitive_ops/primitive_op.py,NotImplementedError
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/opflow/primitive_ops/primitive_op.py,NotImplementedError
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/opflow/primitive_ops/primitive_op.py,NotImplementedError
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/opflow/primitive_ops/primitive_op.py,"ValueError(
    ""Operators can only be scalar multiplied by float or complex, not ""
    ""{} of type {}."".format(scalar, type(scalar))
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/opflow/primitive_ops/primitive_op.py,NotImplementedError
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/opflow/primitive_ops/primitive_op.py,"TypeError(""Tensorpower can only take positive int arguments"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/opflow/primitive_ops/primitive_op.py,NotImplementedError
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/opflow/primitive_ops/primitive_op.py,NotImplementedError
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/opflow/primitive_ops/primitive_op.py,NotImplementedError
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/opflow/primitive_ops/primitive_op.py,NotImplementedError
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/opflow/primitive_ops/primitive_op.py,NotImplementedError
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/opflow/primitive_ops/primitive_op.py,NotImplementedError
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/opflow/primitive_ops/pauli_op.py,"TypeError(f""PauliOp can only be instantiated with Paulis, not {type(primitive)}"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/opflow/primitive_ops/pauli_op.py,"ValueError(
    ""Sum over operators with different numbers of qubits, {} and {}, is not well ""
    ""defined"".format(self.num_qubits, other.num_qubits)
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/opflow/primitive_ops/pauli_op.py,"OpflowError(
    ""List of indices to permute must have the same size as Pauli Operator""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/opflow/primitive_ops/pauli_op.py,"ValueError(
    ""eval does not support operands with differing numbers of qubits, ""
    ""{} and {}, respectively."".format(self.num_qubits, front.num_qubits)
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/opflow/primitive_ops/pauli_op.py,"ValueError(""Operator composed with a measurement is undefined."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/opflow/primitive_ops/pauli_sum_op.py,"TypeError(
    f""PauliSumOp can only be instantiated with SparsePauliOp, not {type(primitive)}""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/opflow/primitive_ops/pauli_sum_op.py,"ValueError(
    f""Sum of operators with different numbers of qubits, {self.num_qubits} and ""
    f""{other.num_qubits}, is not well defined""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/opflow/primitive_ops/pauli_sum_op.py,"OpflowError(f""List {permutation} is not a permutation."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/opflow/primitive_ops/pauli_sum_op.py,"OpflowError(
    ""List of indices to permute must have the same size as Pauli Operator""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/opflow/primitive_ops/pauli_sum_op.py,"ValueError(
    ""eval does not support operands with differing numbers of qubits, ""
    ""{} and {}, respectively."".format(self.num_qubits, front.num_qubits)
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/opflow/primitive_ops/pauli_sum_op.py,"ValueError(""Operator composed with a measurement is undefined."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/opflow/expectations/expectation_base.py,NotImplementedError
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/opflow/expectations/expectation_base.py,NotImplementedError
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/opflow/expectations/aer_pauli_expectation.py,"MissingOptionalLibraryError(
    libname=""qiskit-aer"",
    name=""AerPauliExpectation"",
    pip_install=""pip install qiskit-aer"",
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/opflow/expectations/aer_pauli_expectation.py,"TypeError(
    f""Conversion of OperatorStateFn of {operator.__class__.__name__} is not defined.""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/opflow/expectations/aer_pauli_expectation.py,"TypeError(f""Variance cannot be computed for {operator.__class__.__name__}."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/opflow/expectations/cvar_expectation.py,"NotImplementedError(""AerPauliExpecation currently not supported."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/opflow/expectations/cvar_expectation.py,"ValueError(""Input operator does not correspond to a value expectation value."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/opflow/expectations/expectation_factory.py,"ValueError(""Expectations of Mixed Operators not yet supported."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/scheduler/sequence.py,"QiskitError(""Invalid scheduled circuit."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/scheduler/lowering.py,"KeyError(
    ""The measurement calibration is not defined on ""
    ""the requested classical bits""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/scheduler/lowering.py,"QiskitError(
    ""Qubit '{}' or classical bit '{}' errored because the ""
    ""circuit Measure instruction only takes one of ""
    ""each."".format(inst_qubits, instruction.clbits)
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/scheduler/lowering.py,"QiskitError(
    f""Operation '{instruction.operation.name}' on qubit(s) {inst_qubits} ""
    ""not supported by the backend command definition. Did you remember to ""
    ""transpile your input circuit for the same backend?""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/scheduler/schedule_circuit.py,"QiskitError(f""Scheduling method {method} isn't recognized."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/test/base.py,"ValueError(
    ""In File: %s\n""
    ""TestCase.setUp was already called. Do not explicitly call ""
    ""setUp from your tests. In your own setUp, use super to call ""
    ""the base setUp."" % (sys.modules[self.__class__.__module__].__file__,)
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/test/base.py,"ValueError(
    ""In File: %s\n""
    ""TestCase.tearDown was already called. Do not explicitly call ""
    ""tearDown from your tests. In your own tearDown, use super to ""
    ""call the base tearDown."" % (sys.modules[self.__class__.__module__].__file__,)
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/test/base.py,self.failureException(msg)
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/test/base.py,self.failureException(msg)
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/test/base.py,"TypeError(""specify delta or places not both"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/test/decorators.py,"unittest.SkipTest(""Skipping slow tests"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/test/decorators.py,"unittest.SkipTest(
    ""qiskit-ibmq-provider could not be found, ""
    ""and is required for executing online tests. ""
    'To install, run ""pip install qiskit-ibmq-provider"" '
    ""or check your installation.""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/test/decorators.py,"unittest.SkipTest(
    ""More than 1 credential set found, use: ""
    ""IBMQ_TOKEN and IBMQ_URL env variables to ""
    ""set credentials explicitly""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/test/decorators.py,"unittest.SkipTest(
    ""No IBMQ credentials found for running the test. This is required for running online tests.""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/test/decorators.py,"unittest.SkipTest(""Skipping online tests"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/test/decorators.py,"unittest.SkipTest(""Skipping online tests"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/test/decorators.py,"unittest.SkipTest(""Test requires internet connection."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/test/decorators.py,"ValueError(
    f""Parent '{name}' method was not called by '{classname}.{name}'.""
    f"" Ensure you have put in calls to 'super().{name}()'.""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/test/ibmq_mock.py,"NameError(
    ""The specified backend name is not a valid mock from qiskit.providers.fake_provider.""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/test/providers/backend.py,"SkipTest(""Skipping base class tests"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/test/providers/provider.py,"SkipTest(""Skipping base class tests"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/test/mock/__init__.py,"AttributeError(f""module '{__name__}' has no attribute '{name}'"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/test/mock/backends/__init__.py,"AttributeError(f""module '{__name__}' has no attribute '{name}'"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/test/mock/backends/quito/__init__.py,"AttributeError(f""module '{__name__}' has no attribute '{name}'"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/test/mock/backends/lagos/__init__.py,"AttributeError(f""module '{__name__}' has no attribute '{name}'"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/test/mock/backends/burlington/__init__.py,"AttributeError(f""module '{__name__}' has no attribute '{name}'"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/test/mock/backends/rueschlikon/__init__.py,"AttributeError(f""module '{__name__}' has no attribute '{name}'"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/test/mock/backends/cairo/__init__.py,"AttributeError(f""module '{__name__}' has no attribute '{name}'"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/test/mock/backends/cambridge/__init__.py,"AttributeError(f""module '{__name__}' has no attribute '{name}'"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/test/mock/backends/nairobi/__init__.py,"AttributeError(f""module '{__name__}' has no attribute '{name}'"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/test/mock/backends/kolkata/__init__.py,"AttributeError(f""module '{__name__}' has no attribute '{name}'"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/test/mock/backends/lima/__init__.py,"AttributeError(f""module '{__name__}' has no attribute '{name}'"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/test/mock/backends/belem/__init__.py,"AttributeError(f""module '{__name__}' has no attribute '{name}'"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/test/mock/backends/bogota/__init__.py,"AttributeError(f""module '{__name__}' has no attribute '{name}'"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/test/mock/backends/rochester/__init__.py,"AttributeError(f""module '{__name__}' has no attribute '{name}'"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/test/mock/backends/armonk/__init__.py,"AttributeError(f""module '{__name__}' has no attribute '{name}'"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/test/mock/backends/athens/__init__.py,"AttributeError(f""module '{__name__}' has no attribute '{name}'"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/test/mock/backends/vigo/__init__.py,"AttributeError(f""module '{__name__}' has no attribute '{name}'"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/test/mock/backends/tokyo/__init__.py,"AttributeError(f""module '{__name__}' has no attribute '{name}'"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/test/mock/backends/melbourne/__init__.py,"AttributeError(f""module '{__name__}' has no attribute '{name}'"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/test/mock/backends/guadalupe/__init__.py,"AttributeError(f""module '{__name__}' has no attribute '{name}'"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/test/mock/backends/washington/__init__.py,"AttributeError(f""module '{__name__}' has no attribute '{name}'"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/test/mock/backends/singapore/__init__.py,"AttributeError(f""module '{__name__}' has no attribute '{name}'"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/test/mock/backends/hanoi/__init__.py,"AttributeError(f""module '{__name__}' has no attribute '{name}'"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/test/mock/backends/valencia/__init__.py,"AttributeError(f""module '{__name__}' has no attribute '{name}'"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/test/mock/backends/jakarta/__init__.py,"AttributeError(f""module '{__name__}' has no attribute '{name}'"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/test/mock/backends/poughkeepsie/__init__.py,"AttributeError(f""module '{__name__}' has no attribute '{name}'"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/test/mock/backends/rome/__init__.py,"AttributeError(f""module '{__name__}' has no attribute '{name}'"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/test/mock/backends/manhattan/__init__.py,"AttributeError(f""module '{__name__}' has no attribute '{name}'"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/test/mock/backends/paris/__init__.py,"AttributeError(f""module '{__name__}' has no attribute '{name}'"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/test/mock/backends/santiago/__init__.py,"AttributeError(f""module '{__name__}' has no attribute '{name}'"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/test/mock/backends/ourense/__init__.py,"AttributeError(f""module '{__name__}' has no attribute '{name}'"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/test/mock/backends/yorktown/__init__.py,"AttributeError(f""module '{__name__}' has no attribute '{name}'"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/test/mock/backends/brooklyn/__init__.py,"AttributeError(f""module '{__name__}' has no attribute '{name}'"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/test/mock/backends/london/__init__.py,"AttributeError(f""module '{__name__}' has no attribute '{name}'"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/test/mock/backends/sydney/__init__.py,"AttributeError(f""module '{__name__}' has no attribute '{name}'"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/test/mock/backends/manila/__init__.py,"AttributeError(f""module '{__name__}' has no attribute '{name}'"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/test/mock/backends/mumbai/__init__.py,"AttributeError(f""module '{__name__}' has no attribute '{name}'"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/test/mock/backends/almaden/__init__.py,"AttributeError(f""module '{__name__}' has no attribute '{name}'"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/test/mock/backends/casablanca/__init__.py,"AttributeError(f""module '{__name__}' has no attribute '{name}'"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/test/mock/backends/johannesburg/__init__.py,"AttributeError(f""module '{__name__}' has no attribute '{name}'"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/test/mock/backends/tenerife/__init__.py,"AttributeError(f""module '{__name__}' has no attribute '{name}'"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/test/mock/backends/toronto/__init__.py,"AttributeError(f""module '{__name__}' has no attribute '{name}'"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/test/mock/backends/essex/__init__.py,"AttributeError(f""module '{__name__}' has no attribute '{name}'"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/test/mock/backends/montreal/__init__.py,"AttributeError(f""module '{__name__}' has no attribute '{name}'"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/test/mock/backends/boeblingen/__init__.py,"AttributeError(f""module '{__name__}' has no attribute '{name}'"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/extensions/unitary.py,"ExtensionError(""Input matrix is not unitary."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/extensions/unitary.py,"ExtensionError(""Input matrix is not an N-qubit operator."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/extensions/unitary.py,"CircuitError(f""invalid param type {type(parameter)} in gate {self.name}"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/extensions/hamiltonian_gate.py,"ExtensionError(""Input matrix is not Hermitian."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/extensions/hamiltonian_gate.py,"ExtensionError(""Evolution time is not real."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/extensions/hamiltonian_gate.py,"ExtensionError(""Input matrix is not an N-qubit operator."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/extensions/hamiltonian_gate.py,"TypeError(
    ""Unable to generate Unitary matrix for ""
    ""unbound t parameter {}"".format(self.params[1])
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/extensions/hamiltonian_gate.py,"ExtensionError(""HamiltonianGate has no QASM definition."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/extensions/hamiltonian_gate.py,"CircuitError(f""invalid param type {type(parameter)} for gate {self.name}"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/extensions/simulator/snapshot.py,"ExtensionError(""Snapshot label must be a string."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/extensions/simulator/snapshot.py,"QiskitError(""Snapshots are simulator directives and cannot be conditional."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/extensions/simulator/snapshot.py,"ExtensionError(""no qubits for snapshot"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/extensions/quantum_initializer/uc.py,"QiskitError(""The single-qubit unitaries are not provided in a list."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/extensions/quantum_initializer/uc.py,"QiskitError(""The dimension of a controlled gate is not equal to (2,2)."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/extensions/quantum_initializer/uc.py,"QiskitError(""The gate list cannot be empty."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/extensions/quantum_initializer/uc.py,"QiskitError(
    ""The number of controlled single-qubit gates is not a non-negative power of 2.""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/extensions/quantum_initializer/uc.py,"QiskitError(""A controlled gate is not unitary."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/extensions/quantum_initializer/uc.py,"CircuitError(f""invalid param type {type(parameter)} in gate {self.name}"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/extensions/quantum_initializer/uc.py,"QiskitError(
    ""The target qubit is a QuantumRegister containing more than one qubit.""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/extensions/quantum_initializer/uc.py,"QiskitError(
    ""The control qubits must be provided as a list""
    "" (also if there is only one control qubit).""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/extensions/quantum_initializer/uc.py,"QiskitError(""The single-qubit unitaries are not provided in a list."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/extensions/quantum_initializer/uc.py,"QiskitError(
    ""The number of controlled single-qubit gates is not a non negative power of 2.""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/extensions/quantum_initializer/uc.py,"QiskitError(
    ""Number of controlled gates does not correspond to the number of control qubits.""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/extensions/quantum_initializer/squ.py,"QiskitError(""The decomposition mode is not known."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/extensions/quantum_initializer/squ.py,"QiskitError(""The dimension of the input matrix is not equal to (2,2)."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/extensions/quantum_initializer/squ.py,"QiskitError(""The 2*2 matrix is not unitary."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/extensions/quantum_initializer/squ.py,"QiskitError(""The decomposition mode is not known."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/extensions/quantum_initializer/squ.py,"CircuitError(f""invalid param type {type(parameter)} in gate {self.name}"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/extensions/quantum_initializer/squ.py,"QiskitError(
    ""The target qubit is a QuantumRegister containing more than one qubit.""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/extensions/quantum_initializer/squ.py,"QiskitError(""The target qubit is not a single qubit from a QuantumRegister."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/extensions/quantum_initializer/mcg_up_to_diagonal.py,"QiskitError(""The dimension of the controlled gate is not equal to (2,2)."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/extensions/quantum_initializer/mcg_up_to_diagonal.py,"QiskitError(""The controlled gate is not unitary."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/extensions/quantum_initializer/mcg_up_to_diagonal.py,"CircuitError(f""invalid param type {type(parameter)} in gate {self.name}"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/extensions/quantum_initializer/diagonal.py,"QiskitError(""The diagonal entries are not provided in a list."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/extensions/quantum_initializer/diagonal.py,"QiskitError(""The number of diagonal entries is not a positive power of 2."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/extensions/quantum_initializer/diagonal.py,"QiskitError(
    ""Not all of the diagonal entries can be converted to complex numbers.""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/extensions/quantum_initializer/diagonal.py,"QiskitError(""A diagonal entry has not absolute value one."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/extensions/quantum_initializer/diagonal.py,"QiskitError(
    ""The qubits must be provided as a list (also if there is only one qubit).""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/extensions/quantum_initializer/diagonal.py,"QiskitError(""The diagonal entries are not provided in a list."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/extensions/quantum_initializer/diagonal.py,"QiskitError(
    ""The number of diagonal entries does not correspond to the number of qubits.""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/extensions/quantum_initializer/isometry.py,"QiskitError(
    ""The number of rows of the isometry is not a non negative power of 2.""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/extensions/quantum_initializer/isometry.py,"QiskitError(
    ""The number of columns of the isometry is not a non negative power of 2.""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/extensions/quantum_initializer/isometry.py,"QiskitError(
    ""The input matrix has more columns than rows and hence it can't be an isometry.""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/extensions/quantum_initializer/isometry.py,"QiskitError(
    ""The input matrix has non orthonormal columns and hence it is not an isometry.""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/extensions/quantum_initializer/isometry.py,"CircuitError(f""invalid param type {type(parameter)} for gate {self.name}"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/extensions/quantum_initializer/ucrz.py,"QiskitError(
    ""The target qubit is a QuantumRegister containing more than one qubit.""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/extensions/quantum_initializer/ucrz.py,"QiskitError(""The angles must be provided as a list."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/extensions/quantum_initializer/ucrz.py,"QiskitError(
    ""The number of controlled rotation gates is not a non-negative power of 2.""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/extensions/quantum_initializer/ucrz.py,"QiskitError(
    ""Number of controlled rotations does not correspond to the number of control-qubits.""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/extensions/quantum_initializer/ucrx.py,"QiskitError(
    ""The target qubit is a QuantumRegister containing more than one qubit.""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/extensions/quantum_initializer/ucrx.py,"QiskitError(""The angles must be provided as a list."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/extensions/quantum_initializer/ucrx.py,"QiskitError(
    ""The number of controlled rotation gates is not a non-negative power of 2.""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/extensions/quantum_initializer/ucrx.py,"QiskitError(
    ""Number of controlled rotations does not correspond to the number of control-qubits.""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/extensions/quantum_initializer/ucry.py,"QiskitError(
    ""The target qubit is a QuantumRegister containing more than one qubit.""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/extensions/quantum_initializer/ucry.py,"QiskitError(""The angles must be provided as a list."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/extensions/quantum_initializer/ucry.py,"QiskitError(
    ""The number of controlled rotation gates is not a non-negative power of 2.""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/extensions/quantum_initializer/ucry.py,"QiskitError(
    ""Number of controlled rotations does not correspond to the number of control-qubits.""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/extensions/quantum_initializer/uc_pauli_rot.py,"QiskitError(""The angles are not provided in a list."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/extensions/quantum_initializer/uc_pauli_rot.py,"QiskitError(
    ""An angle cannot be converted to type float (real angles are expected).""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/extensions/quantum_initializer/uc_pauli_rot.py,"QiskitError(
    ""The number of controlled rotation gates is not a non-negative power of 2.""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/extensions/quantum_initializer/uc_pauli_rot.py,"QiskitError(""Rotation axis is not supported."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/qasm2/__init__.py,FileNotFoundError(str(path))
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/qasm2/__init__.py,"ValueError(
    f""unknown value for include_input_directory: '{include_input_directory}'.""
    "" Valid values are '\""append\""', '\""prepend\""' and 'None'.""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/qasm2/parse.py,"QASM2ParseError(""the custom 'delay' instruction can only accept an integer parameter"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/qasm2/parse.py,"QASM2ParseError(""the number of single-qubit delay lengths must be an integer"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/qasm2/parse.py,"ValueError(f""invalid operation: {op}"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/qasm2/parse.py,"ValueError(f""received invalid bytecode to build gate: {op}"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/qasm2/parse.py,"ValueError(f""unhandled unary opcode: {opcode}"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/qasm2/parse.py,"ValueError(f""unhandled binary opcode: {opcode}"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/qasm2/parse.py,"ValueError(f""unhandled expression type: {expr}"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/pulse/parameter_manager.py,NotImplementedError
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/pulse/parameter_manager.py,NotImplementedError
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/pulse/parameter_manager.py,NotImplementedError
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/pulse/parameter_manager.py,"PulseError(""Channel index must be a nonnegative integer"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/pulse/parameter_manager.py,"PulseError(f""Node type {node.__class__.__name__} has no parameter manager."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/pulse/calibration_entries.py,"PulseError(f""Arguments must be name of parameters. Not {arguments}."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/pulse/calibration_entries.py,"PulseError(
    ""Specified arguments don't match with schedule parameters. ""
    f""{self._user_arguments} != {self._definition.parameters}.""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/pulse/calibration_entries.py,"PulseError(
    ""Assigned parameter doesn't match with schedule parameters.""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/pulse/calibration_entries.py,"PulseError(""Assigned parameter doesn't match with function signature."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/pulse/schedule.py,"TypeError(""Only a dictionary or None is accepted for schedule metadata"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/pulse/schedule.py,"PulseError(
    f""{cls.__name__} cannot be initialized from the program data ""
    f""{other_program.__class__.__name__}.""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/pulse/schedule.py,"TypeError(""Only a dictionary or None is accepted for schedule metadata"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/pulse/schedule.py,"PulseError(""Schedule start time must be an integer."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/pulse/schedule.py,"PulseError(""Schedule start time must be an integer."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/pulse/schedule.py,"PulseError(
    ""Schedule(name='{new}') cannot be inserted into Schedule(name='{old}') at ""
    ""time {time} because its instruction on channel {ch} scheduled from time ""
    ""{t0} to {tf} overlaps with an existing instruction.""
    """".format(
        new=schedule.name or """",
        old=self.name or """",
        time=time,
        ch=channel,
        t0=interval[0],
        tf=interval[1],
    )
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/pulse/schedule.py,"PulseError(""Schedule start time must be an integer."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/pulse/schedule.py,"PulseError(f""The channel {channel} is not present in the schedule"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/pulse/schedule.py,"PulseError(
    ""Cannot find interval ({t0}, {tf}) to remove from ""
    ""channel {ch} in Schedule(name='{name}')."".format(
        ch=channel, t0=interval[0], tf=interval[1], name=schedule.name
    )
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/pulse/schedule.py,"PulseError(
    f""Replacement of {old} with {new} results in overlapping instructions.""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/pulse/schedule.py,"TypeError(""Only a dictionary or None is accepted for schedule metadata"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/pulse/schedule.py,"PulseError(
    f""{cls.__name__} cannot be initialized from the program data ""
    f""{other_program.__class__.__name__}.""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/pulse/schedule.py,"TypeError(""Only a dictionary or None is accepted for schedule metadata"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/pulse/schedule.py,"UnassignedReferenceError(
    f""This schedule contains unassigned reference {elm.ref_keys} ""
    ""and channels are ambiguous. Please assign the subroutine first.""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/pulse/schedule.py,"PulseError(
    f""Appended `schedule` {block.__class__.__name__} is invalid type. ""
    ""Only `Instruction` and `ScheduleBlock` can be accepted.""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/pulse/schedule.py,"PulseError(
    ""Method ``ScheduleBlock.filter`` is not supported as this program ""
    ""representation does not have the notion of an explicit instruction ""
    ""time. Apply ``qiskit.pulse.transforms.block_to_schedule`` function to ""
    ""this program to obtain the ``Schedule`` representation supporting ""
    ""this method.""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/pulse/schedule.py,"PulseError(
    ""Method ``ScheduleBlock.exclude`` is not supported as this program ""
    ""representation does not have the notion of instruction ""
    ""time. Apply ``qiskit.pulse.transforms.block_to_schedule`` function to ""
    ""this program to obtain the ``Schedule`` representation supporting ""
    ""this method.""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/pulse/schedule.py,"PulseError(
    f""Reference instruction with {key} doesn't exist ""
    f""in the current scope: {unassigned_keys}""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/pulse/schedule.py,"PulseError(f""The interval: {interval} does not exist in intervals: {intervals}"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/pulse/schedule.py,"PulseError(""New interval overlaps with existing."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/pulse/schedule.py,"PulseError(f""An instruction on {chan} has a negative starting time."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/pulse/schedule.py,"PulseError(f""Invalid schedule type {type(schedule)} is specified."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/pulse/configuration.py,"PulseError(""Specified channel %s cannot be configured."" % channel.name)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/pulse/configuration.py,"PulseError(f""Specified LO freq {freq:f} is out of range {lo_range}"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/pulse/configuration.py,"PulseError(""Channel %s is not configured"" % channel)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/pulse/macros.py,"exceptions.PulseError(
    ""inst_map or meas_map, and backend cannot be None simultaneously""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/pulse/macros.py,"exceptions.PulseError(
    ""We could not find a default measurement schedule called '{}'. ""
    ""Please provide another name using the 'measure_name' keyword ""
    ""argument. For assistance, the instructions which are defined are: ""
    ""{}"".format(measure_name, inst_map.instructions)
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/pulse/macros.py,"exceptions.PulseError(
    ""We could not find a default measurement schedule called '{}'. ""
    ""Please provide another name using the 'measure_name' keyword ""
    ""argument. For assistance, the instructions which are defined are: ""
    ""{}"".format(measure_name, target.instructions)
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/pulse/builder.py,"exceptions.BackendNotSet(
    'This function requires the builder to have a ""backend"" set.'
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/pulse/builder.py,"exceptions.PulseError(
    f""Input `block` type {block.__class__.__name__} is ""
    ""not a valid format. Specify a pulse program.""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/pulse/builder.py,"exceptions.PulseError(
    f""Given `default_alignment` {repr(default_alignment)} is ""
    ""not a valid transformation. Set one of ""
    f'{"", "".join(_PulseBuilder.__alignment_kinds__.keys())}, '
    ""or set an instance of `AlignmentKind` subclass.""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/pulse/builder.py,"exceptions.PulseError(""The root context cannot be popped out."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/pulse/builder.py,"exceptions.PulseError(
    f""'{subroutine.__class__.__name__}' is not valid data format in the builder. ""
    ""'Schedule' and 'ScheduleBlock' can be appended to the builder context.""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/pulse/builder.py,"exceptions.PulseError(
    f""Subroutine type {subroutine.__class__.__name__} is ""
    ""not valid data format. Call QuantumCircuit, ""
    ""Schedule, or ScheduleBlock.""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/pulse/builder.py,"exceptions.PulseError(
    f""Parameter {param_name} is not defined in the target subroutine. ""
    f'{"", "".join(map(str, target_block.parameters))} can be specified.'
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/pulse/builder.py,"exceptions.NoActiveBuilder(
    ""A Pulse builder function was called outside of ""
    ""a builder context. Try calling within a builder ""
    'context, eg., ""with pulse.build() as schedule: ..."".'
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/pulse/builder.py,"exceptions.BackendNotSet(
    'This function requires the active builder to have a ""backend"" set.'
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/pulse/builder.py,"exceptions.PulseError(
    f'{channel_or_qubit} is not a ""Channel"" or qubit (integer).'
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/pulse/builder.py,"exceptions.PulseError(""Input alignment context is not `AlignmentKind` subclass."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/pulse/builder.py,"exceptions.PulseError(f'Register of type: ""{type(register)}"" is not supported')"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/pulse/channels.py,"NotImplementedError(
    ""Cannot instantiate abstract channel. ""
    ""See Channel documentation for more information.""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/pulse/channels.py,"PulseError(""Channel index must be a nonnegative integer"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/pulse/parser.py,"PulseError(f""{source} is invalid expression."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/pulse/parser.py,"PulseError(
    ""%s got multiple values for argument '%s'""
    % (self.__class__.__name__, key)
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/pulse/parser.py,"PulseError(
    ""%s got an unexpected keyword argument '%s'""
    % (self.__class__.__name__, key)
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/pulse/parser.py,"PulseError(""Parameters %s are not all bound."" % self.params)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/pulse/parser.py,"PulseError(""Operator %s is not supported."" % opr.__class__.__name__)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/pulse/parser.py,"PulseError(
    f""Invalid parameter value {node.id} = {self._locals_dict[node.id]} is ""
    ""specified.""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/pulse/parser.py,"PulseError(""Unsafe expression is detected."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/pulse/parser.py,"PulseError(""Function %s is not supported."" % node.func.id)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/pulse/parser.py,"PulseError(""Unsupported node: %s"" % node.__class__.__name__)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/pulse/instruction_schedule_map.py,"PulseError(
    ""Operation '{inst}' exists, but is only defined for qubits ""
    ""{qubits}."".format(
        inst=instruction, qubits=self.qubits_with_instruction(instruction)
    )
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/pulse/instruction_schedule_map.py,"PulseError(f""Operation '{instruction}' is not defined for this system."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/pulse/instruction_schedule_map.py,"PulseError(f""Cannot add definition {instruction} with no target qubits."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/pulse/instruction_schedule_map.py,"PulseError(
    ""Supplied schedule must be one of the Schedule, ScheduleBlock or a ""
    ""callable that outputs a schedule.""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/pulse/instruction_schedule_map.py,"PulseError(
    'Input ""inst"" has no attribute ""name"". This should be a circuit ""Instruction"".'
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/pulse/reference_manager.py,"PulseError(
    f""Subroutine {key} is already assigned to the reference of the current scope, ""
    ""however, the newly assigned schedule conflicts with the existing schedule. ""
    ""This operation was not successfully done.""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/pulse/utils.py,"UnassignedDurationError(
    ""Instruction duration {} is not assigned. ""
    ""Please bind all durations to an integer value before playing in the Schedule, ""
    ""or use ScheduleBlock to align instructions with unassigned duration.""
    """".format(repr(duration))
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/pulse/utils.py,"QiskitError(
    f""Instruction duration must be a non-negative integer, got {duration} instead.""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/pulse/library/parametric_pulses.py,NotImplementedError
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/pulse/library/parametric_pulses.py,NotImplementedError
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/pulse/library/parametric_pulses.py,"PulseError(
    f""The amplitude norm must be <= 1, found: {abs(self.amp)}""
    + ""This can be overruled by setting Pulse.limit_amplitude.""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/pulse/library/parametric_pulses.py,"PulseError(""Sigma must be greater than 0."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/pulse/library/parametric_pulses.py,"PulseError(
    ""Either the pulse width or the risefall_sigma_ratio parameter can be specified""
    "" but not both.""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/pulse/library/parametric_pulses.py,"PulseError(
    f""The amplitude norm must be <= 1, found: {abs(self.amp)}""
    + ""This can be overruled by setting Pulse.limit_amplitude.""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/pulse/library/parametric_pulses.py,"PulseError(""Sigma must be greater than 0."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/pulse/library/parametric_pulses.py,"PulseError(
    ""Either the pulse width or the risefall_sigma_ratio parameter must be specified.""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/pulse/library/parametric_pulses.py,"PulseError(""The pulse width must be at least 0."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/pulse/library/parametric_pulses.py,"PulseError(""The pulse width must be less than its duration."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/pulse/library/parametric_pulses.py,"PulseError(""The parameter risefall_sigma_ratio must be greater than 0."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/pulse/library/parametric_pulses.py,"PulseError(
    ""The parameter risefall_sigma_ratio must be less than duration/(""
    ""2*sigma)={}."".format(self.duration / (2.0 * self.sigma))
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/pulse/library/parametric_pulses.py,"PulseError(
    f""The amplitude norm must be <= 1, found: {abs(self.amp)}""
    + ""This can be overruled by setting Pulse.limit_amplitude.""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/pulse/library/parametric_pulses.py,"PulseError(""Sigma must be greater than 0."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/pulse/library/parametric_pulses.py,"PulseError(""Beta must be real."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/pulse/library/parametric_pulses.py,"PulseError(""Beta is too large; pulse amplitude norm exceeds 1."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/pulse/library/parametric_pulses.py,"PulseError(
    f""The amplitude norm must be <= 1, found: {abs(self.amp)}""
    + ""This can be overruled by setting Pulse.limit_amplitude.""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/pulse/library/symbolic_pulses.py,"PulseError(
    f""Pulse parameter '{symbol.name}' is not defined for this instance. ""
    ""Please check your waveform expression is correct.""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/pulse/library/symbolic_pulses.py,"PulseError(f""'{self.attribute}' of '{instance.pulse_type}' is not assigned."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/pulse/library/symbolic_pulses.py,"AttributeError(f""'{self.__class__.__name__}' object has no attribute '{item}'"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/pulse/library/symbolic_pulses.py,"PulseError(""Unassigned parameter exists. All parameters must be assigned."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/pulse/library/symbolic_pulses.py,"PulseError(""Pulse envelope expression is not assigned."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/pulse/library/symbolic_pulses.py,"PulseError(
    f""Assigned parameters {param_repr} violate following constraint: {const_repr}.""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/pulse/library/symbolic_pulses.py,"PulseError(
    f""Maximum pulse amplitude norm exceeds 1.0 with parameters {param_repr}.""
    ""This can be overruled by setting Pulse.limit_amplitude.""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/pulse/library/symbolic_pulses.py,"PulseError(""amp can't be complex with angle not None or 0"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/pulse/library/symbolic_pulses.py,"PulseError(
    ""Either the pulse width or the risefall_sigma_ratio parameter must be specified.""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/pulse/library/symbolic_pulses.py,"PulseError(
    ""Either the pulse width or the risefall_sigma_ratio parameter can be specified""
    "" but not both.""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/pulse/library/symbolic_pulses.py,"PulseError(
    ""Either the pulse width or the risefall_sigma_ratio parameter must be specified.""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/pulse/library/symbolic_pulses.py,"PulseError(
    ""Either the pulse width or the risefall_sigma_ratio parameter can be specified""
    "" but not both.""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/pulse/library/waveform.py,"PulseError(
    f""Pulse contains sample with norm {amp} greater than 1+epsilon.""
    "" This can be overruled by setting Pulse.limit_amplitude.""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/pulse/library/continuous.py,"PulseError(""zeroed_width cannot be smaller than square_width."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/pulse/library/discrete.py,"PulseError(""gaussian_square missing required argument: 'width' or 'risefall'."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/pulse/library/discrete.py,"PulseError(
    ""Both width and risefall were specified, and they are ""
    ""inconsistent: 2 * risefall + width == {} != ""
    ""duration == {}."".format(2 * risefall + width, duration)
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/pulse/library/pulse.py,NotImplementedError
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/pulse/library/pulse.py,NotImplementedError
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/pulse/library/pulse.py,NotImplementedError
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/pulse/library/samplers/decorators.py,"PulseError(""The first argument must be an integer value representing duration."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/pulse/instructions/call.py,"PulseError(f""Subroutine type {subroutine.__class__.__name__} cannot be called."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/pulse/instructions/call.py,"PulseError(
    ""Key mismatch between new arguments and existing arguments. ""
    f""{new_arg_names} != {old_arg_names}""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/pulse/instructions/phase.py,"PulseError(f""Expected a pulse channel, got {self.channel} instead."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/pulse/instructions/phase.py,"PulseError(f""Expected a pulse channel, got {self.channel} instead."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/pulse/instructions/acquire.py,"PulseError(f""Expected an acquire channel, got {self.channel} instead."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/pulse/instructions/acquire.py,"PulseError(f""Expected a memory slot, got {self.mem_slot} instead."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/pulse/instructions/acquire.py,"PulseError(f""Expected a register slot, got {self.reg_slot} instead."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/pulse/instructions/acquire.py,"PulseError(""Neither MemorySlots nor RegisterSlots were supplied."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/pulse/instructions/snapshot.py,"PulseError(""Snapshot label must be a string."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/pulse/instructions/play.py,"PulseError(""The `pulse` argument to `Play` must be of type `library.Pulse`."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/pulse/instructions/play.py,"PulseError(f""Expected a pulse channel, got {self.channel} instead."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/pulse/instructions/instruction.py,"PulseError(f""Expected a channel, got {channel} instead."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/pulse/instructions/instruction.py,NotImplementedError
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/pulse/instructions/instruction.py,NotImplementedError
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/pulse/instructions/directives.py,"PulseError(
    ""TimeBlockade duration cannot be parameterized. Specify an integer duration value.""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/pulse/instructions/reference.py,"PulseError(f""Keys must be strings. '{repr(key)}' is not a valid object."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/pulse/instructions/reference.py,"PulseError(
    f""'{self.scope_delimiter}' and '{self.key_delimiter}' are reserved. ""
    f""'{key}' is not a valid key string.""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/pulse/instructions/reference.py,"UnassignedReferenceError(f""Subroutine is not assigned to {self.ref_keys}."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/pulse/instructions/reference.py,"UnassignedReferenceError(f""Subroutine is not assigned to {self.ref_keys}."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/pulse/instructions/frequency.py,"PulseError(f""Expected a pulse channel, got {self.channel} instead."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/pulse/instructions/frequency.py,"PulseError(f""Expected a pulse channel, got {self.channel} instead."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/pulse/transforms/canonicalization.py,"UnassignedDurationError(
    ""All instruction durations should be assigned before creating `Schedule`.""
    ""Please check `.parameters` to find unassigned parameter objects.""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/pulse/transforms/canonicalization.py,"PulseError(
    f""ScheduleBlock {op_data.name} has longer duration than ""
    ""the specified context duration ""
    f""{context_schedule.duration} > {op_data.duration}.""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/pulse/transforms/canonicalization.py,"PulseError(f""Invalid input program {program.__class__.__name__} is specified."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/pulse/transforms/canonicalization.py,"PulseError(f""Invalid program {program.__class__.__name__} is specified."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/pulse/transforms/canonicalization.py,"PulseError(
    f""A subroutine {subroutine.name} is a pulse Schedule. ""
    ""This program cannot be inserted into ScheduleBlock because ""
    ""t0 associated with instruction will be lost.""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/pulse/transforms/canonicalization.py,"exceptions.PulseError(""Align time cannot be negative."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/qiskit/pulse/transforms/canonicalization.py,"PulseError(
    f""'{pad_with.__class__.__name__}' is not valid pulse instruction to pad with.""
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/test/python/dagcircuit/test_dagcircuit.py,"DAGCircuitError(""multi_graph is not a DAG."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/test/python/dagcircuit/test_dagcircuit.py,"DAGCircuitError(f""Found node of unexpected type: {type(node)}"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/test/python/dagcircuit/test_dagcircuit.py,"DAGCircuitError(
    ""multi_graph contains one or more edges ({}) ""
    ""not found in DAGCircuit.wires ({})."".format(edges_outside_wires, dag.wires)
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/test/python/dagcircuit/test_dagdependency.py,"DAGDependencyError(""multi_graph is not a DAG."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/test/python/dagcircuit/test_dagdependency.py,"DAGDependencyError(f""Found node of unexpected type: {node.type}"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/test/python/quantum_info/test_quaternions.py,"ValueError(""Invalid axis."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/test/python/quantum_info/operators/symplectic/test_stabilizer_table.py,"QiskitError(f""Invalid stabilizer string {i}"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/test/python/quantum_info/operators/symplectic/test_pauli_table.py,"QiskitError(f""Invalid Pauli string {i}"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/test/python/quantum_info/operators/symplectic/test_sparse_pauli_op.py,"QiskitError(f""Invalid Pauli string {i}"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/test/python/quantum_info/operators/symplectic/test_pauli_list.py,"QiskitError(f""Invalid Pauli string {i}"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/test/python/primitives/test_backend_sampler.py,"ValueError(f""invalid index {indices}"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/test/python/primitives/test_backend_sampler.py,"ValueError(f""invalid index {indices}"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/test/python/primitives/test_sampler.py,"ValueError(f""invalid index {indices}"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/test/python/primitives/test_sampler.py,"ValueError(f""invalid index {indices}"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/test/python/algorithms/test_phase_estimator.py,"ValueError(""Unrecognized phase_estimator"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/test/python/algorithms/test_phase_estimator.py,"ValueError(""Unrecognized phase_estimator"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/test/python/visualization/visualization.py,"self.failureException(""Result file was not generated."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/test/python/visualization/visualization.py,"self.failureException(""Result and reference do not match."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/test/python/circuit/test_control_flow_builders.py,SentinelException
data/qiskit-terra-version-0.24.1-commit-e0c061d/test/python/circuit/test_control_flow_builders.py,SentinelException
data/qiskit-terra-version-0.24.1-commit-e0c061d/test/python/circuit/test_control_flow_builders.py,SentinelException
data/qiskit-terra-version-0.24.1-commit-e0c061d/test/python/circuit/test_control_flow_builders.py,SentinelException
data/qiskit-terra-version-0.24.1-commit-e0c061d/test/python/circuit/test_control_flow_builders.py,SentinelException
data/qiskit-terra-version-0.24.1-commit-e0c061d/test/python/circuit/test_control_flow_builders.py,SentinelException
data/qiskit-terra-version-0.24.1-commit-e0c061d/test/python/circuit/test_control_flow_builders.py,SentinelException
data/qiskit-terra-version-0.24.1-commit-e0c061d/test/python/circuit/test_control_flow_builders.py,CircuitError
data/qiskit-terra-version-0.24.1-commit-e0c061d/test/python/circuit/test_instructions.py,CircuitError
data/qiskit-terra-version-0.24.1-commit-e0c061d/test/python/circuit/test_instructions.py,CircuitError
data/qiskit-terra-version-0.24.1-commit-e0c061d/test/python/circuit/test_parameters.py,"CircuitError(
    ""Circuit/ParameterTable Parameter mismatch. ""
    ""Circuit parameters: {}. ""
    ""Table parameters: {}."".format(circuit_parameters, table_parameters)
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/test/python/circuit/test_parameters.py,"CircuitError(f""ParameterTable instruction not present in circuit: {instr}."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/test/python/circuit/test_parameters.py,"CircuitError(
    ""ParameterTable instruction does not have a ""
    ""ParameterExpression at param_index {}: {}.""
    """".format(param_index, instr)
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/test/python/circuit/test_parameters.py,"CircuitError(
    ""ParameterTable instruction parameters does ""
    ""not match ParameterTable key. Instruction ""
    ""parameters: {} ParameterTable key: {}.""
    """".format(instr.params[param_index].parameters, parameter)
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/test/python/circuit/test_parameters.py,"CircuitError(
    ""Found parameterized instruction not ""
    ""present in table. Instruction: {} ""
    ""param_index: {}"".format(instruction.operation, param_index)
)"
data/qiskit-terra-version-0.24.1-commit-e0c061d/test/python/circuit/library/test_blueprintcircuit.py,"AttributeError(""The number of qubits was not set."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/test/python/circuit/library/test_blueprintcircuit.py,"ValueError(""The number of qubits must at least be 1."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/test/python/circuit/library/test_mcmt.py,"ValueError(f""Test not implement for gate: {cgate}"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/test/python/circuit/library/test_qft.py,self
data/qiskit-terra-version-0.24.1-commit-e0c061d/test/python/transpiler/test_stochastic_swap.py,"Exception(""Invalid number of qargs for instruction"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/test/python/transpiler/test_pass_scheduler.py,sys.exc_info()
data/qiskit-terra-version-0.24.1-commit-e0c061d/test/python/transpiler/test_instruction_durations.py,"ValueError(""Unable to find a gate with gate length."")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/test/python/transpiler/test_preset_passmanagers.py,"Exception(""Failure, unexpected stage plugin combo for test"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/test/python/transpiler/test_sabre_swap.py,"Exception(""SabreSwap seems to be stuck in a loop"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/test/python/compiler/test_assembler.py,sys.exc_info()
data/qiskit-terra-version-0.24.1-commit-e0c061d/test/python/compiler/test_transpiler.py,sys.exc_info()
data/qiskit-terra-version-0.24.1-commit-e0c061d/test/python/compiler/test_transpiler.py,NotImplementedError
data/qiskit-terra-version-0.24.1-commit-e0c061d/test/python/compiler/test_transpiler.py,"unittest.SkipTest(""unitary resynthesis fails due to gh-10004"")"
data/qiskit-terra-version-0.24.1-commit-e0c061d/test/python/basicaer/test_qasm_simulator.py,sys.exc_info()
data/qiskit-terra-version-0.24.1-commit-e0c061d/test/python/basicaer/test_basicaer_qobj_headers.py,sys.exc_info()
data/qiskit-terra-version-0.24.1-commit-e0c061d/test/python/qasm2/test_parse_errors.py,inner_exception
data/qiskit-terra-version-0.24.1-commit-e0c061d/test/randomized/test_transpiler_equivalence.py,RuntimeError(failed_qasm)
data/qiskit-terra-version-0.24.1-commit-e0c061d/test/ipynb/mpl/graph/test_graph_matplotlib_drawer.py,"ImportError('Must have Matplotlib installed. To install, run ""pip install matplotlib"".')"
data/qiskit-terra-version-0.24.1-commit-e0c061d/test/ipynb/mpl/circuit/test_circuit_matplotlib_drawer.py,"ImportError('Must have Matplotlib installed. To install, run ""pip install matplotlib"".')"
